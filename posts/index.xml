<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on semiosis</title>
        <link>http://semiosis.github.io/posts/</link>
        <description>Recent content in Posts on semiosis</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Mon, 29 Mar 2021 00:00:00 +1300</lastBuildDate>
        <atom:link href="http://semiosis.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>GPT-3 mind maps with an AI tutor for any topic</title>
            <link>http://semiosis.github.io/posts/gpt-3-for-building-mind-maps-with-an-ai-tutor-for-any-topic/</link>
            <pubDate>Mon, 29 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/gpt-3-for-building-mind-maps-with-an-ai-tutor-for-any-topic/</guid>
            <description>Code http://github.com/semiosis/pen.el Prompts http://github.com/semiosis/prompts  Summary I combine GPT-3 with org-brain to expand on topics, suggesting subtopics and providing an interactive tutor for any topic.
Demonstration Learning the flamenco guitar &amp;ndash; subtopic generation and tutor  --  Subtopic generation I demonstrate how to explore arbitrary topics with GPT-3 by automatically generating subtopics, and then allowing you to invoke the GPT-3 tutor to answer questions within that context.
 --  Tutor demonstration  Rolling conversation is a work in progress, but on its way.</description>
            <content type="html"><![CDATA[<dl>
<dt>Code</dt>
<dd><a href="http://github.com/semiosis/pen.el">http://github.com/semiosis/pen.el</a></dd>
<dt>Prompts</dt>
<dd><a href="http://github.com/semiosis/prompts">http://github.com/semiosis/prompts</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I combine GPT-3 with <code>org-brain</code> to expand on
topics, <strong>suggesting</strong> subtopics and providing an
interactive tutor for any topic.</p>
<h2 id="demonstration">Demonstration</h2>
<h3 id="learning-the-flamenco-guitar-subtopic-generation-and-tutor">Learning the flamenco guitar &ndash; subtopic generation and tutor</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/JA82zhiL4Su0LVufE7gqH7Mej" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/JA82zhiL4Su0LVufE7gqH7Mej.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/JA82zhiL4Su0LVufE7gqH7Mej.js" id="asciicast-JA82zhiL4Su0LVufE7gqH7Mej" async></script>
<h3 id="subtopic-generation">Subtopic generation</h3>
<p>I demonstrate how to explore arbitrary topics
with GPT-3 by automatically generating
subtopics, and then allowing you to invoke the
GPT-3 tutor to answer questions within that
context.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/3D1xmyAB3wZiPMu3d7rnK8Izd" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/3D1xmyAB3wZiPMu3d7rnK8Izd.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/3D1xmyAB3wZiPMu3d7rnK8Izd.js" id="asciicast-3D1xmyAB3wZiPMu3d7rnK8Izd" async></script>
<h3 id="tutor-demonstration">Tutor demonstration</h3>
<ul>
<li>Rolling conversation is a work in progress, but on its way.</li>
</ul>
<p><span class="underline"><strong>Learn about AI</strong></span></p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/tV37yuypzU8C4ttDL4w24HOtx" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/tV37yuypzU8C4ttDL4w24HOtx.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/tV37yuypzU8C4ttDL4w24HOtx.js" id="asciicast-tV37yuypzU8C4ttDL4w24HOtx" async></script>
<p><span class="underline"><strong>Learn about microbiology</strong></span></p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/R25hFKsdKc1wcfbMGeXnXa0iJ" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/R25hFKsdKc1wcfbMGeXnXa0iJ.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/R25hFKsdKc1wcfbMGeXnXa0iJ.js" id="asciicast-R25hFKsdKc1wcfbMGeXnXa0iJ" async></script>
<h2 id="code">Code</h2>
<h3 id="subtopic-prompt">Subtopic prompt</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;subtopic generation&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following is a list of subtopics relating to microbiology:
</span><span style="color:#e6db74">    - Bacteriology
</span><span style="color:#e6db74">    - Mycology
</span><span style="color:#e6db74">    - Protozoology
</span><span style="color:#e6db74">    - Phycology/algology
</span><span style="color:#e6db74">    - Parasitology
</span><span style="color:#e6db74">    - Immunology
</span><span style="color:#e6db74">    - Virology
</span><span style="color:#e6db74">    - Nematology
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    The following is a list of subtopics relating to natural language processing / NLP:
</span><span style="color:#e6db74">    - extractive question answering
</span><span style="color:#e6db74">    - language modelling
</span><span style="color:#e6db74">    - named entity recognition
</span><span style="color:#e6db74">    - sequence classification
</span><span style="color:#e6db74">    - summarization
</span><span style="color:#e6db74">    - text generation
</span><span style="color:#e6db74">    - topic modelling
</span><span style="color:#e6db74">    - translation
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    The following is a list of subtopics relating to language modelling in NLP:
</span><span style="color:#e6db74">    - casual language modelling
</span><span style="color:#e6db74">    - masked language modelling
</span><span style="color:#e6db74">    - gext generation
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    The following is a list of subtopics relating to &lt;1&gt;:
</span><span style="color:#e6db74">    -</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#75715e"># Cache the function by default when running the prompt function</span>
<span style="color:#f92672">cache</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;topic&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;Advanced Type Systems in Haskell&#34;</span>
<span style="color:#75715e"># External provides an alternate script that performs the same function</span>
<span style="color:#75715e"># external:</span>
<span style="color:#75715e"># - &#34;extract-keyphrases&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="tutor-prompt">Tutor prompt</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">title: <span style="color:#e6db74">&#34;Generic tutor for any topic&#34;</span>
prompt: <span style="color:#f92672">|+</span>
    This <span style="color:#f92672">is</span> a conversation between a human <span style="color:#f92672">and</span> a brilliant AI<span style="color:#f92672">.</span>
    The topic <span style="color:#f92672">is</span> <span style="color:#e6db74">&#34;&lt;1&gt;&#34;</span><span style="color:#f92672">.</span>

    Human: Hello, are you my <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">2</span><span style="color:#f92672">&gt;</span> tutor<span style="color:#960050;background-color:#1e0010">?</span>
    <span style="color:#75715e">###</span>
    AI: Hi there<span style="color:#f92672">.</span> Yes I am<span style="color:#f92672">.</span> How can I help you today<span style="color:#960050;background-color:#1e0010">?</span>
    <span style="color:#75715e">###</span>
    Human: What questions can I ask you about <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">1</span><span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">?</span>
    <span style="color:#75715e">###</span>
    AI: You may ask me anything relating to <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">2</span><span style="color:#f92672">&gt;.</span>
    <span style="color:#75715e">###</span>
    Human: OK then<span style="color:#f92672">.</span> <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">3</span><span style="color:#f92672">&gt;</span>
    <span style="color:#75715e">###</span>
    AI: I would be happy to answer your question<span style="color:#f92672">.</span>
engine: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
temperature: <span style="color:#ae81ff">0.8</span>
max<span style="color:#f92672">-</span>tokens: <span style="color:#ae81ff">60</span>
top<span style="color:#f92672">-</span>p: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
frequency<span style="color:#f92672">-</span>penalty: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
presence<span style="color:#f92672">-</span>penalty: <span style="color:#ae81ff">0.0</span>
best<span style="color:#f92672">-</span>of: <span style="color:#ae81ff">3</span>
stop<span style="color:#f92672">-</span>sequences:
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;###&#34;</span>
inject<span style="color:#f92672">-</span>start<span style="color:#f92672">-</span>text: yes
inject<span style="color:#f92672">-</span>restart<span style="color:#f92672">-</span>text: yes
show<span style="color:#f92672">-</span>probabilities: off
vars:
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;topic&#34;</span>
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;in the context of&#34;</span>
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;question&#34;</span>
examples:
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;node js&#34;</span>
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;programming&#34;</span>
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;What was the version of node in 2018?&#34;</span>
chomp<span style="color:#f92672">-</span>start: on
chomp<span style="color:#f92672">-</span>end: off
external: <span style="color:#e6db74">&#34;&#34;</span>
conversation<span style="color:#f92672">-</span>mode: no
filter: no
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
stitch<span style="color:#f92672">-</span>max: <span style="color:#ae81ff">0</span>
needs<span style="color:#f92672">-</span>work: no</code></pre></td></tr></table>
</div>
</div>
<h3 id="elisp-for-the-tutor">elisp for the tutor</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun org-brain-name-from-list-maybe (l)
  (if (and (<span style="color:#a6e22e">listp</span> l)
           (<span style="color:#a6e22e">&gt;</span> (<span style="color:#a6e22e">length</span> l) <span style="color:#ae81ff">1</span>))
      (second l)
    l))

(defun org-brain-remove-irrelevant-names-from-path (path)
  (-filter
   (lambda
     (e)
     (not
      (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;infogetics&#34;</span> e)))
   path))

(defun org-brain-parent-name ()
  (snc <span style="color:#e6db74">&#34;s join&#34;</span>
       (list2str
        (org-brain-remove-irrelevant-names-from-path
         (<span style="color:#a6e22e">mapcar</span>
          <span style="color:#e6db74">&#39;org-brain-name-from-list-maybe</span>
          (org-brain-parents org-brain--vis-entry))))))

(defun org-brain-current-name ()
  (<span style="color:#a6e22e">car</span>
   (org-brain-remove-irrelevant-names-from-path
    (<span style="color:#a6e22e">mapcar</span>
     <span style="color:#e6db74">&#39;org-brain-name-from-list-maybe</span>
     (<span style="color:#a6e22e">list</span> org-brain--vis-entry)))))

(defun org-brain-current-topic (<span style="color:#66d9ef">&amp;optional</span> for-external-searching)
  (interactive)
  (let ((path
         (<span style="color:#a6e22e">mapcar</span>
          <span style="color:#e6db74">&#39;org-brain-name-from-list-maybe</span>
          (<span style="color:#a6e22e">append</span> (org-brain-parents org-brain--vis-entry) (<span style="color:#a6e22e">list</span> org-brain--vis-entry)))))

    (setq path
          (if for-external-searching
              (-filter (lambda (e) (not (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;infogetics&#34;</span> e))) path)
            path))
    (let ((topic
           (chomp (<span style="color:#a6e22e">apply</span> <span style="color:#e6db74">&#39;cmd</span> path))))
      (if (interactive-p)
          (etv topic)
        topic))))

(defun org-brain-asktutor (question)
  (interactive (<span style="color:#a6e22e">list</span> (read-string-hist (<span style="color:#a6e22e">concat</span> (org-brain-current-topic) <span style="color:#e6db74">&#34;: &#34;</span>))))
  (mu
   (etv
    (snc
     (<span style="color:#a6e22e">concat</span>
      (cmd
       <span style="color:#e6db74">&#34;oci&#34;</span>
       <span style="color:#e6db74">&#34;openai-complete&#34;</span>
       <span style="color:#e6db74">&#34;$MYGIT/semiosis/prompts/prompts/tutor.prompt&#34;</span>
       (org-brain-current-name)
       (org-brain-parent-name)
       question)
      <span style="color:#e6db74">&#34; | tpp&#34;</span>)))))</code></pre></td></tr></table>
</div>
</div>
<h3 id="elisp-for-subtopic-generation">elisp for subtopic generation</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun org-brain-suggest-subtopics (<span style="color:#66d9ef">&amp;optional</span> update)
  (interactive)
  (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Using pen.el to suggest subtopics...&#34;</span>)
  (let ((subtopic-candidates
         <span style="color:#75715e">;; (pen-pf-keyword-extraction (org-brain-current-topic t))</span>
         (let ((sh-update (or sh-update
                              update
                              (<span style="color:#a6e22e">eq</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">4</span>))))
           (let ((s (pen-pf-subtopic-generation (org-brain-pf-topic) (org-brain-existing-subtopics-stringlist))))
             (if (not (sor s))
                 (progn
                   (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Empty generation 1/3. Trying again.&#34;</span>)
                   (setq s (upd (pen-pf-subtopic-generation (org-brain-pf-topic) (org-brain-existing-subtopics-stringlist))))
                   (if (not (sor s))
                       (progn
                         (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Empty generation 2/3. Trying again.&#34;</span>)
                         (setq s (upd (pen-pf-subtopic-generation (org-brain-pf-topic) (org-brain-existing-subtopics-stringlist))))
                         (if (not (sor s))
                             (progn
                               (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Empty generation 3/3. Giving up.&#34;</span>)
                               (<span style="color:#a6e22e">error</span> <span style="color:#e6db74">&#34;Empty generation 3/3. Giving up.&#34;</span>))
                           s))
                     s)
                   s)
               s)))))

    (setq subtopic-candidates
          (str2list
           (cl-sn
            <span style="color:#e6db74">&#34;sed &#39;s/^- //&#39;&#34;</span>
            :stdin
            (chomp
             (snc
              (cmd <span style="color:#e6db74">&#34;scrape&#34;</span> <span style="color:#e6db74">&#34;^- [a-zA-Z -]+$&#34;</span>)
              (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;- &#34;</span> subtopic-candidates))) :chomp <span style="color:#66d9ef">t</span>)))

    <span style="color:#75715e">;; (ns current-prefix-arg)</span>
    (if (interactive-p)
        (let ((subtopic-selected
               (try
                (cond
                 ((or (<span style="color:#a6e22e">&gt;=</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">16</span>)
                      (<span style="color:#a6e22e">&gt;=</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">32</span>))
                  (let ((b (nbfs (list2str subtopic-candidates))))
                    (with-current-buffer b
                      (let ((r (if (yn <span style="color:#e6db74">&#34;Add all?&#34;</span>)
                                   subtopic-candidates)))
                        (<span style="color:#a6e22e">kill-buffer</span> b)
                        r))))
                 (<span style="color:#66d9ef">t</span>
                  <span style="color:#75715e">;; Select one, do not refresh cache</span>
                  (<span style="color:#a6e22e">list</span> (fz subtopic-candidates)))))))
          (if subtopic-selected
              (cl-loop for st in subtopic-selected do
                       (org-brain-add-child-headline org-brain--vis-entry st))))
      subtopic-candidates)))</code></pre></td></tr></table>
</div>
</div>
<h2 id="pen-dot-el-improvements"><code>pen.el</code> improvements</h2>
<ul>
<li>The plan is to link <code>.prompt</code> (prompt description) files into a graph format where fungible prompts can be noticed.</li>
<li>Conversation mode.
<ul>
<li>Summarize the current conversation scope and also extract facts from it. Use this in the next prompt.</li>
<li>This will create a chatbot with rolling conversation.</li>
<li><a href="http://github.com/semiosis/prompts/blob/master/prompts/meeting-bullets-to-summary.prompt">http://github.com/semiosis/prompts/blob/master/prompts/meeting-bullets-to-summary.prompt</a></li>
<li><a href="http://github.com/semiosis/prompts/blob/master/prompts/tldr.prompt">http://github.com/semiosis/prompts/blob/master/prompts/tldr.prompt</a></li>
<li><a href="http://github.com/semiosis/prompts/blob/master/prompts/tutor.prompt">http://github.com/semiosis/prompts/blob/master/prompts/tutor.prompt</a></li>
</ul>
</li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Generating pickup lines with GPT-3</title>
            <link>http://semiosis.github.io/posts/generating-pickup-lines-with-gpt-3/</link>
            <pubDate>Sat, 27 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/generating-pickup-lines-with-gpt-3/</guid>
            <description>Original prompt https://www.reddit.com/r/GPT3/comments/mdl7fl/500%5Fopeners%5Ffor%5Ftinder%5Fwritten%5Fby%5Fgpt3%5Fthe%5Fprompt/  Summary I create a prompt in my prompt description format and use it to generate some pickup lines.
Demonstration  --  Pick up lines Harry Potter 1 2 3 4 5 6  What house would you be sorted into? How many times have you watched the entire Harry Potter series? Where would you go on your dream date with Hermione Granger? When did you realize you were a wizard?</description>
            <content type="html"><![CDATA[<dl>
<dt>Original prompt</dt>
<dd><a href="https://www.reddit.com/r/GPT3/comments/mdl7fl/500%5Fopeners%5Ffor%5Ftinder%5Fwritten%5Fby%5Fgpt3%5Fthe%5Fprompt/">https://www.reddit.com/r/GPT3/comments/mdl7fl/500%5Fopeners%5Ffor%5Ftinder%5Fwritten%5Fby%5Fgpt3%5Fthe%5Fprompt/</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I create a prompt in my prompt description
format and use it to generate some pickup
lines.</p>
<h2 id="demonstration">Demonstration</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/Fio4sczoyqk5dMttvd36Dn5h2" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/Fio4sczoyqk5dMttvd36Dn5h2.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/Fio4sczoyqk5dMttvd36Dn5h2.js" id="asciicast-Fio4sczoyqk5dMttvd36Dn5h2" async></script>
<h2 id="pick-up-lines">Pick up lines</h2>
<h3 id="harry-potter">Harry Potter</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">What house would you be sorted into?
How many times have you watched the entire Harry Potter series?
Where would you go on your dream date with Hermione Granger?
When did you realize you were a wizard?
Do you believe we have a chance at world peace?
Are you OK with me using the Patronus charm to tell you I love you?</code></pre></td></tr></table>
</div>
</div>
<h3 id="dancing">dancing</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">What’s the last song you danced to?
You’re my favorite dance move.
Would you rather be a great dancer or a great singer?
Can you dance in the rain?
Can you do the robot?
If you could only dance to one song for the rest of your life, what song would it be?</code></pre></td></tr></table>
</div>
</div>
<h3 id="the-prompt">The prompt</h3>
<ul>
<li>Design patterns used:
<ul>
<li><a href="http://github.com/semiosis/prompt-engineering-patterns/blob/master/patterns/multiplex-answers.org">mulitplex pattern</a></li>
<li><a href="http://github.com/semiosis/prompt-engineering-patterns/blob/master/patterns/use-separator-between-examples.org">### pattern</a></li>
<li><a href="http://github.com/semiosis/prompt-engineering-patterns/blob/master/patterns/reflective-description-of-task.org">prelude pattern</a></li>
</ul>
</li>
</ul>
<p>This prompt multiplexes answers.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;generate pick up line&#34;</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;Generate pick up lines from a topic&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following are witty openers for Tinder:
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: BOOKS
</span><span style="color:#e6db74">    OPENERS:
</span><span style="color:#e6db74">    I’m starting a book club, but my house is too small.
</span><span style="color:#e6db74">    Which Harry Potter house do you belong to?
</span><span style="color:#e6db74">    If you were asked to live your life as any book character, which one would you choose?
</span><span style="color:#e6db74">    Tell me three things you have in common with your favorite book character.
</span><span style="color:#e6db74">    Have you ever swam through an entire book?
</span><span style="color:#e6db74">    What book had the biggest impact on your life?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: PSYCHOLOGY
</span><span style="color:#e6db74">    OPENERS:
</span><span style="color:#e6db74">    Have you ever had two days in a row where you didn’t text anyone?
</span><span style="color:#e6db74">    How much do you pee per day?
</span><span style="color:#e6db74">    Are you a certified psychologist?
</span><span style="color:#e6db74">    Do you give pro-bono therapy?
</span><span style="color:#e6db74">    What’s the difference between you and a psychologist?
</span><span style="color:#e6db74">    Are you an expert on human behavior?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: &lt;1&gt;
</span><span style="color:#e6db74">    OPENERS:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;topic&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;music&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="further-exploration">Further exploration</h2>
<p>I wonder if I put the temperature down to 0 if
the pickup lines would all come out autistic.
and if I raised it to 1, the pickup lines
would be super random &ndash; you know crazy girls
might like that.</p>
<h3 id="temperature-0-dot-0"><code>temperature: 0.0</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">What’s your favorite Harry Potter spell?
What’s your patronus?
What’s your favorite Harry Potter character?
What’s your favorite Harry Potter movie?
What’s your favorite Harry Potter book?
What’s your favorite Harry Potter character?
What’s your favorite Harry Potter spell?
What’s your favorite Harry Potter movie?
What’s your favorite Harry Potter book?
What’s your favorite Harry Potter character?
What’s your favorite Harry Potter spell?
What’s your favorite Harry Potter movie?
What’s your favorite Harry Potter book?
What’s your favorite Harry Potter character?
What’s your favorite Harry Potter spell?
What’s your favorite Harry Potter movie?</code></pre></td></tr></table>
</div>
</div>
<h3 id="temperature-1-dot-0"><code>temperature: 1.0</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">To your mind, what is the mixture of Hufflepuff, Slytherin, and Gryffindor?
Did you know that Hermione Granger wasn’t real, she was just an illusion that you created in order to tell yourself that you didn’t have any hope of living a normal life?</code></pre></td></tr></table>
</div>
</div>
<p>Oh my goodness. I love this.
I&rsquo;m keeping temperature 1.0. This is me in real life, actually.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/hAdkA7aBewFbNVEmRCNwgcnfq" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/hAdkA7aBewFbNVEmRCNwgcnfq.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/hAdkA7aBewFbNVEmRCNwgcnfq.js" id="asciicast-hAdkA7aBewFbNVEmRCNwgcnfq" async></script>]]></content>
        </item>
        
        <item>
            <title>Autocompleting anything with GPT-3 in emacs</title>
            <link>http://semiosis.github.io/posts/autocompleting-anything-with-gpt-3-in-emacs/</link>
            <pubDate>Tue, 16 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/autocompleting-anything-with-gpt-3-in-emacs/</guid>
            <description>Emacs package http://github.com/mullikine/emacs/blob/master/config/pen.el Prompt http://github.com/semiosis/prompts/blob/master/prompts/generic-file-type-completion.prompt  Summary I make a prompt for the OpenAI API which completes given a file type and some preceding text.
I then make a company-mode completion function for it, and then demo its usage.
This gives me a generic completion mechanism when dealing with any type of document.
Demonstration This is GPT-3 completing some text for me.
I can type a few characters and then GPT-3 will complete the rest of the text.</description>
            <content type="html"><![CDATA[<dl>
<dt>Emacs package</dt>
<dd><a href="http://github.com/mullikine/emacs/blob/master/config/pen.el">http://github.com/mullikine/emacs/blob/master/config/pen.el</a></dd>
<dt>Prompt</dt>
<dd><a href="http://github.com/semiosis/prompts/blob/master/prompts/generic-file-type-completion.prompt">http://github.com/semiosis/prompts/blob/master/prompts/generic-file-type-completion.prompt</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I make a prompt for the OpenAI API which
completes given a file type and some preceding
text.</p>
<p>I then make a <code>company-mode</code> completion
function for it, and then demo its usage.</p>
<p>This gives me a generic completion mechanism
when dealing with any type of document.</p>
<h2 id="demonstration">Demonstration</h2>
<p>This is GPT-3 completing some text for me.</p>
<p>I can type a few characters and then GPT-3
will complete the rest of the text.</p>
<p>These generations use the exact same prompt,
found with the code at the end of this
article.</p>
<h3 id="generating-c-plus-plus">Generating <code>C++</code></h3>
<p>I generate a class with particular methods by
writing the docstring first.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/iqVs8kv3PxiQkZyXASQURNSqX" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/iqVs8kv3PxiQkZyXASQURNSqX.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/iqVs8kv3PxiQkZyXASQURNSqX.js" id="asciicast-iqVs8kv3PxiQkZyXASQURNSqX" async></script>
<h3 id="generating-python-code-with-gpt-3">Generating <code>python</code> code with GPT-3</h3>
<p>I generate a class with particular methods by
writing the docstring first.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/a5dDY1goh2kWkUQQpPPsGZ87q" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/a5dDY1goh2kWkUQQpPPsGZ87q.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/a5dDY1goh2kWkUQQpPPsGZ87q.js" id="asciicast-a5dDY1goh2kWkUQQpPPsGZ87q" async></script>
<h3 id="generate-prose">Generate prose</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/QpZSIuMPlwBQhP6hgr0qKrTh7" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/QpZSIuMPlwBQhP6hgr0qKrTh7.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/QpZSIuMPlwBQhP6hgr0qKrTh7.js" id="asciicast-QpZSIuMPlwBQhP6hgr0qKrTh7" async></script>
<p>This demonstration has shown that I can
complete prose within an org file and complete
python code, using <code>GPT-3</code>.</p>
<h2 id="commentary">Commentary</h2>
<p>I think being able to make your own autocompletion functions will come in very
handy.</p>
<p>When GPT-3 finetuning is made available or alternatives for fine-tuning or
training large language models are available, there will be also be the
landscape of specialised language models for writing or coding in different
languages or styles.</p>
<p>Being able to step into the <strong>style</strong> of programming or writing of your choosing,
it will become important to have a fully featured editing environment
(autocompletion, error checking, etc.). Emacs provides a framework for
reasoning about these environments and building new ones.</p>
<p>If a &lsquo;prompt hub&rsquo; prompt curation server exists, the editing landscape will be
flooded with options on styles and languages to work within, along with editing
functions.</p>
<h2 id="code">Code</h2>
<h3 id="openai-api-prompt-generic-file-type-completion-dot-prompt"><code>OpenAI</code> API prompt - <code>generic-file-type-completion.prompt</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Generic file type completion&#34;</span>
<span style="color:#f92672">doc</span>: |-<span style="color:#e6db74">
</span><span style="color:#e6db74">    </span>    <span style="color:#ae81ff">This is a generic completer for emacs.</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    File type: &lt;1&gt;
</span><span style="color:#e6db74">    Contents:
</span><span style="color:#e6db74">    &lt;2&gt;</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;\n\n&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;file type&#34;</span>
- <span style="color:#e6db74">&#34;preceding text&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;python&#34;</span>
- <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="elisp-pen-dot-el">elisp - <code>pen.el</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun company-pen-filetype--candidates (prefix)
  (let* ((preceding-text (str (<span style="color:#a6e22e">buffer-substring</span> (<span style="color:#a6e22e">point</span>) (<span style="color:#a6e22e">max</span> <span style="color:#ae81ff">1</span> (<span style="color:#a6e22e">-</span> (<span style="color:#a6e22e">point</span>) <span style="color:#ae81ff">1000</span>)))))
         (response (pen-pf-generic-file-type-completion (detect-language) preceding-text))
         <span style="color:#75715e">;; Take only the first line for starters</span>
         (line (<span style="color:#a6e22e">car</span> (str2lines response)))
         (res (str2list (snc <span style="color:#e6db74">&#34;monotonically-increasing-tuple-permutations.py&#34;</span> line))))
    <span style="color:#75715e">;; Generate a list</span>
    (<span style="color:#a6e22e">mapcar</span> (lambda (s) (<span style="color:#a6e22e">concat</span> (company-pen-filetype--prefix) s))
            res)))

(defun company-pen--grab-symbol ()
  (<span style="color:#a6e22e">buffer-substring</span> (<span style="color:#a6e22e">point</span>) (save-excursion (<span style="color:#a6e22e">skip-syntax-backward</span> <span style="color:#e6db74">&#34;w_.&#34;</span>)
                                            (<span style="color:#a6e22e">point</span>))))

(defun company-pen-filetype--prefix ()
  <span style="color:#e6db74">&#34;Grab prefix at point.&#34;</span>
  (or (company-pen--grab-symbol)
      <span style="color:#e6db74">&#39;stop</span>))

(defun company-pen-filetype (command <span style="color:#66d9ef">&amp;optional</span> arg <span style="color:#66d9ef">&amp;rest</span> ignored)
  (interactive (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#39;interactive</span>))
  (cl-case command
    (interactive (company-begin-backend <span style="color:#e6db74">&#39;company-pen-filetype</span>))
    (prefix (company-pen-filetype--prefix))
    (candidates (company-pen-filetype--candidates arg))
    <span style="color:#75715e">;; TODO doc-buffer may contain info on the completion in the future</span>
    <span style="color:#75715e">;; (doc-buffer (company-pen-filetype--doc-buffer arg))</span>
    <span style="color:#75715e">;; TODO annotation may contain the probability in the future</span>
    <span style="color:#75715e">;; (annotation (company-pen-filetype--annotation arg))</span>
    ))

(require <span style="color:#e6db74">&#39;company</span>)
(defun my-completion-at-point ()
  (interactive)
  (if (<span style="color:#a6e22e">&gt;=</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">4</span>)
      (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;company-pen-filetype</span>)
    (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;completion-at-point</span>)))

(<span style="color:#a6e22e">define-key</span> global-map (kbd <span style="color:#e6db74">&#34;M-~&#34;</span>) <span style="color:#a6e22e">#&#39;</span>my-completion-at-point)</code></pre></td></tr></table>
</div>
</div>
<h3 id="python-monotonically-increasing-tuple-permutations-dot-py">python - <code>monotonically-increasing-tuple-permutations.py</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/env python3.6</span>

<span style="color:#f92672">from</span> itertools <span style="color:#f92672">import</span> combinations

<span style="color:#f92672">import</span> sys

<span style="color:#66d9ef">for</span> line <span style="color:#f92672">in</span> sys<span style="color:#f92672">.</span>stdin:
    <span style="color:#75715e">## I can&#39;t split this way or I&#39;ll lose the starting space in emacs GPT autocomplete</span>
    <span style="color:#75715e">#  lst = line.split()</span>
    <span style="color:#75715e"># I must split like this</span>
    lst <span style="color:#f92672">=</span> line<span style="color:#f92672">.</span>split(<span style="color:#e6db74">&#39; &#39;</span>)
    <span style="color:#75715e">#  print(line)</span>
    <span style="color:#66d9ef">for</span> w <span style="color:#f92672">in</span> lst:
        <span style="color:#66d9ef">if</span> w <span style="color:#f92672">and</span> <span style="color:#f92672">not</span> w<span style="color:#f92672">.</span>isspace() <span style="color:#f92672">and</span> <span style="color:#f92672">not</span> w <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>:
            <span style="color:#66d9ef">print</span>(w)
        <span style="color:#66d9ef">break</span>

    <span style="color:#66d9ef">for</span> start, end <span style="color:#f92672">in</span> combinations(range(len(lst)), <span style="color:#ae81ff">2</span>):
        <span style="color:#66d9ef">if</span> start <span style="color:#f92672">==</span> <span style="color:#ae81ff">1</span>:
            <span style="color:#66d9ef">break</span>
        <span style="color:#66d9ef">print</span>(<span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">.</span>join(lst[start:end<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>]))</code></pre></td></tr></table>
</div>
</div>
<h3 id="shell-openai-complete">shell - <code>openai-complete</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">94
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null
set -xv

first_arg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>

stdin_exists<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    ! <span style="color:#f92672">[</span> -t <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> ! test <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>readlink /proc/$$/fd/0<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> /dev/null
<span style="color:#f92672">}</span>

<span style="color:#66d9ef">if</span> stdin_exists; <span style="color:#66d9ef">then</span>
    <span style="color:#75715e"># The stdin can be the first argument</span>
    set -- <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

test -f <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit
shift

prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.prompt // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
stop_sequence<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq <span style="color:#e6db74">&#34;.\&#34;stop-sequences\&#34;[0] // empty&#34;</span> | uq | qne<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
temperature<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;temperature\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;engine\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
max_tokens<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;max-tokens\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
top_p<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;top-p\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

test -n <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">0</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -e<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>engine:=<span style="color:#e6db74">&#34;ada&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>temperature:=<span style="color:#e6db74">&#34;0.6&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>max_tokens:=<span style="color:#e6db74">&#34;64&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>sub_completions:=<span style="color:#e6db74">&#34;1&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
<span style="color:#66d9ef">for</span> var in <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">do</span>
    var<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span> | uq | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | template -$i <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    <span style="color:#f92672">((</span>i++<span style="color:#f92672">))</span>
<span style="color:#66d9ef">done</span>

prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | chomp | tf<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># printf -- &#34;%s\n&#34; &#34;$prompt&#34; | tv</span>

<span style="color:#75715e"># prompt=&#34;$(p &#34;$prompt&#34; | bs &#39;$&#39; | qne)&#34;</span>

<span style="color:#75715e"># qne will break emojis</span>
<span style="color:#75715e"># emojis work again</span>
prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | bs <span style="color:#e6db74">&#39;$`&#34;&#39;</span> | sed -z <span style="color:#e6db74">&#39;s/\n/\\n/g&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#75715e"># exit 1</span>

IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> SHCODE <span style="color:#e6db74">&lt;&lt;HEREDOC
</span><span style="color:#e6db74">openai api \
</span><span style="color:#e6db74">    completions.create \
</span><span style="color:#e6db74">    -e &#34;$engine&#34; \
</span><span style="color:#e6db74">    -t &#34;$temperature&#34; \
</span><span style="color:#e6db74">    -M &#34;$max_tokens&#34; \
</span><span style="color:#e6db74">    -n &#34;$sub_completions&#34; \
</span><span style="color:#e6db74">    $(
</span><span style="color:#e6db74">        if test -n &#34;$stop_sequence&#34;; then
</span><span style="color:#e6db74">            printf -- &#34;%s&#34; &#34;--stop \&#34;$stop_sequence\&#34;&#34;
</span><span style="color:#e6db74">        fi
</span><span style="color:#e6db74">    ) \
</span><span style="color:#e6db74">    -p &#34;$prompt&#34;
</span><span style="color:#e6db74">HEREDOC</span>

<span style="color:#75715e"># printf -- &#34;%s\n&#34; &#34;$SHCODE&#34; | tv</span>
<span style="color:#75715e"># exit 1</span>

response_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>eval <span style="color:#e6db74">&#34;</span>$SHCODE<span style="color:#e6db74">&#34;</span> | uq | s chomp | tf txt<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

prompt_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
response_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># it may not be a good idea to remove starting whitespace if I want to complete in emacs</span>
<span style="color:#75715e"># tail -c +$((prompt_bytes + 1)) &#34;$response_fp&#34; | sed -z &#39;s/^\s\+//;s/^\r\+//;s/^\n\+//&#39;</span>
<span style="color:#75715e"># tail -c +$((prompt_bytes + 1)) &#34;$response_fp&#34; | sed -z &#39;s/^\r\+//;s/^\n\+//&#39;</span>
<span style="color:#75715e"># Don&#39;t remove whitespace at all</span>
tail -c +<span style="color:#66d9ef">$((</span>prompt_bytes <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span><span style="color:#66d9ef">))</span> <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span></code></pre></td></tr></table>
</div>
</div>
<p>You could say that <code>company-mode</code>, which
stands for &ldquo;complete-any[thing]&rdquo; has reached
its apotheosis. It seems like as a harness for
completion backends goes, working with GPT-3
exposes its limitations and the need to invent
more advanced completion mechanisms to take
advantage of more capable completion
generators.</p>
]]></content>
        </item>
        
        <item>
            <title>A tour of Ryan Ong&#39;s - NLP 365</title>
            <link>http://semiosis.github.io/posts/ryan-ong-nlp-365/</link>
            <pubDate>Sat, 13 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/ryan-ong-nlp-365/</guid>
            <description>Glossaries nlp-natural-language-processing.txt information-retrieval.txt fasttext.txt transformer.txt nmt-neural-machine-translation.txt information-theory.txt  Summary I go over Ryan Ong&amp;rsquo;s series on NLP, adding terms to my glossaries and reproducing what he&amp;rsquo;s done.
 Finished reading &amp;lt;2021-03-13 Sat&amp;gt;
 Day 1: What is Natural Language Processing - Ryan Ong Day 2: Damerau-Levenshtein Distance - Ryan Ong Day 3: Word Embeddings - Ryan Ong  Terms in the green text have added to my glossary.
  This is the project that introduced me to GloVe a few years ago.</description>
            <content type="html"><![CDATA[<dl>
<dt>Glossaries</dt>
<dd><a href="http://github.com/mullikine/glossaries-gh/blob/master/nlp-natural-language-processing.txt">nlp-natural-language-processing.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/information-retrieval.txt">information-retrieval.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/fasttext.txt">fasttext.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/transformer.txt">transformer.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/nmt-neural-machine-translation.txt">nmt-neural-machine-translation.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/information-theory.txt">information-theory.txt</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I go over Ryan Ong&rsquo;s series on <code>NLP</code>, adding
terms to my glossaries and reproducing what
he&rsquo;s done.</p>
<hr>
<h2 id="finished-reading">Finished reading</h2>
<p><span class="timestamp-wrapper"><span class="timestamp">&lt;2021-03-13 Sat&gt;</span></span></p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/01/day-1-what-is-natural-language-processing/">Day 1: What is Natural Language Processing - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/01/day-1-what-is-natural-language-processing/https://ryanong.co.uk/2020/01/02/day-2-damerau-levenshtein-distance/">Day 2: Damerau-Levenshtein Distance - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/03/day-3-word-embeddings/">Day 3: Word Embeddings - Ryan Ong</a></li>
</ul>
<p>Terms in the green text have added to my glossary.</p>
<figure>
    <img src="/ox-hugo/ryanong-day-3.png"/> 
</figure>

<p>This is the project that introduced me to <code>GloVe</code> a few years ago.</p>
<p><a href="https://github.com/mullikine/codenames">https://github.com/mullikine/codenames</a></p>
<p>I skipped over <code>projectJarvis</code>.</p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/04/day-4-scraping-google-search-results/">Day 4: projectJarvis - Introduction {#project2020} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/05/day-5-projectjarvis-retrieving-medium-articles/">Day 5: projectJarvis - Retrieving medium articles - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/06/day-6-projectjarvis-retrieving-medium-articles-code/">Day 6: projectJarvis  Retrieving medium articles {Code} - Ryan Ong</a></li>
</ul>
<p>I already know about <code>TFIDF</code>.</p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/07/day-7-term-frequency-inverse-document-frequency-tf-idf/">Day 7: Term Frequency-Inverse Document Frequency {TFIDF} for Summarisation - Ryan Ong</a></li>
</ul>
<p>Terms in green text have been added to my glossary.</p>
<p>Terms in blue are suggested by <code>pytextrank</code> / <code>TextRank</code>.</p>
<figure>
    <img src="/ox-hugo/ryanong-day-7.png"/> 
</figure>

<p><a href="https://mullikine.github.io/posts/suggesting-new-words-for-the-glossary-with-keybert-and-pytextrank/">Suggesting new words for the glossary with KeyBERT and pytextrank // Bodacious Blog</a></p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/08/day-8/">Day 8: TextRank for Summarisation - Ryan Ong</a></li>
</ul>
<p>Learning more about <code>TextRank</code>:</p>
<p>I use <code>GPT-3</code> to correct this sentence, as I am adding it to the glossary.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">graph-based ranking
    [[https://ryanong.co.uk/2020/01/08/day-8/][Day 8: TextRank for Summarisation - Ryan Ong]]

    In short, a graph-based ranking algorithm
    is a way of deciding on the importance of
    a vertex within a graph, by taking into
    account global information recursively
    computed from the entire graph, rather
    than relying only on local vertex-specific
    information.</code></pre></td></tr></table>
</div>
</div>
<p>Once again, blue words here are suggested by <code>TextRank</code> using the transformer model <code>en_core_web_trf</code>.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/398748" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/398748.svg" /></a></p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/09/day-9/">Day 9: Transformers - Introduction - Ryan Ong</a></li>
</ul>
<p>I had to recall what a residual connection was.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">residual connection
skip connection
    [#deep learning]
    [#RNN]

    Used to allow gradients to flow through a
    network directly, without passing through
    the non-linear activation functions.

    Form conceptually a &#39;bus&#39; which flows
    right the way through the network, and in
    reverse, the gradients can flow backwards
    along it too.

    high-level intuition:
    - residual connections help deep models
      train more successfully.</code></pre></td></tr></table>
</div>
</div>
<p><a href="https://mullikine.github.io/posts/review-of-the-illustrated-transformer/">The Illustrated Transformer // Bodacious Blog</a></p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/10/day-10-transformers-multihead-attention-mechanism/">Day 10: Transformers - MultiHead Attention Mechanism - Ryan Ong</a></li>
</ul>
<hr>
<figure>
    <img src="/ox-hugo/ryanong-day-10.png"/> 
</figure>

<dl>
<dt>New terms</dt>
<dd><span class="underline">self-attention</span> <br />
<span class="underline">Multi-Head Attention</span> <br />
<span class="underline">multi-head self-attention</span></dd>
</dl>
<hr>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/11/day-11-transformers-positioning-encoding-and-decoder/">Day 11 - Transformers: Positioning Encoding and Decoder - Ryan Ong</a></li>
</ul>
<hr>
<h2 id="left-to-read">Left to read</h2>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/12/day-12-recurrent-neural-network/">Day 12: Recurrent Neural Network - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/13/day-13-seq2seq/">Day 13: Seq2Seq - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/14/day-14-convolutional-neural-network/">Day 14: Convolutional Neural Network in NLP - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/15/day-15-textrank-for-summarisation-code-gensim/">Day 15: TextRank for Summarisation {Code - Gensim} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/16/day-16-textrank-manual-implementation-code/">Day 16: TextRank - Manual Implementation {Code} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/17/day-17-tfidf-for-summarisation-code/">Day 17: TFIDF for Summarisation - Implementation I - Constructing a Class - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/18/day-18-tfidf-for-summarisation-implementation-ii-term-frequency-tf-matrix/">Day 18: TFIDF for Summarisation - Implementation II - Term Frequency {TF} Matrix - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/19/day-19-tfidf-for-summarisation-implementation-iii-inverse-document-frequency-idf-matrix/">Day 19: TFIDF for Summarisation - Implementation III - IDF Matrix - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/20/day-20-tfidf-for-summarisation-implementation-iv-tfidf-matrix-sentence-scoring/">Day 20: TFIDF for Summarisation - Implementation IV - TFIDF Matrix &amp; Sentence Scoring - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/21/day-21-tfidf-for-summarisation-summary-generation/">Day 21: TFIDF for Summarisation - Implementation V - Summary Generation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/22/day-22-tfidf-for-summarisation-putting-it-all-together/">Day 22: TFIDF for Summarisation - Implementation VI - Putting It All Together - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/23/day-18-summarisation-evaluation-metrics/">Day 23: Summarisation - ROUGE score - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/24/day-24-learn-nlp-with-me-machine-reading-comprehension-introduction/">Day 24: Learn NLP with Me - Machine Reading Comprehension - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/25/day-25-learn-nlp-with-me-machine-reading-comprehension-mrc-tasks/">Day 25: Learn NLP with Me - Machine Reading Comprehension - MRC Tasks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/26/day-26-learn-nlp-with-me-machine-reading-comprehension-deep-learning-methods/">Day 26: Learn NLP with Me - Machine Reading Comprehension - Datasets &amp; Evaluation Metrics - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/27/day-27-learn-nlp-with-me-machine-reading-comprehension-deep-learning-methods-i/">Day 27: Learn NLP with Me - MRC - Deep Learning I - General Architecture - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/28/day-28-learn-nlp-with-me-machine-reading-comprehension-deep-learning-methods-ii/">Day 28: Learn NLP with Me - MRC - Deep Learning II - Embeddings - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/29/day-29-learn-nlp-with-me-machine-reading-comprehension-deep-learning-methods-iii/">Day 29: Learn NLP with Me - MRC - Deep Learning III - Feature Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/30/day-30-learn-nlp-with-me-mrc-deep-learning-iii-context-question-interaction/">Day 30: Learn NLP with Me - MRC - Deep Learning IV - Context Question Interaction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/31/day-31-learn-nlp-with-me-mrc-deep-learning-iii-answer-prediction/">Day 31: Learn NLP with Me - MRC - Deep Learning V - Answer Prediction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/01/day-32-learn-nlp-with-me-mrc-deep-learning-iii-additional-tricks/">Day 32: Learn NLP with Me - MRC - Deep Learning VI - Additional Tricks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/02/day-33-learn-nlp-with-me-mrc-open-issues/">Day 33: Learn NLP with Me - MRC - Open Issues - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/03/day-34-learn-nlp-with-me-mrc-new-trends/">Day 34: Learn NLP with Me - MRC - New Trends I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/04/day-35-learn-nlp-with-me-mrc-new-trends-ii/">Day 35: Learn NLP with Me - MRC - New Trends II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/05/day-36-learn-nlp-with-me-mrc-new-trends-iii/">Day 36: Learn NLP with Me - MRC - New Trends III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/06/day-37-learn-nlp-with-me-fast-ai-nlp-course-what-is-nlp/">Day 37: Learn NLP with Me - fast.ai NLP course - What is NLP? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/07/day-38-nlp-discovery-meena-googles-chatbot/">Day 38: NLP Discovery - Google&rsquo;s Chatbot Meena - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/08/day-39-what-is-perplexity/">Day 39: What is Perplexity? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/09/day-40-what-is-neural-architecture-search-nas/">Day 40: What is Neural Architecture Search {NAS}? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/10/day-41-learn-nlp-with-me-fast-ai-nlp-course-topic-modelling-with-svd-nmf/">Day 41: Learn NLP with Me - fast.ai NLP course - Topic Modelling with SVD &amp; NMF - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/11/day-42-learn-nlp-with-me-fast-ai-nlp-course-topic-modelling-svd-revisited/">Day 42: Learn NLP with Me - fast.ai NLP course - Topic Modelling &amp; SVD revisited - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/12/day-43-learn-nlp-with-me-information-extraction-introduction/">Day 43: Learn NLP with Me - Information Extraction - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/13/day-44-learn-nlp-with-me-information-extraction-entities/">Day 44: Learn NLP with Me - Information Extraction - Entities - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/14/day-45-learn-nlp-with-me-information-extraction-entities-entity-linking-by-learning-to-rank/">Day 45: Learn NLP with Me - Information Extraction - Entities - Entity linking by learning to rank - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/15/day-46-learning-pytorch-a-deep-learning-framework-introduction-to-tensors/">Day 46: Learning PyTorch - A Deep Learning Framework - Introduction to Tensors - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/16/day-47-learning-pytorch-autograd-automatic-differentiation/">Day 47: Learning PyTorch - Autograd - Automatic Differentiation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/17/day-48-learning-pytorch-training-a-neural-network/">Day 48: Learning PyTorch - Training a Neural Network - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/18/day-49-learning-pytorch-training-an-image-classifier/">Day 49: Learning PyTorch - Training an Image Classifier - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/19/day-50-nlp-discovery-turing-nlg-a-17-billion-parameter-language-model/">Day 50: NLP Discovery - Turing-NLG - A 17-billion parameter Language Model - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/20/day-51-learn-nlp-with-me-information-extraction-entities-collective-entity-linking/">Day 51: Learn NLP with Me - Information Extraction - Entities - Collective Entity Linking - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/21/day-52-learn-nlp-with-me-information-extraction-relations-introduction/">Day 52: Learn NLP with Me - Information Extraction - Relations - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/22/day-53-learn-nlp-with-me-information-extraction-relations-pattern-based-relation-extraction/">Day 53: Learn NLP with Me - Information Extraction - Relations - Pattern-based Relation Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/23/day-54-learn-nlp-with-me-formal-language-theory-introduction/">Day 54: Learn NLP with Me - Formal Language Theory - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/24/day-55-learn-nlp-with-me-formal-language-theory-regular-languages-introduction/">Day 55: Learn NLP with Me - Formal Language Theory - Regular Languages - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/25/day-56-learn-nlp-with-me-formal-language-theory-regular-languages-finite-state-acceptors/">Day 56: Learn NLP with Me - Formal Language Theory - Regular Languages - Finite State Acceptors - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/26/day-57-learn-nlp-with-me-fast-ai-nlp-course-sentiment-classification-with-naive-bayes/">Day 57: Learn NLP with Me - fast.ai NLP course - Sentiment Classification with Nave Bayes - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/27/day-58-learn-nlp-with-me-formal-language-theory-regular-languages-morphology-analysis/">Day 58: Learn NLP with Me - Formal Language Theory - Regular Languages - Morphology Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/28/day-59-learn-nlp-with-me-formal-language-theory-regular-languages-weighted-fsas/">Day 59: Learn NLP with Me - Formal Language Theory - Regular Languages - Weighted FSAs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/29/day-60-learn-nlp-with-me-flt-regular-languages-finite-state-transducers/">Day 60: Learn NLP with Me - FLT - Regular Languages - Finite State Transducers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/01/day-61-what-is-semantic-textual-similarity/">Day 61: What is Semantic Textual Similarity? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/02/day-62-learn-nlp-with-me-flt-regular-languages-inflectional-morphology/">Day 62: Learn NLP with Me - FLT - Regular Languages - Inflectional Morphology - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/03/day-63-learn-nlp-with-me-flt-regular-languages-finite-state-composition/">Day 63: Learn NLP with Me - FLT - Regular Languages - Finite state composition - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/04/day-64-learn-nlp-with-me-information-extraction-relations-relation-extraction-as-classification-task/">Day 64: Learn NLP with Me - Information Extraction - Relations - Relation Extraction as Classification Task - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/05/day-65-learn-nlp-with-me-information-extraction-relations-relation-extraction-as-classification-task-kernel-method/">Day 65: Learn NLP with Me - Information Extraction - R.E. as Classification Task - Kernel Method - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/06/day-66-learn-nlp-with-me-fast-ai-nlp-course-sentiment-classification-with-naive-bayes-logistic-regression/">Day 66: Learn NLP with Me - fast.ai NLP course - Sentiment Classification with Nave Bayes &amp; Logistic Regression - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/07/day-67-learn-nlp-with-me-fast-ai-nlp-course-derivation-of-naive-bayes-numerical-stability/">Day 67: Learn NLP with Me - fast.ai NLP course - Derivation of Nave Bayes &amp; Numerical Stability - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/08/day-68-learn-nlp-with-me-information-extraction-r-e-as-classification-task-neural-method/">Day 68: Learn NLP with Me - Information Extraction - R.E. as Classification Task - Neural Method - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/09/day-69-learn-nlp-with-me-information-extraction-relations-knowledge-base-population/">Day 69: Learn NLP with Me - Information Extraction - Relations - Knowledge Base Population - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/10/day-70-learn-nlp-with-me-i-e-knowledge-base-population-information-fusion/">Day 70: Learn NLP with Me - I.E. - Knowledge Base Population - Information Fusion - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/11/day-71-learn-nlp-with-me-i-e-knowledge-base-population-distant-supervision/">Day 71: Learn NLP with Me - I.E. - Knowledge Base Population - Distant Supervision - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/12/day-72-learn-nlp-with-me-i-e-relations-open-information-extraction/">Day 72: Learn NLP with Me - I.E. - Relations - Open Information Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/13/day-73-learn-nlp-with-me-information-extraction-events/">Day 73: Learn NLP with Me - Information Extraction - Events - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/14/day-74-learn-nlp-with-me-i-e-hedges-denials-and-hypotheticals-introduction/">Day 74: Learn NLP with Me - I.E. - Hedges, Denials, and Hypotheticals - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/15/day-75-learn-nlp-with-me-i-e-hedges-denials-and-hypotheticals-handling-modality/">Day 75: Learn NLP with Me - I.E. - Hedges, Denials, and Hypotheticals - Handling Modality - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/16/day-76-learn-nlp-with-me-formal-language-theory-context-free-languages-introduction/">Day 76: Learn NLP with Me - Formal Language Theory - Context-free Languages - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/17/day-77-learn-nlp-with-me-flt-context-free-languages-context-free-grammars/">Day 77: Learn NLP with Me - FLT - Context-free Languages - Context-free Grammars - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/18/day-78-learn-nlp-with-me-flt-context-free-languages-chomsky-normal-form/">Day 78: Learn NLP with Me - FLT - Context-free Languages - Chomsky Normal Form - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/19/day-79-mini-nlp-data-science-project-implementation-series-introduction/">Day 79: Mini NLP Data Science Project - Implementation Series - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/20/day-80-mini-nlp-data-science-project-implementation-i-eda/">Day 80: Mini NLP Data Science Project - Implementation I - EDA - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/21/day-81-mini-nlp-data-science-project-implementation-ii-text-processing/">Day 81: Mini NLP Data Science Project - Implementation II - Text Processing - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/22/day-82-mini-nlp-data-science-project-implementation-iii-text-clustering-i/">Day 82: Mini NLP Data Science Project - Implementation III - Text Clustering I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/23/day-83-mini-nlp-data-science-project-implementation-iv-text-clustering-ii/">Day 83: Mini NLP Data Science Project - Implementation IV - Text Clustering II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/24/day-84-mini-nlp-data-science-project-implementation-v-text-clustering-iii/">Day 84: Mini NLP Data Science Project - Implementation V - Text Clustering III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/25/day-85-mini-nlp-data-science-project-implementation-vi-topic-modelling-analysis/">Day 85: Mini NLP Data Science Project - Implementation VI - Topic Modelling Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/26/day-86-mini-nlp-data-science-project-implementation-vii-text-similarity/">Day 86: Mini NLP Data Science Project - Implementation VII - Text Similarity - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/27/day-87-learn-nlp-with-me-bert-on-sentiment-analysis/">Day 87: Learn NLP with Me - BERT on Sentiment Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/28/day-88-what-is-autoencoders/">Day 88: What is Autoencoders? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/29/day-89-deep-generative-models-and-nlp/">Day 89: Deep Generative Models and NLP - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/30/day-90-learn-pgm-with-me-what-is-probabilistic-graphical-modelling/">Day 90: Learn PGM with Me - What is Probabilistic Graphical Modelling? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/31/day-91-learn-pgm-with-me-the-3-main-aspects-of-graphical-models/">Day 91: Learn PGM with Me - The 3 Main Aspects of Graphical Models - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/01/day-92-learn-pgm-with-me-probability-review-for-graphical-models/">Day 92: Learn PGM with Me - Probability Review for Graphical Models - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/02/day-93-learn-pgm-with-me-probability-review-for-graphical-models-elements-of-probability/">Day 93: Learn PGM with Me - Probability Review for Graphical Models - Elements of probability - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/03/day-94-learn-pgm-with-me-probability-review-for-graphical-models-random-variables/">Day 94: Learn PGM with Me - Probability Review for Graphical Models - Random Variables - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/04/day-95-learn-pgm-with-me-probability-review-for-graphical-models-two-random-variables/">Day 95: Learn PGM with Me - Probability Review for Graphical Models - Two Random Variables - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/05/day-96-learn-pgm-with-me-representation-introduction-to-bayesian-networks/">Day 96: Learn PGM with Me - Representation - Introduction to Bayesian Networks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/06/day-97-learn-pgm-with-me-representation-dependencies-of-a-bayes-network/">Day 97: Learn PGM with Me - Representation - Dependencies of a Bayes' Network - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/07/day-98-learn-pgm-with-me-representation-markov-random-fields/">Day 98: Learn PGM with Me - Representation - Introduction to Markov Random Fields - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/08/day-99-learn-pgm-with-me-representation-markov-random-fields-vs-bayesian-networks/">Day 99: Learn PGM with Me - Representation - Markov Random Fields vs Bayesian Networks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/09/day-100-learn-pgm-with-me-representation-introduction-to-conditional-random-fields/">Day 100: Learn PGM with Me - Representation - Introduction to Conditional Random Fields - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/10/day-101-in-depth-study-of-rasas-diet-architecture/">Day 101: In-depth study of RASA&rsquo;s DIET Architecture - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/11/day-102-nlp-research-papers-implicit-and-explicit-aspect-extraction-in-financial-microblogs/">Day 102: NLP Papers Summary - Implicit and Explicit Aspect Extraction in Financial Microblogs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/12/day-103-nlp-research-papers-utilizing-bert-for-aspect-based-sentiment-analysis-via-constructing-auxiliary-sentence/">Day 103: NLP Papers Summary - Utilizing BERT for Aspect-Based Sentiment Analysis via Constructing Auxiliary Sentence - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/13/day-104-nlp-research-papers-sentihood-targeted-aspect-based-sentiment-analysis-dataset-for-urban-neighbourhoods/">Day 104: NLP Papers Summary - SentiHood: Targeted Aspect Based Sentiment Analysis Dataset for Urban Neighbourhoods - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/14/day-105-nlp-research-papers-aspect-level-sentiment-classification-with-attention-over-attention-neural-networks/">Day 105: NLP Papers Summary - Aspect Level Sentiment Classification with Attention-over-Attention Neural Networks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/15/day-106-nlp-research-papers-an-unsupervised-neural-attention-model-for-aspect-extraction/">Day 106: NLP Papers Summary - An Unsupervised Neural Attention Model for Aspect Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/16/day-107-nlp-research-papers-make-lead-bias-in-your-favor-a-simple-and-effective-method-for-news-summarization/">Day 107: NLP Papers Summary - Make Lead Bias in Your Favor: A Simple and Effective Method for News Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/17/day-108-nlp-papers-summary-simple-bert-models-for-relation-extraction-and-semantic-role-labelling/">Day 108: NLP Papers Summary - Simple BERT Models for Relation Extraction and Semantic Role Labelling - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/18/day-109-nlp-papers-summary-studying-summarization-evaluation-metrics-in-the-appropriate-scoring-range/">Day 109: NLP Papers Summary - Studying Summarization Evaluation Metrics in the Appropriate Scoring Range - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/19/day-110-nlp-papers-summary-double-embeddings-and-cnn-based-sequence-labelling-for-aspect-extraction/">Day 110: NLP Papers Summary - Double Embeddings and CNN-based Sequence Labelling for Aspect Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/20/day-111-nlp-papers-summary-the-risk-of-racial-bias-in-hate-speech-detection/">Day 111: NLP Papers Summary - The Risk of Racial Bias in Hate Speech Detection - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/21/day-112-nlp-papers-summary-a-challenge-dataset-and-effective-models-for-aspect-based-sentiment-analysis/">Day 112: NLP Papers Summary - A Challenge Dataset and Effective Models for Aspect-Based Sentiment Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/22/day-113-nlp-papers-summary-on-extractive-and-abstractive-neural-document-summarization-with-transformer-language-models/">Day 113: NLP Papers Summary - On Extractive and Abstractive Neural Document Summarization with Transformer Language Models - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/23/day-114-nlp-papers-summary-a-summarization-system-for-scientific-documents/">Day 114: NLP Papers Summary - A Summarization System for Scientific Documents - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/24/day-115-nlp-papers-summary-scibert-a-pretrained-language-model-for-scientific-text/">Day 115: NLP Papers Summary - SCIBERT: A Pretrained Language Model for Scientific Text - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/25/day-116-nlp-papers-summary-data-driven-summarization-of-scientific-articles/">Day 116: NLP Papers Summary - Data-driven Summarization of Scientific Articles - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/26/day-117-nlp-papers-summary-abstract-text-summarization-a-low-resource-challenge/">Day 117: NLP Papers Summary - Abstract Text Summarization: A Low Resource Challenge - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/27/day-118-nlp-papers-summary-extractive-summarization-of-long-documents-by-combining-global-and-local-context/">Day 118: NLP Papers Summary - Extractive Summarization of Long Documents by Combining Global and Local Context - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/28/day-119-nlp-papers-summary-an-argument-annotated-corpus-of-scientific-publications/">Day 119: NLP Papers Summary - An Argument-Annotated Corpus of Scientific Publications - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/29/day-120-nlp-papers-summary-a-simple-theoretical-model-of-importance-for-summarization/">Day 120: NLP Papers Summary - A Simple Theoretical Model of Importance for Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/30/day-121-nlp-papers-summary-concept-pointer-network-for-abstractive-summarization/">Day 121: NLP Papers Summary - Concept Pointer Network for Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/01/day-122-nlp-papers-summary-applying-bert-to-document-retrieval-with-birch/">Day 122: NLP Papers Summary - Applying BERT to Document Retrieval with Birch - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/02/day-123-nlp-papers-summary-context-aware-embedding-for-targeted-aspect-based-sentiment-analysis/">Day 123: NLP Papers Summary - Context-aware Embedding for Targeted Aspect-based Sentiment Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/03/day-124-nlp-papers-summary-tldr-extreme-summarization-of-scientific-documents/">Day 124: NLP Papers Summary - TLDR: Extreme Summarization of Scientific Documents - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/04/day-125-nlp-papers-summary-a2n-attending-to-neighbors-for-knowledge-graph-inference/">Day 125: NLP Papers Summary - A2N: Attending to Neighbors for Knowledge Graph Inference - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/05/day-126-nlp-papers-summary-neural-news-recommendation-with-topic-aware-news-representation/">Day 126: NLP Papers Summary - Neural News Recommendation with Topic-Aware News Representation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/06/day-127-nlp-papers-summary-neural-approaches-to-conversational-ai-introduction/">Day 127: NLP Papers Summary - Neural Approaches to Conversational AI - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/07/day-128-nlp-papers-summary-neural-approaches-to-conversational-ai-kb-qa-symbolic-methods/">Day 128: NLP Papers Summary - Neural Approaches to Conversational AI - KB-QA {Symbolic Methods} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/08/day-129-nlp-papers-summary-neural-approaches-to-conversational-ai-kb-qa-neural-methods/">Day 129: NLP Papers Summary - Neural Approaches to Conversational AI - KB-QA {Neural Methods} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/09/day-130-nlp-papers-summary-neural-approaches-to-conversational-ai-text-qa-mrc/">Day 130: NLP Papers Summary - Neural Approaches to Conversational AI - Text-QA {MRC} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/10/day-131-nlp-papers-summary-neural-approaches-to-conversational-ai-task-oriented-systems-introduction/">Day 131: NLP Papers Summary - Neural Approaches to Conversational AI - Task-Oriented Systems {Introduction} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/11/day-132-nlp-papers-summary-neural-approaches-to-conversational-ai-task-oriented-systems-evaluation-metrics/">Day 132: NLP Papers Summary - Neural Approaches to Conversational AI - Task-Oriented Systems {Evaluation Metrics} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/12/day-133-nlp-papers-summary-neural-approaches-to-conversational-ai-nlu-and-dst/">Day 133: NLP Papers Summary - Neural Approaches to Conversational AI - NLU and DST - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/13/day-134-nlp-papers-summary-neural-approaches-to-conversational-ai-nlg-and-e2e/">Day 134: NLP Papers Summary - Neural Approaches to Conversational AI - NLG and E2E - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/14/day-135-nlp-papers-summary-neural-approaches-to-conversational-ai-e2e-social-bots/">Day 135: NLP Papers Summary - Neural Approaches to Conversational AI - E2E Social Bots - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/15/day-136-nlp-papers-summary-neural-approaches-to-conversational-ai-social-bots-challenges/">Day 136: NLP Papers Summary - Neural Approaches to Conversational AI - Social Bot&rsquo;s Challenges - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/16/day-137-nlp-papers-summary-neural-approaches-to-conversational-ai-social-bots-landscape/">Day 137: NLP Papers Summary - Neural Approaches to Conversational AI - Social Bot&rsquo;s Landscape - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/17/day-138-nlp-papers-summary-neural-approaches-to-conversational-ai-conversational-ai-in-industry/">Day 138: NLP Papers Summary - Neural Approaches to Conversational AI - Conversational AI in Industry - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/18/day-139-nlp-papers-summary-neural-approaches-to-conversational-ai-conclusion-research-trends/">Day 139: NLP Papers Summary - Neural Approaches to Conversational AI - Conclusion &amp; Research Trends - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/19/day-140-nlp-papers-summary-multimodal-machine-learning-for-automated-icd-coding/">Day 140: NLP Papers Summary - Multimodal Machine Learning for Automated ICD Coding - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/20/day-141-nlp-papers-summary-textattack-a-framework-for-adversarial-attacks-in-natural-language-processing/">Day 141: NLP Papers Summary - TextAttack: A Framework for Adversarial Attacks in Natural Language Processing - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/21/day-142-nlp-papers-summary-measuring-emotions-in-the-covid-19-real-world-worry-dataset/">Day 142: NLP Papers Summary - Measuring Emotions in the COVID-19 Real World Worry Dataset - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/22/day-143-nlp-papers-summary-unsupervised-pseudo-labeling-for-extractive-summarization-on-electronic-health-records/">Day 143: NLP Papers Summary - Unsupervised Pseudo-Labeling for Extractive Summarization on Electronic Health Records - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/23/day-144-nlp-papers-summary-attend-to-medical-ontologies-content-selection-for-clinical-abstractive-summarization/">Day 144: NLP Papers Summary - Attend to Medical Ontologies: Content Selection for Clinical Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/24/day-145-nlp-papers-summary-supert-towards-new-frontiers-in-unsupervised-evaluation-metrics-for-multi-document-summarization/">Day 145: NLP Papers Summary - SUPERT: Towards New Frontiers in Unsupervised Evaluation Metrics for Multi-Document Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/25/day-146-nlp-papers-summary-exploring-content-selection-in-summarization-of-novel-chapters/">Day 146: NLP Papers Summary - Exploring Content Selection in Summarization of Novel Chapters - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/26/day-147-nlp-papers-summary-two-birds-one-stone-a-simple-unified-model-for-text-generation-from-structured-and-unstructured-data/">Day 147: NLP Papers Summary - Two Birds, One Stone: A Simple, Unified Model for Text Generation from Structured and Unstructured Data - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/27/day-148-nlp-papers-summary-a-transformer-based-approach-for-source-code-summarization/">Day 148: NLP Papers Summary - A Transformer-based Approach for Source Code Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/28/day-149-nlp-papers-summary-mooccube-a-large-scale-data-repository-for-nlp-applications-in-moocs/">Day 149: NLP Papers Summary - MOOCCube: A Large-scale Data Repository for NLP Applications in MOOCs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/29/day-150-nlp-papers-summary-will-they-wont-they-a-very-large-dataset-for-stance-detection-on-twitter/">Day 150: NLP Papers Summary - Will-They-Wont-They: A Very Large Dataset for Stance Detection on Twitter - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/30/day-151-nlp-papers-summary-a-large-scale-multi-document-summarization-dataset-from-the-wikipedia-current-events-portal/">Day 151: NLP Papers Summary - A Large-Scale Multi-Document Summarization Dataset from the Wikipedia Current Events Portal - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/31/day-152-nlp-papers-summary-opiniondigest-a-simple-framework-for-opinion-summarization/">Day 152: NLP Papers Summary - OPINIONDIGEST: A Simple Framework for Opinion Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/01/day-153-nlp-papers-summary-span-convert-few-shot-span-extraction-for-dialog-with-pretrained-conversational-representations/">Day 153: NLP Papers Summary - Span-ConveRT: Few-shot Span Extraction for Dialog with Pretrained Conversational Representations - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/02/day-154-nlp-papers-summary-contextual-embeddings-when-are-they-worth-it/">Day 154: NLP Papers Summary - Contextual Embeddings: When Are They Worth It? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/03/day-155-nlp-papers-summary-train-once-test-anywhere-zero-shot-learning-for-text-classification/">Day 155: NLP Papers Summary - TRAIN ONCE, TEST ANYWHERE: ZERO-SHOT LEARNING FOR TEXT CLASSIFICATION - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/04/day-156-nlp-papers-summary-asking-and-answering-questions-to-evaluate-the-factual-consistency-of-summaries/">Day 156: NLP Papers Summary - Asking and Answering Questions to Evaluate the Factual Consistency of Summaries - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/05/day-157-nlp-papers-summary-explainable-prediction-of-medical-codes-from-clinical-text/">Day 157: NLP Papers Summary - Explainable Prediction of Medical Codes from Clinical Text - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/06/day-158-nlp-papers-summary-embarrassingly-simple-unsupervised-aspect-extraction/">Day 158: NLP Papers Summary - Embarrassingly Simple Unsupervised Aspect Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/07/day-159-nlp-papers-summary-icd-coding-from-clinical-text-using-multi-filter-residual-convolutional-neural-network/">Day 159: NLP Papers Summary - ICD Coding from Clinical Text Using Multi-Filter Residual Convolutional Neural Network - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/08/day-160-nlp-papers-summary-extractive-summarization-as-text-matching/">Day 160: NLP Papers Summary - Extractive Summarization as Text Matching - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/09/day-161-nlp-papers-summary-bleurt-learning-robust-metrics-for-text-generation/">Day 161: NLP Papers Summary - BLEURT: Learning Robust Metrics for Text Generation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/10/day-162-learn-nlp-with-me-fast-ai-nlp-course-revisiting-naive-bayes-regex/">Day 162: Learn NLP With Me  Fast.Ai NLP Course  Revisiting Nave Bayes &amp; Regex - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/11/day-163-how-to-build-a-language-model-from-scratch-implementation/">Day 163: How to build a Language Model from scratch - Implementation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/12/day-164-learn-nlp-with-me-fast-ai-nlp-course-transfer-learning/">Day 164: Learn NLP With Me  Fast.Ai NLP Course  Transfer Learning - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/13/day-165-learn-nlp-with-me-fast-ai-nlp-course-ulmfit-for-non-english-languages/">Day 165: Learn NLP With Me  Fast.Ai NLP Course  ULMFit for non-English Languages - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/14/day-166-nlp-papers-summary-publicly-available-clinical-bert-embeddings/">Day 166: NLP Papers Summary - Publicly Available Clinical BERT Embeddings - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/15/day-167-nlp-papers-summary-ontology-aware-clinical-abstractive-summarization/">Day 167: NLP Papers Summary - Ontology-Aware Clinical Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/16/day-168-learn-nlp-with-me-fast-ai-nlp-course-understanding-rnns-and-seq2seq-translation/">Day 168: Learn NLP With Me  Fast.Ai NLP Course  Understanding RNNs and Seq2Seq Translation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/17/day-169-learn-nlp-with-me-fast-ai-nlp-course-word-embeddings-quantify-stereotypes-and-text-generation-algorithms/">Day 169: Learn NLP With Me  Fast.Ai NLP Course  Word Embeddings Quantify Stereotypes and Text Generation Algorithms - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/18/day-170-learn-nlp-with-me-fast-ai-nlp-course-algorithmic-bias/">Day 170: Learn NLP With Me  Fast.Ai NLP Course  Algorithmic Bias - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/19/day-171-learn-nlp-with-me-fast-ai-nlp-course-transformers-and-language-translation/">Day 171: Learn NLP With Me  Fast.Ai NLP Course  Transformers and Language Translation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/20/day-172-learn-nlp-with-me-fast-ai-nlp-course-disinformation-in-text-end-course/">Day 172: Learn NLP With Me  Fast.Ai NLP Course  Disinformation in Text {END COURSE} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/21/day-173-nlp-discovery-text-to-text-transfer-transformer-t5/">Day 173: NLP Discovery - Text-To-Text Transfer Transformer {T5} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/22/day-174-nlp-papers-summary-pegasus-pre-training-with-extracted-gap-sentences-for-abstractive-summarization/">Day 174: NLP Papers Summary - PEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/23/day-175-nlp-papers-summary-gpt-3-introduction-and-context/">Day 175: NLP Papers Summary - GPT-3 : Introduction and Context - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/24/day-176-nlp-papers-summary-gpt-3-training-and-evaluation-methods/">Day 176: NLP Papers Summary - GPT-3 : Training and Evaluation Methods - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/25/day-177-nlp-papers-summary-gpt-3-limitations/">Day 177: NLP Papers Summary - GPT-3 : Limitations - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/26/day-178-nlp-papers-summary-gpt-3-broader-impacts/">Day 178: NLP Papers Summary - GPT-3 : Broader Impacts - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/27/day-179-learning-pytorch-revisiting-concepts/">Day 179: Learning PyTorch - Revisiting Concepts - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/28/day-180-learning-pytorch-language-model-with-nn-transformer-and-torchtext-part-1/">Day 180: Learning PyTorch - Language Model with nn.Transformer and TorchText {Part 1} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/29/day-181-learning-pytorch-language-model-with-nn-transformer-and-torchtext-part-2/">Day 181: Learning PyTorch - Language Model with nn.Transformer and TorchText {Part 2} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/30/day-182-learning-pytorch-custom-dataset-and-dataloader/">Day 182: Learning PyTorch - Custom Dataset and DataLoader - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/01/day-183-learning-pytorch-torchtext-introduction/">Day 183: Learning PyTorch - TorchText Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/02/day-184-learning-pytorch-machine-translation-with-torchtext/">Day 184: Learning PyTorch - Machine Translation with TorchText - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/03/day-185-nlp-papers-summary-a-discourse-aware-attention-model-for-abstractive-summarization-of-long-documents/">Day 185: NLP Papers Summary - A Discourse-Aware Attention Model for Abstractive Summarization of Long Documents - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/04/day-186-nlp-papers-summary-contextualizing-citations-for-scientific-summarization-using-word-embeddings-and-domain-knowledge/">Day 186: NLP Papers Summary - Contextualizing Citations for Scientific Summarization using Word Embeddings and Domain Knowledge - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/05/day-187-learn-nlp-with-me-embeddings-of-language-knowledge-representation-and-reasoning/">Day 187: Learn NLP With Me  Embeddings of Language, Knowledge Representation, and Reasoning - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/06/day-188-nlp-papers-summary-a-supervised-approach-to-extractive-summarisation-of-scientific-papers/">Day 188: NLP Papers Summary - A Supervised Approach to Extractive Summarisation of Scientific Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/07/day-189-learning-pytorch-pytorch-lightning-introduction/">Day 189: Learning PyTorch - PyTorch Lightning Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/08/day-190-learning-pytorch-pytorch-lightning-structure-with-codes/">Day 190: Learning PyTorch - PyTorch Lightning Structure {with codes} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/09/day-191-summarisation-of-arxiv-papers-using-textrank-does-it-work/">Day 191: Summarisation of arXiv papers using TextRank - Does it work? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/10/day-192-nlp-papers-summary-guiding-extractive-summarization-with-question-answering-rewards/">Day 192: NLP Papers Summary - Guiding Extractive Summarization with Question-Answering Rewards - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/11/day-193-learning-pytorch-tweets-sentiment-extraction-part-1/">Day 193: Learning PyTorch - Tweets Sentiment Extraction {Part 1} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/12/day-194-learning-pytorch-tweets-sentiment-extraction-part-2/">Day 194: Learning PyTorch - Tweets Sentiment Extraction {Part 2} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/13/day-195-learn-nlp-with-me-what-is-coreference-resolution/">Day 195: Learn NLP With Me  What is Coreference Resolution? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/14/day-196-coreference-resolution-with-neuralcoref-spacy/">Day 196: Coreference Resolution with NeuralCoref {SpaCy} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/15/day-197-learn-nlp-with-me-what-is-coreference-resolution/">Day 197: Learn NLP With Me  Filling the Gaps with NLP Interview Questions - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/16/day-198-learn-nlp-with-me-filling-the-gaps-with-nlp-interview-questions-ii/">Day 198: Learn NLP With Me  Filling the Gaps with NLP Interview Questions II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/17/day-199-learn-nlp-with-me-filling-the-gaps-with-nlp-interview-questions-iii/">Day 199: Learn NLP With Me  Filling the Gaps with NLP Interview Questions III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/18/day-200-learn-nlp-with-me-filling-the-gaps-with-nlp-interview-questions-iv/">Day 200: Learn NLP With Me  Filling the Gaps with NLP Interview Questions IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/19/day-201-abbreviation-resolution-and-umls-entity-linking-using-scispacy/">Day 201: Abbreviation Resolution and UMLS Entity Linking using SciSpaCy - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/20/day-202-learn-nlp-with-me-nlp-and-transfer-learning-revisit/">Day 202: Learn NLP With Me  NLP and Transfer Learning Revisit - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/21/day-203-learn-nlp-with-me-attention-mechanism-and-transformers-revisit/">Day 203: Learn NLP With Me  Attention Mechanism and Transformers Revisit - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/22/day-204-learn-nlp-with-me-subword-tokenisation-and-normalisation/">Day 204: Learn NLP With Me  Subword Tokenisation and Normalisation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/23/day-205-learn-nlp-with-me-zero-shot-learning-for-text-classification/">Day 205: Learn NLP With Me  Zero-Shot Learning for Text Classification - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/24/day-206-nlp-papers-summary-transformers-and-pointer-generator-networks-for-abstractive-summarization/">Day 206: NLP Papers Summary - Transformers and Pointer-Generator Networks for Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/25/day-207-learning-pytorch-fine-tuning-bert-for-sentiment-analysis-part-one/">Day 207: Learning PyTorch - Fine Tuning BERT for Sentiment Analysis {Part One} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/26/day-208-learning-pytorch-fine-tuning-bert-for-sentiment-analysis-part-two/">Day 208: Learning PyTorch - Fine Tuning BERT for Sentiment Analysis {Part Two} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/27/day-209-introduction-to-clustering/">Day 209: Introduction to Clustering - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/28/day-210-describing-4-different-clustering-algorithms/">Day 210: Describing 4 different clustering algorithms - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/29/day-211-when-to-use-which-clustering-algorithms/">Day 211: When to use which clustering algorithms? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/30/day-212-k-means-clustering-using-sk-learn-and-nltk-quick-read/">Day 212: K-Means Clustering using SK-Learn and NLTK {Quick Read} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/31/day-213-learn-nlp-with-me-slp-textbook-lexicons-for-sentiment-affect-and-connotation-i/">Day 213: Learn NLP With Me  SLP Textbook Ch.21 - Lexicons for Sentiment, Affect, and Connotation I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/01/day-214-learn-nlp-with-me-slp-textbook-lexicons-for-sentiment-affect-and-connotation-ii/">Day 214: Learn NLP With Me  SLP Textbook Ch.21 - Lexicons for Sentiment, Affect, and Connotation II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/02/day-215-learn-nlp-with-me-slp-textbook-ch-21-lexicons-for-sentiment-affect-and-connotation-iii/">Day 215: Learn NLP With Me  SLP Textbook Ch.21 - Lexicons for Sentiment, Affect, and Connotation III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/03/day-216-learn-nlp-with-me-slp-textbook-ch-21-lexicons-for-sentiment-affect-and-connotation-iv/">Day 216: Learn NLP With Me  SLP Textbook Ch.21 - Lexicons for Sentiment, Affect, and Connotation IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/04/day-217-learn-nlp-with-me-slp-textbook-ch-7-neural-networks-and-neural-language-models-i/">Day 217: Learn NLP With Me  SLP Textbook Ch.7  Neural Networks and Neural Language Models I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/05/day-218-learn-nlp-with-me-slp-textbook-ch-7-neural-networks-and-neural-language-models-ii/">Day 218: Learn NLP With Me  SLP Textbook Ch.7  Neural Networks and Neural Language Models II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/06/day-219-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-i/">Day 219: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/07/day-220-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-ii/">Day 220: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/08/day-221-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-iii/">Day 221: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/09/day-222-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-iv/">Day 222: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/10/day-223-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-v/">Day 223: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/11/day-224-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-vi/">Day 224: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution VI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/12/day-225-nlp-papers-summary-architecture-of-knowledge-graph-construction-techniques/">Day 225: NLP Papers Summary - Architecture of Knowledge Graph Construction Techniques - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/13/day-226-nlp-papers-summary-anticipating-stock-market-of-the-renowned-companies-a-knowledge-graph-approach-i/">Day 226: NLP Papers Summary - Anticipating Stock Market of the Renowned Companies: A Knowledge Graph Approach I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/14/day-227-learn-nlp-with-me-translate-model-for-knowledge-graph-embedding/">Day 227: Learn NLP With Me - Translate model for Knowledge Graph Embedding - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/15/day-228-learn-nlp-with-me-knowledge-graph-on-finance-balance-sheets/">Day 228: Learn NLP With Me - Knowledge Graph on Finance {Balance Sheets} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/16/day-229-nlp-papers-summary-building-and-exploring-an-ekg-for-investment-analysis-introduction-and-challenges/">Day 229: NLP Papers Summary - Building and Exploring an EKG for Investment Analysis - Introduction and Challenges - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/17/day-230-nlp-papers-summary-building-and-exploring-an-ekg-for-investment-analysis-approach-overview/">Day 230: NLP Papers Summary - Building and Exploring an EKG for Investment Analysis - Approach Overview - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/18/day-231-nlp-papers-summary-building-and-exploring-an-ekg-for-investment-analysis-building-knowledge-graphs/">Day 231: NLP Papers Summary  Building and Exploring an EKG for Investment Analysis  Building Knowledge Graphs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/19/day-232-nlp-papers-summary-building-and-exploring-an-ekg-for-investment-analysis-deployment-and-related-work/">Day 232: NLP Papers Summary  Building and Exploring an EKG for Investment Analysis  Deployment and Related Work - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/20/day-233-learn-nlp-with-me-linkedins-knowledge-graph/">Day 233: Learn NLP With Me - LinkedIn&rsquo;s Knowledge Graph - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/21/day-234-nlp-papers-summary-topic-modeling-in-financial-documents/">Day 234: NLP Papers Summary  Topic Modeling in Financial Documents - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/22/day-235-learn-nlp-with-me-topic-modelling-with-lsa-and-lda/">Day 235: Learn NLP With Me - Topic Modelling with LSA and LDA - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/23/day-236-nlp-papers-summary-a-bert-based-sentiment-analysis-and-key-entity-detection-approach-for-online-financial-texts/">Day 236: NLP Papers Summary  A BERT based Sentiment Analysis and Key Entity Detection Approach for Online Financial Texts - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/24/day-237-learn-nlp-with-me-an-exhaustive-guide-to-detecting-and-fighting-neural-fake-news-using-nlp/">Day 237: Learn NLP With Me - An Exhaustive Guide to Detecting and Fighting Neural Fake News using NLP - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/25/day-238-nlp-implementation-kaggles-fake-news-challenge-bert-classifier-using-pytorch-and-huggingface/">Day 238: NLP Implementation - Kaggle&rsquo;s Fake News Challenge - BERT Classifier using PyTorch and HuggingFace I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/26/day-239-nlp-implementation-kaggles-fake-news-challenge-bert-classifier-using-pytorch-and-huggingface-ii/">Day 239: NLP Implementation - Kaggle&rsquo;s Fake News Challenge - BERT Classifier using PyTorch and HuggingFace II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/27/day-240-nlp-implementation-kaggles-fake-news-challenge-bert-classifier-using-pytorch-and-huggingface-iii/">Day 240: NLP Implementation - Kaggle&rsquo;s Fake News Challenge - BERT Classifier using PyTorch and HuggingFace III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/28/day-241-nlp-implementation-topic-modelling-and-sentiment-analysis-on-news-articles-document-level/">Day 241: NLP Implementation - Topic Modelling and Sentiment Analysis on News Articles {Document Level} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/29/day-242-nlp-implementation-topic-modelling-and-sentiment-analysis-on-news-articles-sentence-level/">Day 242: NLP Implementation - Topic Modelling and Sentiment Analysis on News Articles {Sentence Level} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/30/day-243-nlp-implementation-entity-extraction-and-linking-ner-and-coreference-resolution-using-spacy/">Day 243: NLP Implementation - Entity Extraction and Linking - NER and Coreference Resolution using SpaCy - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/31/day-244-nlp-implementation-entity-extraction-and-linking-entity-linking-using-dbpedia/">Day 244: NLP Implementation - Entity Extraction and Linking - Entity Linking using DBPedia - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/01/day-245-nlp-implementation-putting-it-all-together-news-article-ingestion-pipeline/">Day 245: NLP Implementation - News Article Ingestion Pipeline - Putting it All Together - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/02/day-246-nlp-implementation-a-web-application-for-entity-tracking-flask-backend/">Day 246: NLP Implementation - A Web Application for Entity Tracking - Flask Backend - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/03/day-247-nlp-implementation-a-web-application-for-entity-tracking-react-frontend/">Day 247: NLP Implementation - A Web Application for Entity Tracking - React Frontend - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/04/day-248-nlp-implementation-a-simple-knowledge-graph-walkthrough/">Day 248: NLP Implementation - A Simple Knowledge Graph Walkthrough - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/05/day-249-learn-nlp-with-me-cs520-knowledge-graphs-lecture-1-what-is-a-knowledge-graph/">Day 249: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 1 - What is a knowledge graph? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/06/day-250-learn-nlp-with-me-cs520-knowledge-graphs-lecture-2-how-to-create-a-knowledge-graph/">Day 250: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 2 - How to create a knowledge graph? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/07/day-251-learn-nlp-with-me-cs520-knowledge-graphs-lecture-3-what-are-some-advanced-knowledge-graphs/">Day 251: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 3 - What are some advanced knowledge graphs? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/08/day-252-learn-nlp-with-me-cs520-knowledge-graphs-lecture-4-what-are-some-knowledge-graph-inference-algorithms/">Day 252: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 4 - What are some knowledge graph inference algorithms? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/09/day-253-learn-nlp-with-me-cs520-knowledge-graphs-lecture-5-how-to-evolve-a-knowledge-graph/">Day 253: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 5 - How to evolve a knowledge graph? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/10/day-254-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-i/">Day 254: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/11/day-255-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-ii/">Day 255: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/12/day-256-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-iii/">Day 256: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/13/day-257-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-iv/">Day 257: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/14/day-258-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-v/">Day 258: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/15/day-259-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-i/">Day 259: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/16/day-260-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-ii/">Day 260: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/17/day-261-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-iii/">Day 261: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/18/day-262-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-iv/">Day 262: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/19/day-263-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-v/">Day 263: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/20/day-264-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-vi/">Day 264: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots VI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/21/day-265-learn-nlp-with-me-intent-classification-for-chatbots-airbnbs-approach/">Day 265: Learn NLP With Me  Intent Classification for Chatbots {Airbnb&rsquo;s Approach} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/22/day-266-learn-nlp-with-me-building-a-conversational-interface-i/">Day 266: Learn NLP With Me  Building a Conversational Interface I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/23/day-267-learn-nlp-with-me-building-a-conversational-interface-ii/">Day 267: Learn NLP With Me  Building a Conversational Interface II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/24/day-268-learn-nlp-with-me-building-a-conversational-interface-iii/">Day 268: Learn NLP With Me  Building a Conversational Interface III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/25/day-269-learn-nlp-with-me-training-the-named-entity-recognizer-using-spacy-i/">Day 269: Learn NLP With Me  Training the named entity recognizer using SpaCy I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/26/day-270-learn-nlp-with-me-training-the-named-entity-recognizer-using-spacy-ii/">Day 270: Learn NLP With Me  Training the named entity recognizer using SpaCy II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/27/day-271-learn-nlp-with-me-hidden-markov-models-hmms-i/">Day 271: Learn NLP With Me  Hidden Markov Models {HMMs} I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/28/day-272-nlp-discovery-prodigy-annotation-tool/">Day 272: NLP Discovery - Prodigy Annotation Tool - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/29/day-273-learn-nlp-with-me-hidden-markov-models-hmms-ii/">Day 273: Learn NLP With Me  Hidden Markov Models {HMMs} II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/30/day-274-learn-nlp-with-me-training-the-named-entity-recognizer-using-spacy-iii/">Day 274: Learn NLP With Me  Training the named entity recognizer using SpaCy III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/01/day-275-the-beginning-of-a-new-chapter-start-with-why/">Day 275: Ryan&rsquo;s PhD Journey - The Beginning of a New Chapter - Starting with Why - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/02/day-276-learn-nlp-with-me-knowledge-graph-for-financial-services/">Day 276: Learn NLP With Me - Knowledge Graph for Financial Services - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/03/day-277-learn-nlp-with-me-using-knowledge-graphs-to-identify-investment-opportunities/">Day 277: Learn NLP With Me - Using Knowledge Graphs to Identify Investment Opportunities - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/04/day-278-learn-nlp-with-me-richer-sentence-embeddings-using-sentence-bert/">Day 278: Learn NLP With Me - Richer Sentence Embeddings using Sentence-BERT - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/05/day-279-learn-nlp-with-me-trustworthy-and-explainable-ai-achieved-through-knowledge-graphs/">Day 279: Learn NLP With Me - Trustworthy and Explainable AI Achieved Through Knowledge Graphs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/06/day-280-nlp-discovery-lang-ais-unsupervised-intent-discovery-whitepaper/">Day 280: NLP Discovery - lang.ais Unsupervised Intent Discovery {Whitepaper} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/07/day-281-nlp-papers-summary-knowledge-reasoning-over-knowledge-graph-i/">Day 281: NLP Papers Summary - Knowledge Reasoning over Knowledge Graph I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/08/day-282-learn-nlp-with-me-building-an-enterprise-knowledge-graph-at-uber/">Day 282: Learn NLP With Me - Building an Enterprise Knowledge Graph at Uber - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/09/day-283-learn-nlp-with-me-hidden-markov-models-hmms-iii/">Day 283: Learn NLP With Me - Hidden Markov Models {HMMs} III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/10/day-284-learn-nlp-with-me-introduction-to-flair-for-nlp/">Day 284: Learn NLP With Me - Introduction to Flair for NLP - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/11/day-285-learn-nlp-with-me-domain-specific-kg-textbook-chapter-1-what-is-a-knowledge-graph-i/">Day 285: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 1 - What Is a Knowledge Graph I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/12/day-286-learn-nlp-with-me-domain-specific-kg-textbook-chapter-1-what-is-a-knowledge-graph-ii/">Day 286: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 1 - What Is a Knowledge Graph II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/13/day-287-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-i/">Day 287: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/14/day-288-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-ii/">Day 288: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/15/day-289-ryans-phd-journey-neo4j-graph-fundamentals/">Day 289: Ryans PhD Journey  Neo4j Graph Fundamentals - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/16/day-290-ryans-phd-journey-cypher-introduction/">Day 290: Ryans PhD Journey  Cypher Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/17/day-291-learn-nlp-with-me-named-entity-ner-evaluation-metrics-based-on-entity-level/">Day 291: Learn NLP With Me - Named-Entity {NER} evaluation metrics based on entity-level - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/18/day-292-ryans-phd-journey-cypher-queries-and-patterns/">Day 292: Ryans PhD Journey  Cypher&rsquo;s Queries and Patterns - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/19/day-293-ryans-phd-journey-cyphers-crud-operations/">Day 293: Ryans PhD Journey  Cypher&rsquo;s CRUD Operations - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/20/day-294-ryans-phd-journey-cyphers-filtering-query-results/">Day 294: Ryans PhD Journey  Cypher&rsquo;s Filtering Query Results - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/21/day-295-ryans-phd-journey-cyphers-controlling-query-processing/">Day 295: Ryans PhD Journey  Cypher&rsquo;s Controlling Query Processing - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/22/day-296-ryans-phd-journey-cyphers-datetimes-and-subqueries/">Day 296: Ryans PhD Journey  Cypher&rsquo;s Datetimes and Subqueries - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/23/day-297-ryans-phd-journey-cyphers-user-defined-procedures-and-functions/">Day 297: Ryans PhD Journey  Cypher&rsquo;s User Defined Procedures and Functions - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/24/day-298-ryans-phd-journey-cyphers-hello-world-movie-graph-tutorial-i/">Day 298: Ryans PhD Journey  Cypher&rsquo;s Hello World - Movie Graph Tutorial I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/25/day-299-ryans-phd-journey-cyphers-hello-world-movie-graph-tutorial-ii/">Day 299: Ryans PhD Journey  Cypher&rsquo;s Hello World - Movie Graph Tutorial II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/26/day-300-ryans-phd-journey-cyphers-recommendation-engine-tutorial/">Day 300: Ryans PhD Journey  Cypher&rsquo;s Recommendation Engine Tutorial - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/27/day-301-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-iii/">Day 301: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/28/day-302-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-iv/">Day 302: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/29/day-303-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-v/">Day 303: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/30/day-304-learn-nlp-with-me-domain-specific-kg-textbook-chapter-3-entity-resolution-i/">Day 304: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 3 - Entity Resolution I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/31/day-305-ryans-phd-journey-why-graph-databases-neo4j/">Day 305: Ryans PhD Journey  Why Graph Databases {Neo4j} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/01/day-306-learn-nlp-with-me-domain-specific-kg-textbook-chapter-3-entity-resolution-ii/">Day 306: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 3 - Entity Resolution II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/02/day-307-ryans-phd-journey-neo4j-python-driver/">Day 307: Ryans PhD Journey  Neo4j&rsquo;s Python Driver - How to connecting Python with Neo4j - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/03/day-308-learn-nlp-with-me-domain-specific-kg-textbook-chapter-3-entity-resolution-iii/">Day 308: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 3 - Entity Resolution III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/04/day-309-ryans-phd-journey-from-documents-to-graph/">Day 309: Ryans PhD Journey  From Documents to Graph - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/05/day-310-nlp-discovery-diffbots-knowledge-graph-api/">Day 310: NLP Discovery - DiffBot&rsquo;s Knowledge Graph API - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/06/day-311-ryans-phd-journey-overview-of-knowledge-graphs/">Day 311: Ryans PhD Journey  Overview of Knowledge Graphs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/07/day-312-ryans-phd-journey-knowledge-representation-learning-i/">Day 312: Ryans PhD Journey  Knowledge Representation Learning I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/08/day-313-ryans-phd-journey-knowledge-representation-learning-ii/">Day 313: Ryans PhD Journey  Knowledge Representation Learning II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/09/day-314-ryans-phd-journey-knowledge-representation-learning-iii/">Day 314: Ryans PhD Journey  Knowledge Representation Learning III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/10/day-315-ryans-phd-journey-knowledge-acquisition/">Day 315: Ryans PhD Journey  Knowledge Acquisition I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/11/day-316-ryans-phd-journey-knowledge-acquisition-ii/">Day 316: Ryans PhD Journey  Knowledge Acquisition II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/12/day-317-ryans-phd-journey-temporal-knowledge-graph-knowledge-aware-applications/">Day 317: Ryans PhD Journey  Temporal Knowledge Graph &amp; Knowledge-Aware Applications - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/13/day-318-ryans-phd-journey-future-directions-in-kgs/">Day 318: Ryans PhD Journey  Future Directions in KGs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/14/day-319-ryans-phd-journey-overview-of-graph-neural-networks/">Day 319: Ryans PhD Journey  Overview of Graph Neural Networks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/15/day-320-ryans-phd-journey-introduction-to-gnns/">Day 320: Ryans PhD Journey  Introduction to GNNs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/16/day-321-ryans-phd-journey-variants-of-gnns/">Day 321: Ryans PhD Journey  Variants of GNNs - Graph Types - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/17/day-322-ryans-phd-journey-variants-of-gnns-propagation-step/">Day 322: Ryans PhD Journey  Variants of GNNs - Propagation Step - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/18/day-323-ryans-phd-journey-variants-of-gnns-training-methods-and-general-frameworks/">Day 323: Ryans PhD Journey  Variants of GNNs - Training Methods and General Frameworks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/19/day-324-ryans-phd-journey-applications-and-future-work-of-gnns/">Day 324: Ryans PhD Journey  Applications and Future Work of GNNs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/20/day-325-ryans-phd-journey-nodes-2020-notes-i/">Day 325: Ryans PhD Journey  Nodes 2020 Notes I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/21/day-326-ryans-phd-journey-nodes-2020-notes-ii/">Day 326: Ryans PhD Journey  Nodes 2020 Notes II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/22/day-327-ryans-phd-journey-link-prediction-introduction/">Day 327: Ryans PhD Journey  Link Prediction - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/23/day-328-ryans-phd-journey-link-prediction-general-architecture-and-negative-sampling/">Day 328: Ryans PhD Journey  Link Prediction - General architecture and Negative Sampling - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/24/day-329-ryans-phd-journey-link-prediction-traditional-pipeline/">Day 329: Ryans PhD Journey  Link Prediction - Traditional Pipeline - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/25/day-330-ryans-phd-journey-refinitiv-knowledge-graph-info/">Day 330: Ryans PhD Journey  Refinitiv Knowledge Graph Info - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/26/day-331-ryans-phd-journey-literature-review-list-of-knowledge-graph-representation-papers/">Day 331: Ryans PhD Journey  Literature Review - List of Knowledge Graph Representation Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/27/day-332-ryans-phd-journey-literature-review-list-of-deep-learning-knowledge-graphs-papers/">Day 332: Ryans PhD Journey  Literature Review - List of Deep Learning &amp; Knowledge Graphs Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/28/day-333-ryans-phd-journey-literature-review-list-of-scoring-functions-papers/">Day 333: Ryans PhD Journey  Literature Review - List of Scoring Functions Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/29/day-334-ryans-phd-journey-literature-review-list-of-encoding-models-auxiliary-information-papers/">Day 334: Ryans PhD Journey  Literature Review - List of Encoding Models &amp; Auxiliary Information Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/30/day-335-ryans-phd-journey-literature-review-list-of-knowledge-graph-completion-papers/">Day 335: Ryans PhD Journey  Literature Review - List of Knowledge Graph Completion Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/01/day-336-ryans-phd-journey-literature-review-list-of-entity-discovery-papers/">Day 336: Ryans PhD Journey  Literature Review - List of Entity Discovery Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/02/day-337-ryans-phd-journey-literature-review-list-of-relation-extraction-papers/">Day 337: Ryans PhD Journey  Literature Review - List of Relation Extraction Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/03/day-338-ryans-phd-journey-literature-review-list-of-temporal-knowledge-graph-papers/">Day 338: Ryans PhD Journey  Literature Review - List of Temporal Knowledge Graph Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/04/day-339-ryans-phd-journey-literature-review-list-of-papers/">Day 339: Ryans PhD Journey  Literature Review - List of Knowledge-aware Applications Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/05/day-340-ryans-phd-journey-literature-review-list-of-future-work-related-papers/">Day 340: Ryans PhD Journey  Literature Review - List of Future Work Related Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/06/day-341-ryans-phd-journey-literature-review-1st-passes/">Day 341: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/07/day-342-ryans-phd-journey-literature-review-1st-passes-ii/">Day 342: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/08/day-343-ryans-phd-journey-literature-review-1st-passes-iii/">Day 343: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/09/day-344-ryans-phd-journey-literature-review-1st-passes-iv/">Day 344: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/10/day-345-ryans-phd-journey-literature-review-1st-passes-v/">Day 345: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/11/day-346-ryans-phd-journey-literature-review-1st-passes-vi/">Day 346: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes VI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/12/day-347-ryans-phd-journey-literature-review-knowledge-representation-1st-passes-vii/">Day 347: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes VII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/13/day-348-ryans-phd-journey-literature-review-knowledge-representation-1st-passes-viii/">Day 348: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes VIII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/14/day-349-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-i/">Day 349: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/15/day-350-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-ii/">Day 350: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/16/day-351-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-iii/">Day 351: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/17/day-352-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-iiii/">Day 352: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes IIII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/18/day-353-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-iv/">Day 353: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/19/day-354-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-v/">Day 354: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/20/day-355-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-vi/">Day 355: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes VI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/21/day-356-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-vii/">Day 356: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes VII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/22/day-357-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-viii/">Day 357: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes VIII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/23/day-358-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-ix/">Day 358: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes IX - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/24/day-359-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-x/">Day 359: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes X - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/25/day-360-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-xi/">Day 360: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes XI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/26/day-361-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-xii/">Day 361: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes XII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/27/day-362-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-xiii/">Day 362: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes XIII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/28/day-363-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-xiv/">Day 363: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes XIV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/29/day-364-ryans-phd-journey-openke-pytorch-library-analysis-code-snippets-for-11-ke-models/">Day 364: Ryans PhD Journey  OpenKE-PyTorch Library Analysis + code snippets for 11 KE models - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/30/day-365-nlp-papers-summary-a-survey-on-knowledge-graph-embedding/">Day 365: NLP Papers Summary  A Survey on Knowledge Graph Embedding - Ryan Ong</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Look for my friend&#39;s wagon using OpenAI CLIP</title>
            <link>http://semiosis.github.io/posts/look-for-my-friend-s-wagon-using-openai-clip/</link>
            <pubDate>Fri, 12 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/look-for-my-friend-s-wagon-using-openai-clip/</guid>
            <description>Full demonstration I show you how easy it is to search for an arbitrary thing inside of an arbitrary youtube video.
I am blogging and recording as I am demonstrating the technology.
Skip to 3 minutes to see the magic.

Summary I am looking for my friend&amp;rsquo;s wagon in a youtube video.
 This is the video Here&amp;rsquo;s What We REALLY Think Of Your Cars 5 - YouTube  The images of various wagons should appear after I run the command which I have bound in emacs.</description>
            <content type="html"><![CDATA[<h2 id="full-demonstration">Full demonstration</h2>
<p>I show you how easy it is to search for an
arbitrary thing inside of an arbitrary youtube
video.</p>
<p>I am blogging and recording as I am
demonstrating the technology.</p>
<p>Skip to 3 minutes to see the magic.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/rbMQDnUccPQEEigQYXXeE48Xa" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/rbMQDnUccPQEEigQYXXeE48Xa.svg" /></a></p>
<h2 id="summary">Summary</h2>
<p>I am looking for my friend&rsquo;s wagon in a
youtube video.</p>
<dl>
<dt>This is the video</dt>
<dd><a href="https://www.youtube.com/watch?v=K-jYThQKZsQ">Here&rsquo;s What We REALLY Think Of Your Cars 5 - YouTube</a></dd>
</dl>
<p>The images of various wagons should appear after I run the command which I have bound in emacs.</p>
<table>
<thead>
<tr>
<th>kb</th>
<th>f</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>M-l / V</code></td>
<td><code>find-in-youtube</code></td>
<td><code>global-map</code></td>
</tr>
</tbody>
</table>
<p>It&rsquo;s based on code from this github repository.</p>
<p><a href="https://github.com/haltakov/natural-language-youtube-search">https://github.com/haltakov/natural-language-youtube-search</a></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">find-in-video <span style="color:#e6db74">&#34;https://www.youtube.com/watch?v=K-jYThQKZsQ&#34;</span> wagon</code></pre></td></tr></table>
</div>
</div>
<p>This is looking for wagons.</p>
<h2 id="results">Results</h2>
<figure>
    <img src="/ox-hugo/wagon.png"/> 
</figure>

]]></content>
        </item>
        
        <item>
            <title>Reading about DALL-E</title>
            <link>http://semiosis.github.io/posts/reading-about-dall-e/</link>
            <pubDate>Fri, 12 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/reading-about-dall-e/</guid>
            <description>Article https://openai.com/blog/dall-e/ Original paper https://arxiv.org/abs/2102.12092.pdf  Authors of Paper - Aditya Ramesh - Mikhail Pavlov - Gabriel Goh - Scott Gray - Chelsea Voss - Alec Radford - Mark Chen - Ilya Sutskever
Summary of DALL-E from Arxiv 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  Text-to-image generation has traditionally focused on finding better modeling assumptions for training on a fixed dataset.</description>
            <content type="html"><![CDATA[<dl>
<dt>Article</dt>
<dd><a href="https://openai.com/blog/dall-e/">https://openai.com/blog/dall-e/</a></dd>
<dt>Original paper</dt>
<dd><a href="https://arxiv.org/abs/2102.12092.pdf">https://arxiv.org/abs/2102.12092.pdf</a></dd>
</dl>
<p>Authors of Paper
-   Aditya Ramesh
-   Mikhail Pavlov
-   Gabriel Goh
-   Scott Gray
-   Chelsea Voss
-   Alec Radford
-   Mark Chen
-   Ilya Sutskever</p>
<h2 id="summary-of-dall-e-from-arxiv">Summary of DALL-E from Arxiv</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Text-to-image generation has traditionally
focused on finding better modeling assumptions
for training on a fixed dataset.

These assumptions might involve complex
architectures, auxiliary losses, or side
information such as object part labels or
segmentation masks supplied during training.

We describe a simple approach for this task
based on a transformer that autoregressively
models the text and image tokens as a single
stream of data.

With sufficient data and scale, our approach
is competitive with previous domain-specific
models when evaluated in a zero-shot fashion.</code></pre></td></tr></table>
</div>
</div>
<h3 id="gpt-3-summarization"><code>GPT-3</code> Summarization</h3>
<p>Both of the following summarizations were made
my <code>GPT-3</code> using the following prompt:</p>
<p><a href="http://github.com/semiosis/prompts/blob/master/prompts/summarize-for-2nd-grader.prompt">http://github.com/semiosis/prompts/blob/master/prompts/summarize-for-2nd-grader.prompt</a></p>
<ul>
<li>Abstractive summarizations of the abstract
<ul>
<li>
<p>This is how we can make a computer that can make a picture of words.</p>
</li>
<li>
<p>This is about computers learning to understand pictures and words together,
not just pictures or just words.</p>
</li>
</ul>
</li>
</ul>
<h2 id="automating-the-process-of-reading-papers">Automating the process of reading papers</h2>
<ul>
<li>I use <code>GPT-3</code> and <code>spaCy</code> to summarize.</li>
</ul>
<p><a title="asciinema recording" href="https://asciinema.org/a/mp12WYy9bWwkeRizb4Y4o4jJb" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/mp12WYy9bWwkeRizb4Y4o4jJb.svg" /></a></p>
]]></content>
        </item>
        
        <item>
            <title>Context menus based on GPT-3</title>
            <link>http://semiosis.github.io/posts/context-menus-based-on-gpt-3/</link>
            <pubDate>Tue, 09 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/context-menus-based-on-gpt-3/</guid>
            <description>Summary I create a GPT-3 prompt for testing to see if code is Haskell and use it as a test inside emacs to suggest further functions.
 Prompt file http://github.com/semiosis/prompts/blob/master/prompts/text-is-haskell.prompt  Demonstration As you can see, GPT-3 is able to detect the language and I can use that as a test in my emacs to provide further functions. The suggested function was yet another GPT-3 prompt function for translating Haskell into Clojure.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I create a GPT-3 prompt for testing to see if
code is Haskell and use it as a test inside
emacs to suggest further functions.</p>
<dl>
<dt>Prompt file</dt>
<dd><a href="http://github.com/semiosis/prompts/blob/master/prompts/text-is-haskell.prompt">http://github.com/semiosis/prompts/blob/master/prompts/text-is-haskell.prompt</a></dd>
</dl>
<h2 id="demonstration">Demonstration</h2>
<p>As you can see, GPT-3 is able to detect the
language and I can use that as a test in my
emacs to provide further functions. The
suggested function was yet another GPT-3
prompt function for translating Haskell into
Clojure.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/IUrbnMxTqP3cFtQB5CPWelCuP" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/IUrbnMxTqP3cFtQB5CPWelCuP.svg" /></a></p>
<p><span class="underline"><strong>The faster and more impressive version</strong></span>
This uses emacs' <code>language-detection</code> package.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/64hjDdeeqkhTEzZA9RvYjKyy9" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/64hjDdeeqkhTEzZA9RvYjKyy9.svg" /></a></p>
<h2 id="create-a-prompt-to-check-if-selected-code-is-haskell">Create a prompt to check if selected code is Haskell</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;test if text is haskell&#34;</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;tests if text is haskell code&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    If the code is haskell, respond with &#34;Haskell&#34;. If the query is not haskell, respond with &#34;?&#34;.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:putStrLn &#34;What is your name?&#34;
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:[1,2,3,4] ++ [9,10,11,12]
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:In reality, it would require too much code to hide _Prelude_ clashes like this, so you
</span><span style="color:#e6db74">    Language:?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:data Shape = Circle Float Float Float | Rectangle Float Float Float Float deriving (Show)
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:In reality, it would require too much code to hide _Prelude_ clashes like this, so you
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:(ns example.pprinter (:use clojure.pprint))
</span><span style="color:#e6db74">    Language:?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:surface (Rectangle (Point x1 y1) (Point x2 y2)) = (abs $ x2 - x1) * (abs $ y2 - y1)
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:&#34;Steve Buscemi&#34; !! 6
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:regex = re.compile(r&#39;^(?P&lt;indent&gt;(?: {4})*)(?P&lt;name&gt;\S.*)&#39;)
</span><span style="color:#e6db74">    Language:?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:doubleSmallNumber x = if x &gt; 100 then x else x*2
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:[ x | x &lt;- [50..100], x `mod` 7 == 3]
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:* TODO Look into =ctrl=
</span><span style="color:#e6db74">    Language:?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    &lt;1&gt;
</span><span style="color:#e6db74">    Language:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">40</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;text&#34;</span>
<span style="color:#f92672">examples</span>:
- |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    </span>    <span style="color:#ae81ff">putStrLn $ &#34;Hey, I Love &#34; ++ city ++ &#34;!&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="add-code-to-use-gpt-3-to-test-the-selected-text">Add code to use <code>GPT-3</code> to test the selected text</h2>
<p><code>GPT-3</code> will test if the selected text is in the Haskell language.</p>
<p>It will then provide a context menu option to translate it into Clojure.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun gpt-test-haskell ()
  (let ((lang (pen-pf-test-if-text-is-haskell (selection))))
    (<span style="color:#a6e22e">message</span> lang)
    (<span style="color:#a6e22e">string-equal</span> (<span style="color:#a6e22e">message</span> lang) <span style="color:#e6db74">&#34;Haskell&#34;</span>)))

<span style="color:#75715e">;; This is so I can jump here</span>
(defvar right-click-context-global-menu-tree-placeholder <span style="color:#66d9ef">nil</span>)
(setq right-click-context-global-menu-tree
      <span style="color:#f92672">&#39;</span>((<span style="color:#e6db74">&#34;Cancel&#34;</span> :call <span style="color:#a6e22e">identity</span>)
        (<span style="color:#e6db74">&#34;Edit menu&#34;</span> :call (j <span style="color:#e6db74">&#39;right-click-context-global-menu-tree-placeholder</span>))
        (<span style="color:#e6db74">&#34;Button cloud&#34;</span> :call toggle-buttoncloud)
        (<span style="color:#e6db74">&#34;GPT-3&#34;</span>
         (<span style="color:#e6db74">&#34;Convert Haskell to Clojure&#34;</span> :call pen-pf-translate-haskell-to-clojure :if (gpt-test-haskell)))
        (<span style="color:#e6db74">&#34;NLP&#34;</span>
         (<span style="color:#e6db74">&#34;Summarize&#34;</span> :call (progn
                              (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;pen-pf-eli5-explain-like-i-m-five</span>)
                              (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;fi-text-to-paras</span>)) :if (selected-p))
         (<span style="color:#e6db74">&#34;Vexate&#34;</span> :call (progn
                           (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;pen-pf-complicated-explanation-of-how-to-x</span>)
                           (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;fi-text-to-paras</span>)) :if (selected-p))
         (<span style="color:#e6db74">&#34;Fast Paras&#34;</span> :call (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;fi-text-to-paras-nosegregate</span>) :if (selected-p))
         (<span style="color:#e6db74">&#34;Paras&#34;</span> :call (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;fi-text-to-paras</span>) :if (selected-p))
         (<span style="color:#e6db74">&#34;spaCy&#34;</span> :call (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;sps-play-spacy</span>) :if (selected-p)))
))</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Google ngrams in emacs</title>
            <link>http://semiosis.github.io/posts/google-ngrams-in-emacs/</link>
            <pubDate>Tue, 09 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/google-ngrams-in-emacs/</guid>
            <description>Summary I integrate the Google ngram viewer functionality into emacs for suggesting words in context.
Demonstration I demonstrate selecting alternative middle word for the given context words.

Code custom.el configuration
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  (defcustom google-ngrams-corpus &amp;#34;&amp;#34; &amp;#34;Google ngrams corpus&amp;#34; :type &amp;#39;string :group &amp;#39;system-custom :initialize #&amp;#39;custom-initialize-default :options (list &amp;#34;15 # english 2012&amp;#34; &amp;#34;16 # english fiction&amp;#34; &amp;#34;26 # english 2019&amp;#34;) :set (lambda (_sym value) (myrc-set (tr &amp;#34;-&amp;#34; &amp;#34;_&amp;#34; (sym2str _sym)) value) (set _sym (sor value))) ;; The default :initialize is custom-initialize-reset ;; And uses the :set function ;; :initialize (lambda :get (lambda (_sym) (let* ((yaml (yamlmod-read-file &amp;#34;/home/shane/notes/myrc.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I integrate the Google ngram viewer
functionality into emacs for suggesting words in context.</p>
<h2 id="demonstration">Demonstration</h2>
<p>I demonstrate selecting alternative middle
word for the given context words.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/w6DuW7w4gcbxVX8d8xEeIkljt" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/w6DuW7w4gcbxVX8d8xEeIkljt.svg" /></a></p>
<h2 id="code">Code</h2>
<p><span class="underline"><strong>custom.el configuration</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defcustom google-ngrams-corpus <span style="color:#e6db74">&#34;&#34;</span>
  <span style="color:#e6db74">&#34;Google ngrams corpus&#34;</span>
  :type <span style="color:#e6db74">&#39;string</span>
  :group <span style="color:#e6db74">&#39;system-custom</span>
  :initialize <span style="color:#a6e22e">#&#39;</span>custom-initialize-default
  :options (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#34;15 # english 2012&#34;</span>
                 <span style="color:#e6db74">&#34;16 # english fiction&#34;</span>
                 <span style="color:#e6db74">&#34;26 # english 2019&#34;</span>)
  :set (lambda (_sym value)
         (myrc-set (tr <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#e6db74">&#34;_&#34;</span> (sym2str _sym)) value)
         (<span style="color:#a6e22e">set</span> _sym (sor value)))
  <span style="color:#75715e">;; The default :initialize is custom-initialize-reset</span>
  <span style="color:#75715e">;; And uses the :set function</span>
  <span style="color:#75715e">;; :initialize (lambda</span>
  :get (lambda (_sym)
         (let* ((yaml (yamlmod-read-file <span style="color:#e6db74">&#34;/home/shane/notes/myrc.yaml&#34;</span>))
                (cfgval (sor (ht-get yaml (tr <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#e6db74">&#34;_&#34;</span> (sym2str _sym))))))

           (if cfgval
               (<span style="color:#a6e22e">set</span> _sym cfgval)
             <span style="color:#e6db74">&#34;26 # english 2019&#34;</span>))))</code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/ngram-custom.png"/> 
</figure>

<p><span class="underline"><strong>elisp</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun ngram-suggest (query)
  (str2lines (snc <span style="color:#e6db74">&#34;ngram-complete&#34;</span> query)))

(defun gen-google-ngram-queries (s i)
  (-filter-not-empty-string
   (str2list
    (snc
     (<span style="color:#a6e22e">concat</span>
      <span style="color:#e6db74">&#34;echo &#34;</span>
      (q s)
      <span style="color:#e6db74">&#34; | google-ngram-query-combinations &#34;</span>
      (str i)
      <span style="color:#e6db74">&#34; | perl -e &#39;print sort { length($b) &lt;=&gt; length($a) } &lt;&gt;&#39;&#34;</span>)))))

(defun ngram-query-replace-this ()
  (interactive)
  (if (not (selectionp))
      (let* ((line-str (chomp (current-line-string)))
             (col (<span style="color:#a6e22e">current-column</span>))
             (suggestions (ngram-suggest (fz (gen-google-ngram-queries line-str col)))))
        (if (-filter-not-empty-string suggestions)
            (let ((replacement (fz suggestions)))
              (if (sor replacement)
                  (nbfs replacement)))))))

(<span style="color:#a6e22e">define-key</span> my-mode-map (kbd <span style="color:#e6db74">&#34;H-Q&#34;</span>) <span style="color:#e6db74">&#39;ngram-query-replace-this</span>)

(defun ngram-query-replace ()
  (interactive)
  (if (selectionp)
      (let* ((query (if (selection-p)
                        (selection)))
             (reformulated-query (if (string-match-p <span style="color:#e6db74">&#34;\\*&#34;</span> query)
                                     query
                                   (let ((wildcard-word (fz (split-string query <span style="color:#e6db74">&#34; &#34;</span> <span style="color:#66d9ef">t</span>))))
                                     (if wildcard-word
                                         (s-replace-regexp (eatify wildcard-word) <span style="color:#e6db74">&#34;*&#34;</span> query)
                                       query))))
             (suggestions (ngram-suggest reformulated-query)))
        (if (-filter-not-empty-string suggestions)
            (let ((replacement (fz suggestions)))
              (if replacement
                  (progn
                    (cua-delete-region)
                    (<span style="color:#a6e22e">insert</span> replacement))))))))</code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>ngram-complete</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

postprocess<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    sed <span style="color:#e6db74">&#34;s/I &#39;m/I&#39;m/g&#34;</span>
<span style="color:#f92672">}</span>

<span style="color:#75715e"># corpus=15 # english 2012</span>
<span style="color:#75715e"># corpus=16 # english fiction</span>
<span style="color:#75715e"># corpus=26 # english 2019</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>corpus:=<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>myrc .google_ngrams_corpus | cut -d <span style="color:#e6db74">&#39; &#39;</span> -f 1<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>corpus:=<span style="color:#e6db74">&#34;26&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

start<span style="color:#f92672">=</span><span style="color:#ae81ff">1800</span>
end<span style="color:#f92672">=</span><span style="color:#ae81ff">2020</span>
<span style="color:#75715e"># end=1899</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -c<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        corpus<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    -y<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        start<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        end<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    -s<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        start<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    -e<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        end<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

awk1 | <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r line; <span style="color:#66d9ef">do</span>
    <span style="color:#f92672">{</span>
        phrase<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$line<span style="color:#e6db74">&#34;</span>
        oci curl -s <span style="color:#e6db74">&#34;https://books.google.com/ngrams/json?content=</span><span style="color:#66d9ef">$(</span>echo <span style="color:#e6db74">&#34;</span>$phrase<span style="color:#e6db74">&#34;</span> | urlencode | sed <span style="color:#e6db74">&#39;s/%2A/*/g&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&amp;year_start=</span>$start<span style="color:#e6db74">&amp;year_end=</span>$end<span style="color:#e6db74">&amp;corpus=</span>$corpus<span style="color:#e6db74">&amp;smoothing=3&#34;</span> | jq -r .<span style="color:#f92672">[]</span>.ngram | htmldecode.sh | postprocess
    <span style="color:#f92672">}</span> 0&lt;/dev/null
<span style="color:#66d9ef">done</span> | sed -u 1d | pavs</code></pre></td></tr></table>
</div>
</div>
<p>The following python script generates ngram
queries for replacing the current word based
on the cursor index position.</p>
<p><span class="underline"><strong>google-ngram-query-combinations</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/env python3.6</span>
<span style="color:#75715e"># -*- coding: utf-8 -*-</span>

<span style="color:#f92672">import</span> sys
s <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>stdin<span style="color:#f92672">.</span>read()

len(sys<span style="color:#f92672">.</span>argv) <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">or</span> exit(<span style="color:#ae81ff">1</span>)

i <span style="color:#f92672">=</span> int(sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>])

r <span style="color:#f92672">=</span> s[i:]
l <span style="color:#f92672">=</span> s[:i]
l <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34; &#34;</span><span style="color:#f92672">.</span>join(l<span style="color:#f92672">.</span>split())

<span style="color:#66d9ef">try</span>:
    <span style="color:#66d9ef">if</span> s[i <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>] <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39; &#39;</span>:
        s <span style="color:#f92672">=</span> l <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34; &#34;</span> <span style="color:#f92672">+</span> r
    <span style="color:#66d9ef">else</span>:
        s <span style="color:#f92672">=</span> l <span style="color:#f92672">+</span> r

    i<span style="color:#f92672">=</span>len(l)

    tks <span style="color:#f92672">=</span> s<span style="color:#f92672">.</span>split()
    s <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34; &#34;</span><span style="color:#f92672">.</span>join(tks)
    pos <span style="color:#f92672">=</span> s[:i]<span style="color:#f92672">.</span>count(<span style="color:#e6db74">&#34; &#34;</span>)

    tks[pos] <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;*&#34;</span>

    <span style="color:#66d9ef">for</span> n <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">6</span>):
        subtks <span style="color:#f92672">=</span> tks[max(pos <span style="color:#f92672">-</span> (n<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>), <span style="color:#ae81ff">0</span>):min(pos <span style="color:#f92672">+</span> n,len(tks))]

        <span style="color:#66d9ef">for</span> l <span style="color:#f92672">in</span> list(zip(<span style="color:#f92672">*</span>(subtks[i:] <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(n)))):
            <span style="color:#66d9ef">print</span>(<span style="color:#e6db74">&#34; &#34;</span><span style="color:#f92672">.</span>join(l))
<span style="color:#66d9ef">except</span>:
    <span style="color:#66d9ef">pass</span></code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">echo <span style="color:#e6db74">&#34;For the moment, let it accept 2 words to the left and 2 to the right&#34;</span> | google-ngram-query-combinations <span style="color:#ae81ff">20</span></code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">the moment, *
moment, * it
* it accept
For the moment, *
the moment, * it
moment, * it accept
* it accept <span style="color:#ae81ff">2</span>
For the moment, * it
the moment, * it accept
moment, * it accept <span style="color:#ae81ff">2</span>
* it accept <span style="color:#ae81ff">2</span> words
</code></pre></div><p><a title="asciinema recording" href="https://asciinema.org/a/nKcNFBl9VjLfU1kFeBkx9TIBH" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/nKcNFBl9VjLfU1kFeBkx9TIBH.svg" /></a></p>
]]></content>
        </item>
        
        <item>
            <title>spaCy in emacs</title>
            <link>http://semiosis.github.io/posts/spacy-in-emacs/</link>
            <pubDate>Tue, 09 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/spacy-in-emacs/</guid>
            <description>Summary I begin construction of an environment for developing with spaCy.
 Goals  spaCy pipeline builder/wizard Select and analyse text with spaCy linguistic features spaCy python playground text selection configuration of spaCy using emacs custom.el    deplacy demo  deplacy code https://github.com/KoichiYasuoka/deplacy  
Code generation and bindings 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  (defmacro etv-filter (cmd) (let* ((slug (slugify cmd)) (sym (str2sym (concat &amp;#34;etv-&amp;#34; slug)))) `(defun ,sym (&amp;amp;optional input) (interactive (list (my/selected-text))) (if (not input) (setq input (my/selected-text))) (etv (snc ,cmd input))))) (cl-loop for s in &amp;#39;(&amp;#34;partsofspeech&amp;#34; &amp;#34;entities&amp;#34; &amp;#34;displacy&amp;#34; &amp;#34;token-pos-dep&amp;#34; &amp;#34;sentiment&amp;#34; &amp;#34;segment-sentences&amp;#34;) do (eval (expand-macro `(etv-filter ,s)))) (define-key selected-keymap (kbd &amp;#34;Z n&amp;#34;) &amp;#39;ngram-query-replace) (define-key selected-keymap (kbd &amp;#34;Z S&amp;#34;) &amp;#39;sps-play-spacy) (define-key selected-keymap (kbd &amp;#34;Z P&amp;#34;) &amp;#39;etv-partsofspeech) (define-key selected-keymap (kbd &amp;#34;Z E&amp;#34;) &amp;#39;etv-entities) (define-key selected-keymap (kbd &amp;#34;Z D&amp;#34;) &amp;#39;etv-displacy) (define-key selected-keymap (kbd &amp;#34;Z T&amp;#34;) &amp;#39;etv-token-pos-dep) (define-key selected-keymap (kbd &amp;#34;Z N&amp;#34;) &amp;#39;etv-sentiment) (define-key selected-keymap (kbd &amp;#34;Z G&amp;#34;) &amp;#39;etv-segment-sentences)     Configuration yaml I store the configuration of spaCy inside a yaml file.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I begin construction of an environment for developing with <code>spaCy</code>.</p>
<ul>
<li>Goals
<ul>
<li><code>spaCy</code> pipeline builder/wizard</li>
<li>Select and analyse text with <code>spaCy</code> linguistic features</li>
<li><code>spaCy</code> python playground text selection</li>
<li>configuration of <code>spaCy</code> using emacs <code>custom.el</code></li>
</ul>
</li>
</ul>
<h2 id="deplacy-demo"><code>deplacy</code> demo</h2>
<dl>
<dt><code>deplacy</code> code</dt>
<dd><a href="https://github.com/KoichiYasuoka/deplacy">https://github.com/KoichiYasuoka/deplacy</a></dd>
</dl>
<p><a title="asciinema recording" href="https://asciinema.org/a/OJcQVwHftFkLEypmaN8Qv8vLz" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/OJcQVwHftFkLEypmaN8Qv8vLz.svg" /></a></p>
<h2 id="code-generation-and-bindings">Code generation and bindings</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defmacro etv-filter (cmd)
  (let* ((slug (slugify cmd))
         (sym (str2sym (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;etv-&#34;</span> slug))))
    <span style="color:#f92672">`</span>(defun <span style="color:#f92672">,</span>sym (<span style="color:#66d9ef">&amp;optional</span> input)
       (interactive (<span style="color:#a6e22e">list</span> (my/selected-text)))
       (if (not input)
           (setq input (my/selected-text)))
       (etv (snc <span style="color:#f92672">,</span>cmd input)))))

(cl-loop for s in
         <span style="color:#f92672">&#39;</span>(<span style="color:#e6db74">&#34;partsofspeech&#34;</span>
           <span style="color:#e6db74">&#34;entities&#34;</span>
           <span style="color:#e6db74">&#34;displacy&#34;</span>
           <span style="color:#e6db74">&#34;token-pos-dep&#34;</span>
           <span style="color:#e6db74">&#34;sentiment&#34;</span>
           <span style="color:#e6db74">&#34;segment-sentences&#34;</span>)
         do
         (<span style="color:#a6e22e">eval</span>
          (expand-macro
           <span style="color:#f92672">`</span>(etv-filter <span style="color:#f92672">,</span>s))))

(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z n&#34;</span>) <span style="color:#e6db74">&#39;ngram-query-replace</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z S&#34;</span>) <span style="color:#e6db74">&#39;sps-play-spacy</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z P&#34;</span>) <span style="color:#e6db74">&#39;etv-partsofspeech</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z E&#34;</span>) <span style="color:#e6db74">&#39;etv-entities</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z D&#34;</span>) <span style="color:#e6db74">&#39;etv-displacy</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z T&#34;</span>) <span style="color:#e6db74">&#39;etv-token-pos-dep</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z N&#34;</span>) <span style="color:#e6db74">&#39;etv-sentiment</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z G&#34;</span>) <span style="color:#e6db74">&#39;etv-segment-sentences</span>)</code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/spacy-bindings.png"/> 
</figure>

<h2 id="configuration">Configuration</h2>
<h3 id="yaml"><code>yaml</code></h3>
<p>I store the configuration of <code>spaCy</code> inside a <code>yaml</code> file.</p>
<figure>
    <img src="/ox-hugo/spacyconf.png"/> 
</figure>

<h3 id="custom-dot-el"><code>custom.el</code></h3>
<p>I create a customization interface within
emacs for configuring <code>spaCy</code> system-wide.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defcustom spacy-model <span style="color:#e6db74">&#34;&#34;</span>
  <span style="color:#e6db74">&#34;spaCy model&#34;</span>
  :type <span style="color:#e6db74">&#39;string</span>
  :group <span style="color:#e6db74">&#39;system-custom</span>
  :initialize <span style="color:#a6e22e">#&#39;</span>custom-initialize-default
  :options (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#34;en&#34;</span>
                 <span style="color:#e6db74">&#34;en_core_web_trf&#34;</span>
                 <span style="color:#e6db74">&#34;en_core_web_sm&#34;</span>
                 <span style="color:#e6db74">&#34;en_pytt_bertbaseuncased_lg&#34;</span>
                 <span style="color:#e6db74">&#34;de_core_news_sm&#34;</span>
                 <span style="color:#e6db74">&#34;fr&#34;</span>)
  :set (lambda (_sym value)
         (myrc-set (tr <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#e6db74">&#34;_&#34;</span> (sym2str _sym)) value)
         (<span style="color:#a6e22e">set</span> _sym (sor value)))
  <span style="color:#75715e">;; The default :initialize is custom-initialize-reset</span>
  <span style="color:#75715e">;; And uses the :set function</span>
  <span style="color:#75715e">;; :initialize (lambda</span>
  :get (lambda (_sym)
         (let* ((yaml (yamlmod-read-file <span style="color:#e6db74">&#34;/home/shane/notes/myrc.yaml&#34;</span>))
                (cfgval (sor (ht-get yaml (tr <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#e6db74">&#34;_&#34;</span> (sym2str _sym))))))

           (if cfgval
               (<span style="color:#a6e22e">set</span> _sym cfgval)
             <span style="color:#e6db74">&#34;&#34;</span>))))</code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/spacyconf-custom.png"/> 
</figure>

<h2 id="external-scripts">external scripts</h2>
<p>This is an example of one of the exterynal
scripts that is used by and configured with
emacs via a <code>yaml</code> config.</p>
<p><span class="underline"><strong>displacy</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/env python3</span>
<span style="color:#75715e"># -*- coding: utf-8 -*-</span>

<span style="color:#f92672">import</span> sys
data <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>stdin<span style="color:#f92672">.</span>read()

<span style="color:#f92672">import</span> sys
program_name <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">0</span>]
arguments <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>:]
count <span style="color:#f92672">=</span> len(arguments)

<span style="color:#f92672">import</span> spacy

<span style="color:#f92672">import</span> shanepy
spacy_model <span style="color:#f92672">=</span> shanepy<span style="color:#f92672">.</span>myrc_get(<span style="color:#e6db74">&#34;spacy_model&#34;</span>) <span style="color:#f92672">or</span> <span style="color:#e6db74">&#34;en_core_web_md&#34;</span>
nlp <span style="color:#f92672">=</span> spacy<span style="color:#f92672">.</span>load(spacy_model)

doc <span style="color:#f92672">=</span> nlp(data)
spacy<span style="color:#f92672">.</span>displacy<span style="color:#f92672">.</span>serve(doc, style<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;dep&#39;</span>)</code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstration">Demonstration</h2>
<p>This demonstrates configuration, context
menus, bindings, code generation of scripts
all in emacs.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/G2RFrnbIiAgYv5uz5lbnYNqxr" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/G2RFrnbIiAgYv5uz5lbnYNqxr.svg" /></a></p>
]]></content>
        </item>
        
        <item>
            <title>An operating system based on GPT-3</title>
            <link>http://semiosis.github.io/posts/an-operating-system-based-on-gpt-3/</link>
            <pubDate>Mon, 08 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/an-operating-system-based-on-gpt-3/</guid>
            <description>Reference http://github.com/semiosis/examplary  Summary I assume that GPT-3 or some descendant of it will become the primary interface to the computer.
I create a configuration option to enable / disable GPT-3.
When disabled, the environment will resort to alternative means of performing tasks.
Configuration 1  vim +/&amp;#34;use_gpt3: on&amp;#34; &amp;#34;$NOTES/myrc.yaml&amp;#34;     1  vim +/&amp;#34;summarize) {&amp;#34; &amp;#34;$SCRIPTS/s&amp;#34;   If gpt3 is enabled, filter through OpenAI API abstractive summarizer Otherwise, use sumy.</description>
            <content type="html"><![CDATA[<dl>
<dt>Reference</dt>
<dd><a href="http://github.com/semiosis/examplary">http://github.com/semiosis/examplary</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I assume that <code>GPT-3</code> or some descendant of it
will become the primary interface to the
computer.</p>
<p>I create a configuration option to enable /
disable <code>GPT-3</code>.</p>
<p>When disabled, the environment will resort to
alternative means of performing tasks.</p>
<h2 id="configuration">Configuration</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vim +/<span style="color:#e6db74">&#34;use_gpt3: on&#34;</span> <span style="color:#e6db74">&#34;</span>$NOTES<span style="color:#e6db74">/myrc.yaml&#34;</span></code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/gpt3-config.png"/> 
</figure>

<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vim +/<span style="color:#e6db74">&#34;summarize) {&#34;</span> <span style="color:#e6db74">&#34;</span>$SCRIPTS<span style="color:#e6db74">/s&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="if-gpt3-is-enabled-filter-through-openai-api-abstractive-summarizer">If <code>gpt3</code> is enabled, filter through OpenAI API abstractive summarizer</h3>
<p>Otherwise, use <code>sumy</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">summarize<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
    <span style="color:#66d9ef">if</span> myrc-test use_gpt3; <span style="color:#66d9ef">then</span>
        openai-complete $MYGIT/semiosis/prompts/prompts/summarize-for-2nd-grader.prompt
    <span style="color:#66d9ef">else</span>
        zsh -c <span style="color:#e6db74">&#34;sumy lex-rank --length=10 --file=&lt;(cat)&#34;</span>
    <span style="color:#66d9ef">fi</span>
<span style="color:#f92672">}</span>
;;</code></pre></td></tr></table>
</div>
</div>
<h2 id="a-demonstration-of-the-entire-workflow">A demonstration of the entire workflow</h2>
<p><a title="asciinema recording" href="https://asciinema.org/a/Fb17RAzSfSJAIksddxwqbsMhZ" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/Fb17RAzSfSJAIksddxwqbsMhZ.svg" /></a></p>
<h2 id="a-zettelkasten-of-natural-language-processing-tasks">A Zettelkasten of Natural Language Processing tasks</h2>
<figure>
    <img src="/ox-hugo/org-brain.png"/> 
</figure>

<p>I use <code>org-brain</code> because it enables me to
recall exactly where I am substituting <code>GPT-3</code>
within my scripts.</p>
<p><span class="underline"><strong><code>org-brain</code> demo</strong></span></p>
<p><a title="asciinema recording" href="https://asciinema.org/a/nrqqHWCfc5eG0lj3LPyzO2T2h" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/nrqqHWCfc5eG0lj3LPyzO2T2h.svg" /></a></p>
<h2 id="gpt-3-may-be-easily-toggled-via-point-and-click"><code>GPT-3</code> May be easily toggled via point and click</h2>
<figure>
    <img src="/ox-hugo/gpt-toggle.png"/> 
</figure>

]]></content>
        </item>
        
        <item>
            <title>A natural language database using a single GPT prompt</title>
            <link>http://semiosis.github.io/posts/a-natural-language-database-using-a-single-gpt-prompt/</link>
            <pubDate>Sun, 07 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/a-natural-language-database-using-a-single-gpt-prompt/</guid>
            <description>Original article https://www.gwern.net/GPT-3#the-database-prompt  Summary A single prompt describes transactions to and from a database.
GPT-3 is able to answer questions about the transactions that have taken place.
GPT-3 isn&amp;rsquo;t actually a database.
The LM simply understands language so well that describing the transactions that have taken place would naturally lead to the GPT-3 response.
The prompt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  title: &amp;#34;database example&amp;#34; doc: &amp;#34;GPT-3 as a NL interface for semantically querying logic in prose&amp;#34; prompt: |+The database begins knowing nothing.</description>
            <content type="html"><![CDATA[<dl>
<dt>Original article</dt>
<dd><a href="https://www.gwern.net/GPT-3#the-database-prompt">https://www.gwern.net/GPT-3#the-database-prompt</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>A single prompt describes transactions to and from a database.</p>
<p>GPT-3 is able to answer questions about the
transactions that have taken place.</p>
<p>GPT-3 isn&rsquo;t actually a database.</p>
<p>The LM simply understands language so well
that describing the transactions that have
taken place would naturally lead to the GPT-3
response.</p>
<h2 id="the-prompt">The prompt</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;database example&#34;</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;GPT-3 as a NL interface for semantically querying logic in prose&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The database begins knowing nothing.
</span><span style="color:#e6db74">    The database knows everything that is added to it.
</span><span style="color:#e6db74">    The database does not know anything else.
</span><span style="color:#e6db74">    When asked a question, if the answer has been added to the database the database says the answer.
</span><span style="color:#e6db74">    When asked a question, if the answer has not been added the database says it does not know.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: Does the database know “What is 2+2?”
</span><span style="color:#e6db74">    A: The database does not know.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: Does the database know “What is the capital of France?”
</span><span style="color:#e6db74">    A: The database does not know.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    &#34;&#34;Tom is 20 years old&#34;&#34; is added to the database.
</span><span style="color:#e6db74">    Nothing else about Tom is added to the database.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: Does the database know where Tom lives?
</span><span style="color:#e6db74">    A: The database does not know.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: How does the database respond when Tom’s age?
</span><span style="color:#e6db74">    A: The database says “Tom is 20 years old.”
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: How does the database response when asked “What’s my age?”
</span><span style="color:#e6db74">    A: The database says “You are not in the database.”
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    &#34;&#34;Shane is a cool guy&#34;&#34; is added to the database.
</span><span style="color:#e6db74">    &#34;&#34;Shane is 33 years old&#34;&#34; is added to the database.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: &lt;1&gt;
</span><span style="color:#e6db74">    A:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;\n\n&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;query or input&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;How old is Shane?&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstration">Demonstration</h2>
<p>As you can see, the prompt only functions
approximately as a database.</p>
<p>It could certainly be made more reliable
either through adjusting parameters or by
providing better counter-examples.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/VDkB11XyAMv8kvieuDuONwMUp" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/VDkB11XyAMv8kvieuDuONwMUp.svg" /></a></p>
<h2 id="utility">Utility</h2>
<p>This ability of GPT-3 could be used for the
NLP task of information extraction.</p>
]]></content>
        </item>
        
        <item>
            <title>Translating Haskell to Clojure with GPT-3</title>
            <link>http://semiosis.github.io/posts/translating-haskell-to-clojure-with-gpt-3/</link>
            <pubDate>Sun, 07 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/translating-haskell-to-clojure-with-gpt-3/</guid>
            <description>Relevant material https://hyperpolyglot.org/ml  Summary Who needs hyperpolyglot when you have GPT-3?
I translate Haskell into Clojure using the following prompt.
haskell-to-clojure.prompt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  title: &amp;#34;Translate Haskell to Clojure&amp;#34; prompt: |+Haskell: zip (map show [1,5,9]) [&amp;#34;a&amp;#34;,&amp;#34;b&amp;#34;,&amp;#34;c&amp;#34;] Clojure: (println (map vector &amp;#39;(1 2 3) &amp;#39;(4 5 6))) Haskell: map toUpper &amp;#34;MiXeD cAsE&amp;#34; Clojure: (clojure.</description>
            <content type="html"><![CDATA[<dl>
<dt>Relevant material</dt>
<dd><a href="https://hyperpolyglot.org/ml">https://hyperpolyglot.org/ml</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>Who needs <code>hyperpolyglot</code> when you have <code>GPT-3</code>?</p>
<p>I translate Haskell into Clojure using the following prompt.</p>
<h3 id="haskell-to-clojure-dot-prompt"><code>haskell-to-clojure.prompt</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Translate Haskell to Clojure&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    zip (map show [1,5,9]) [&#34;a&#34;,&#34;b&#34;,&#34;c&#34;]
</span><span style="color:#e6db74">    Clojure:
</span><span style="color:#e6db74">    (println (map vector &#39;(1 2 3) &#39;(4 5 6)))
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    map toUpper &#34;MiXeD cAsE&#34;
</span><span style="color:#e6db74">    Clojure:
</span><span style="color:#e6db74">    (clojure.string/upper-case &#34;MiXeD cAsE&#34;)
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    putStrLn &#34;Hello World&#34;
</span><span style="color:#e6db74">    Clojure:
</span><span style="color:#e6db74">    (println &#34;Hello World&#34;)
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    import Data.Time.Clock
</span><span style="color:#e6db74">    import Data.Time.Calendar
</span><span style="color:#e6db74">    date :: IO (Integer, Int, Int) -- :: (year, month, day)
</span><span style="color:#e6db74">    date = getCurrentTime &gt;&gt;= return . toGregorian . utctDay
</span><span style="color:#e6db74">    Clojure:
</span><span style="color:#e6db74">    (defn date [] (.toString (java.util.Date.)))
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    &lt;1&gt;
</span><span style="color:#e6db74">    Clojure:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;\n\n&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;haskell code&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;min 1 2&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstrations">Demonstrations</h2>
<p><a title="asciinema recording" href="https://asciinema.org/a/64hjDdeeqkhTEzZA9RvYjKyy9" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/64hjDdeeqkhTEzZA9RvYjKyy9.svg" /></a></p>
<p><a title="asciinema recording" href="https://asciinema.org/a/UknQeVwRejokdRKJEYa7KdNKk" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/UknQeVwRejokdRKJEYa7KdNKk.svg" /></a></p>
<h2 id="translate-haskell-into-clojure">Translate Haskell into Clojure</h2>
<p><span class="underline"><strong>Haskell</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#a6e22e">div</span> <span style="color:#ae81ff">7</span> <span style="color:#ae81ff">3</span></code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>Clojure</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(/ <span style="color:#ae81ff">7</span> <span style="color:#ae81ff">3</span>)</code></pre></td></tr></table>
</div>
</div>
<h2 id="it-s-not-perfect">It&rsquo;s not perfect</h2>
<p><span class="underline"><strong>Haskell</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#a6e22e">z</span> <span style="color:#f92672">=</span> x <span style="color:#f92672">*</span> y
  <span style="color:#66d9ef">where</span> x <span style="color:#f92672">=</span> <span style="color:#ae81ff">3.0</span>
        y <span style="color:#f92672">=</span> <span style="color:#ae81ff">2.0</span> <span style="color:#f92672">*</span> x</code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>Clojure</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">defn </span>z [x y] (* y x))</code></pre></td></tr></table>
</div>
</div>
<h2 id="but-it-s-pretty-good">But it&rsquo;s <strong>pretty good</strong></h2>
<p><span class="underline"><strong>Haskell</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#66d9ef">let</span> absn <span style="color:#f92672">=</span> <span style="color:#66d9ef">if</span> n <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">0</span> <span style="color:#66d9ef">then</span> <span style="color:#f92672">-</span>n <span style="color:#66d9ef">else</span> n</code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>Clojure</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">defn </span>absn [n] (<span style="color:#66d9ef">if </span>(<span style="color:#a6e22e">negative?</span> n) (- n) n))</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>crontab.guru in emacs and making a prompt with GPT-3 to copy it</title>
            <link>http://semiosis.github.io/posts/crontab-guru-in-emacs/</link>
            <pubDate>Sat, 06 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/crontab-guru-in-emacs/</guid>
            <description>Related https://crontab.guru/ Author http://github.com/mullikine  Summary I build some functionality into emacs to use crontab.guru behind the scenes to interpret tab lines displaying inside of emacs, without using the web browser.
I then build a GPT-3 prompt which does exactly the same thing without crontab.guru and provide the initial script I made to examplary (my GPT-3 DSL) as an example generator, to enhance the prompt if that is needed later.</description>
            <content type="html"><![CDATA[<dl>
<dt>Related</dt>
<dd><a href="https://crontab.guru/">https://crontab.guru/</a></dd>
<dt>Author</dt>
<dd><a href="http://github.com/mullikine">http://github.com/mullikine</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I build some functionality into emacs to use
<code>crontab.guru</code> behind the scenes to interpret
tab lines displaying inside of emacs, without
using the web browser.</p>
<p>I then build a GPT-3 prompt which does exactly
the same thing without <code>crontab.guru</code> and
provide the initial script I made to
<code>examplary</code> (my GPT-3 DSL) as an example
generator, to enhance the prompt if that is
needed later.</p>
<h2 id="initial-steps">Initial steps</h2>
<p>When lines in cron format appear in an emacs
buffer, the <code>crontab-guru</code> function is
suggested, allowing you to easily understand
crontabs.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun buffer-cron-lines ()
  (sor (snc <span style="color:#e6db74">&#34;scrape \&#34;((?:[0-9-/]+|\\\\*)\\\\s+){4}(?:[0-9]+|\\\\*)\&#34;&#34;</span> (<span style="color:#a6e22e">buffer-string</span>))))

(defun chrontab-guru (tab)
  (interactive (<span style="color:#a6e22e">list</span> (fz (buffer-cron-lines))))
  (let ((tab (sed <span style="color:#e6db74">&#34;s/\\s\\+/_/g&#34;</span> tab)))
    (chrome (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;https://crontab.guru/#&#34;</span> tab))))</code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstration">Demonstration</h2>
<p><a title="asciinema recording" href="https://asciinema.org/a/dKU8QGolIthb93F8P29NESdn6" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/dKU8QGolIthb93F8P29NESdn6.svg" /></a></p>
<figure>
    <img src="/ox-hugo/crontabguru.png"/> 
</figure>

<h2 id="modify-to-display-the-explanation-inside-emacs">Modify to display the explanation inside emacs</h2>
<ul>
<li>Dump the Google Chrome DOM for the website (since it requires javascript)</li>
<li>Scrape the explanation from the website</li>
<li>Create a new buffer in emacs with the explanation</li>
</ul>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun crontab-guru (tab)
  (interactive (<span style="color:#a6e22e">list</span> (fz (buffer-cron-lines) (if (selectionp) (my/thing-at-point)))))
  (let ((tab (sed <span style="color:#e6db74">&#34;s/\\s\\+/_/g&#34;</span> tab)))
    <span style="color:#75715e">;; (chrome (concat &#34;https://crontab.guru/#&#34; tab))</span>
    (etv (scrape <span style="color:#e6db74">&#34;\&#34;[^\&#34;]*\&#34;&#34;</span> (snc (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;elinks-dump-chrome &#34;</span> (q (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;https://crontab.guru/#&#34;</span> tab))))))))</code></pre></td></tr></table>
</div>
</div>
<h2 id="prompt-gpt-3">Prompt GPT-3</h2>
<p>This script is a <code>string-&gt;string</code> filter
script that scrapes the chrome dom of
<code>crontab.guru</code> to get its result, given the tab as standard input.</p>
<p><span class="underline"><strong>interpret-crontab</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

scrape-crontab | awk1 | <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r tab; <span style="color:#66d9ef">do</span>
    <span style="color:#f92672">(</span>
        exec 0&lt;/dev/null
        <span style="color:#66d9ef">if</span> test -n <span style="color:#e6db74">&#34;</span>$tab<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
            taburlbit<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$tab<span style="color:#e6db74">&#34;</span> | sed <span style="color:#e6db74">&#34;s/\\s\\+/_/g&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
            elinks-dump-chrome <span style="color:#e6db74">&#34;https://crontab.guru/#</span>$taburlbit<span style="color:#e6db74">&#34;</span> | scrape <span style="color:#e6db74">&#34;\&#34;[^\&#34;]*\&#34;&#34;</span>
        <span style="color:#66d9ef">fi</span>
    <span style="color:#f92672">)</span>
<span style="color:#66d9ef">done</span> | sed -e <span style="color:#e6db74">&#39;s/^&#34;//&#39;</span> -e <span style="color:#e6db74">&#39;s/&#34;$//&#39;</span></code></pre></td></tr></table>
</div>
</div>
<p>The following file is a GPT-3 prompt which
accepts the above <code>interpret-crontab</code> script
as an external function to generate and train
and ultimately replace the prompt.</p>
<p><span class="underline"><strong>crontab-translator.prompt</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;crontab translator&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">  crontab
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  17 *	* * *
</span><span style="color:#e6db74">  At minute 17.
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  25 6	* * *
</span><span style="color:#e6db74">  At 06:25.
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  47 6	* * 7
</span><span style="color:#e6db74">  At 06:47 on Sunday.
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  52 6	1 * *
</span><span style="color:#e6db74">  At 06:52 on day-of-month 1.
</span><span style="color:#e6db74">  &lt;1&gt;</span>  
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;tab&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;30 7    * * *&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;interpret-crontab&#34;</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
<p>Example output from GPT-3:</p>
<dl>
<dt>Input tab</dt>
<dd><code>15 7    * * *</code></dd>
<dt>GPT-3 output</dt>
<dd><code>On day-of-week 7, at 15:00.</code></dd>
</dl>
<h2 id="moral-of-the-story">Moral of the story</h2>
<p>The moral of the story is that if a person
builds a website like crontab.guru, its
functionality actually becomes learned by the
next iteration of GPT and then its
functionality is able to be reproduced.</p>
]]></content>
        </item>
        
        <item>
            <title>Creating a playground for GPT-3 in emacs</title>
            <link>http://semiosis.github.io/posts/creating-a-playground-for-gpt-3-in-emacs/</link>
            <pubDate>Thu, 18 Feb 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/creating-a-playground-for-gpt-3-in-emacs/</guid>
            <description>Code https://github.com/mullikine/pen.el Prompts https://github.com/mullikine/prompts meetup.com event https://www.meetup.com/Code-Craft-Dunedin/events/276407816/ Slides http://github.com/mullikine/presentation-prompt-engineering-in-emacs/blob/master/presentation.pdf  Demonstration 
Prompt-Engineering Part 1: Building an environment Summary of talk I received a key for the OpenAI API 2 weeks ago, just a couple of days before my birthday.
I had applied around 5 to 10 times in the last year and I had finally been given a key.
I decided since the hour is late I would work on productivity tools that anyone can use, to facilitate programming in the new paradigm.</description>
            <content type="html"><![CDATA[<dl>
<dt>Code</dt>
<dd><a href="https://github.com/mullikine/pen.el">https://github.com/mullikine/pen.el</a></dd>
<dt>Prompts</dt>
<dd><a href="https://github.com/mullikine/prompts">https://github.com/mullikine/prompts</a></dd>
<dt><code>meetup.com</code> event</dt>
<dd><a href="https://www.meetup.com/Code-Craft-Dunedin/events/276407816/">https://www.meetup.com/Code-Craft-Dunedin/events/276407816/</a></dd>
<dt>Slides</dt>
<dd><a href="http://github.com/mullikine/presentation-prompt-engineering-in-emacs/blob/master/presentation.pdf">http://github.com/mullikine/presentation-prompt-engineering-in-emacs/blob/master/presentation.pdf</a></dd>
</dl>
<h3 id="demonstration">Demonstration</h3>
<p><a title="asciinema recording" href="https://asciinema.org/a/t7ATnFpnfzBp0yicIlGCt6eXi" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/t7ATnFpnfzBp0yicIlGCt6eXi.svg" /></a></p>
<h2 id="prompt-engineering-part-1-building-an-environment"><strong>Prompt-Engineering Part 1:</strong> Building an environment</h2>
<h3 id="summary-of-talk">Summary of talk</h3>
<p>I received a key for the <code>OpenAI</code> API 2 weeks ago, just a couple
of days before my birthday.</p>
<p>I had applied around 5 to 10 times in the last
year and I had finally been given a key.</p>
<p>I decided since the hour is late I would work
on productivity tools that anyone can use, to
facilitate programming in the new paradigm.</p>
<h3 id="pen-dot-el-prompt-engineering-in-emacs"><code>pen.el</code> : Prompt engineering in emacs</h3>
<h4 id="prompt-engineer-mode"><code>prompt-engineer-mode</code></h4>
<p>Prompt-Engineer Mode is a global minor mode for emacs that facilitates the
creation, development, discovery and usage of prompts in your emacs.</p>
<ul>
<li>Create elisp functions based on GPT-3 prompts</li>
<li>Chain GPT-3 queries together using keyboard macros and functions</li>
<li>Interactively query, generate and transfrom both prose and code</li>
<li>Use GPT-3 as a search engine within emacs
<ul>
<li>Search the internet</li>
<li>Search documents
<ul>
<li><a href="https://beta.openai.com/docs/introduction/semantic-search">https://beta.openai.com/docs/introduction/semantic-search</a></li>
<li><a href="https://gpttools.com/semanticsearch">https://gpttools.com/semanticsearch</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="works-with">Works with</h3>
<ul>
<li>OpenAI API (GPT-3)
<ul>
<li><a href="https://beta.openai.com/">https://beta.openai.com/</a></li>
</ul>
</li>
</ul>
<h4 id="planned">Planned</h4>
<ul>
<li><code>openai-server</code> (GPT-2)
<ul>
<li><a href="https://github.com/shawwn/openai-server">https://github.com/shawwn/openai-server</a></li>
<li>Requires tensorflow 1</li>
</ul>
</li>
<li>DeepAI API
<ul>
<li><a href="https://deepai.org/">https://deepai.org/</a></li>
</ul>
</li>
<li>OpenAI API (GPT-4)
<ul>
<li><a href="https://beta.openai.com/">https://beta.openai.com/</a></li>
</ul>
</li>
</ul>
<h3 id="usage-workflow">Usage / Workflow</h3>
<ul>
<li>Enable <code>prompt-engineerer-mode</code> globally (on all buffers)</li>
<li>Have your <code>.prompt</code> file open in one window</li>
<li>Have the document open you want to apply prompt functions to
<ul>
<li>This could be source code, a chat window, or any kind of text document.</li>
</ul>
</li>
<li>Apply functions to do all sorts of things
<ul>
<li>Summarization</li>
<li>Generation of prose</li>
<li>Generation of code</li>
<li>Translation</li>
</ul>
</li>
</ul>
<h3 id="defining-a-yaml-format">Defining a <code>YAML</code> format</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#75715e"># lines are wrapped, but not in actual prompt</span>

<span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;complicated explanation of how to X&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">  The human asks the AI to make a simple
</span><span style="color:#e6db74">      description more complicated. The AI
</span><span style="color:#e6db74">      responds by writing a verbose response full
</span><span style="color:#e6db74">      of jargon to explain a simple concept.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  Human: explain how to use a drinking
</span><span style="color:#e6db74">      fountain.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  AI: To activate the mechanized dihydrogen
</span><span style="color:#e6db74">      monoxide dispensary service station, use the
</span><span style="color:#e6db74">      flanges to provide a downward force to the
</span><span style="color:#e6db74">      simple circular activation console and
</span><span style="color:#e6db74">      continue to apply force until the pneumatic
</span><span style="color:#e6db74">      system begins operating as intended, which
</span><span style="color:#e6db74">      can be surmised at a time when the
</span><span style="color:#e6db74">      dihydrogen monoxide travels in a parabolic
</span><span style="color:#e6db74">      arc which at is greatest exceeds three
</span><span style="color:#e6db74">      inches from the rounded excess liquid
</span><span style="color:#e6db74">      receptacle. Once hydration is completed,
</span><span style="color:#e6db74">      cease applying force to the console and
</span><span style="color:#e6db74">      regard whether or not the dispensary has
</span><span style="color:#e6db74">      ceased expelling contents as expected.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  Human: explain how to play with a dog
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  AI: Being a typical domesticated animal,
</span><span style="color:#e6db74">      having been genetically selected for
</span><span style="color:#e6db74">      controllability, trainability, and general
</span><span style="color:#e6db74">      anthropomorphic features and functions, the
</span><span style="color:#e6db74">      typical dog possesses highly specialized and
</span><span style="color:#e6db74">      developed feeding behavior. The typical
</span><span style="color:#e6db74">      feeding behavior involves routine sustenance
</span><span style="color:#e6db74">      intake which can be observed by monitoring
</span><span style="color:#e6db74">      changes in animal size. Routine sustenance
</span><span style="color:#e6db74">      intake involves active and passive feeding
</span><span style="color:#e6db74">      habits, and one can gauge animal health by
</span><span style="color:#e6db74">      observing the relative levels of hydration.
</span><span style="color:#e6db74">      During training, reward conditioned
</span><span style="color:#e6db74">      reinforcement is applied. This involves the
</span><span style="color:#e6db74">      practice of rewarding targeted behaviors
</span><span style="color:#e6db74">      through the application of reinforcers, with
</span><span style="color:#e6db74">      the provision that the targeted behavior is
</span><span style="color:#e6db74">      observed. Relevant to the discussion at hand
</span><span style="color:#e6db74">      is the typical active and passive behavior
</span><span style="color:#e6db74">      exhibited by a typical dog.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  Human: explain how to &lt;1&gt;
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  AI:</span>  
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">100</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.2</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.4</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
  - <span style="color:#e6db74">&#34;\n&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
  - <span style="color:#e6db74">&#34;passage&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="code-generation">Code generation</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun pen-generate-prompt-functions ()
  <span style="color:#e6db74">&#34;Generate prompt functions for the files in the prompts directory&#34;</span>
  (interactive)
  (let ((paths
         (glob (<span style="color:#a6e22e">concat</span> pen-prompt-directory <span style="color:#e6db74">&#34;/*.prompt&#34;</span>))))
    (cl-loop for path in paths do
             <span style="color:#75715e">;; results in a hash table</span>
             (let* ((yaml (yamlmod-read-file path))
                    (title (ht-get yaml <span style="color:#e6db74">&#34;title&#34;</span>))
                    (title-slug (slugify title))
                    (vars (vector2list (ht-get yaml <span style="color:#e6db74">&#34;vars&#34;</span>)))
                    (var-slugs (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;slugify</span> vars))
                    (var-syms (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;str2sym</span> var-slugs))
                    (func-name (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;pen-&#34;</span> title-slug))
                    (iargs (let ((iteration <span style="color:#ae81ff">0</span>))
                             (cl-loop for v in vars do
                                      (progn
                                        (setq iteration (<span style="color:#a6e22e">+</span> <span style="color:#ae81ff">1</span> iteration))
                                        (<span style="color:#a6e22e">message</span> (str iteration)))
                                      collect
                                      (if (<span style="color:#a6e22e">equal</span> <span style="color:#ae81ff">1</span> iteration)
                                          <span style="color:#75715e">;; The first argument may be captured through selection</span>
                                          <span style="color:#f92672">`</span>(if (selectionp)
                                               (my/selected-text)
                                             (read-string-hist <span style="color:#f92672">,</span>(<span style="color:#a6e22e">concat</span> v <span style="color:#e6db74">&#34;: &#34;</span>)))
                                        <span style="color:#f92672">`</span>(read-string-hist <span style="color:#f92672">,</span>(<span style="color:#a6e22e">concat</span> v <span style="color:#e6db74">&#34;: &#34;</span>)))))))
               <span style="color:#75715e">;; var names will have to be slugged, too</span>
               (<span style="color:#a6e22e">eval</span>
                <span style="color:#f92672">`</span>(defun <span style="color:#f92672">,</span>(str2sym func-name) <span style="color:#f92672">,</span>var-syms
                   (interactive <span style="color:#f92672">,</span>(<span style="color:#a6e22e">cons</span> <span style="color:#e6db74">&#39;list</span> iargs))
                   (etv (chomp (sn <span style="color:#f92672">,</span>(flatten-once
                                     (<span style="color:#a6e22e">list</span>
                                      (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#39;concat</span> <span style="color:#e6db74">&#34;openai-complete &#34;</span> (q path))
                                      (flatten-once (cl-loop for vs in var-slugs collect
                                                             (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#34; &#34;</span>
                                                                   (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#39;q</span> (str2sym vs))))))))))))
               (<span style="color:#a6e22e">message</span> (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;pen-mode: Loaded prompt function &#34;</span> func-name))))))</code></pre></td></tr></table>
</div>
</div>
<h3 id="appendix">Appendix</h3>
<p><a href="https://www.google.com/search?q=prompt+engineering+gpt">Prompt Engineering</a></p>
<h3 id="examples">Examples</h3>
<h4 id="create-analogy">Create analogy</h4>
<!--list-separator-->
<ul>
<li>
<p>earth is like the universe</p>
<p>they are both governed by the laws of physics.</p>
</li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>vim is like emacs</p>
<p>both are computer text editors.</p>
</li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>Cars are like trains</p>
<p>both travel on tracks.</p>
</li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>dolphins are like people</p>
<p>They are both members of the class Mammalia.</p>
</li>
</ul>
<h4 id="abstractive-summarization">abstractive summarization</h4>
<!--list-separator-->
<ul>
<li>
<p>computers</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">    Early computers were only conceived as
    calculating devices. Since ancient times,
    simple manual devices like the abacus aided
    people in doing calculations. Early in the
    Industrial Revolution, some mechanical devices
    were built to automate long tedious tasks,
    such as guiding patterns for looms. More
    sophisticated electrical machines did
    specialized analog calculations in the early
    20th century. The first digital electronic
    calculating machines were developed during
    World War II. The first semiconductor
    transistors in the late 1940s were followed by
    the silicon-based MOSFET (MOS transistor) and
    monolithic integrated circuit (IC) chip
    technologies in the late 1950s, leading to the
    microprocessor and the microcomputer
    revolution in the 1970s. The speed, power and
    versatility of computers have been increasing
    dramatically ever since then, with transistor
    counts increasing at a rapid pace (as
    predicted by Moore&#39;s law), leading to the
    Digital Revolution during the late 20th to
    early 21st centuries.
    </code></pre></td></tr></table>
</div>
</div>
 <!--list-separator-->
<ul>
<li>
<p>Simplification 1</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">        Computers were invented to do math. Before
        computers, people used a tool called a slide
        rule to do math. Slide rules were hard to use,
        so people invented a new tool called a
        calculator. Calculators were hard to use, so
        people invented a new tool called a computer.
        Computers were hard to use, so people invented
        a new tool called a computer with a screen.
        Computers with screens were hard to use, so
        people invented a new tool called a computer
        you can touch
        </code></pre></td></tr></table>
</div>
</div>
</li>
</ul>
 <!--list-separator-->
<ul>
<li>
<p>Simplification 2 &ndash; I like this one</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">        Computers were invented to help people do math.
        People have been using simple machines like the abacus to help them do math for a long time.
        More complicated machines helped people do math faster.
        Now people can do math faster with computers.
        </code></pre></td></tr></table>
</div>
</div>
</li>
</ul>
</li>
</ul>
<h3 id="back-end">Back-end</h3>
<h4 id="shell">shell</h4>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">81
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

first_arg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>

stdin_exists<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    ! <span style="color:#f92672">[</span> -t <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> ! test <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>readlink /proc/$$/fd/0<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> /dev/null
<span style="color:#f92672">}</span>

<span style="color:#66d9ef">if</span> stdin_exists; <span style="color:#66d9ef">then</span>
    <span style="color:#75715e"># The stdin can be the first argument</span>
    set -- <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

test -f <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit
shift

prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.prompt // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
stop_sequence<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq <span style="color:#e6db74">&#34;.\&#34;stop-sequences\&#34;[0] // empty&#34;</span> | uq | qne<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
temperature<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;temperature\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;engine\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
max_tokens<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;max-tokens\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
top_p<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;top-p\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

test -n <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">0</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -e<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>engine:=<span style="color:#e6db74">&#34;ada&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>temperature:=<span style="color:#e6db74">&#34;0.6&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>max_tokens:=<span style="color:#e6db74">&#34;64&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>sub_completions:=<span style="color:#e6db74">&#34;1&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
<span style="color:#66d9ef">for</span> var in <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">do</span>
    var<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span> | uq | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | template -$i <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    <span style="color:#f92672">((</span>i++<span style="color:#f92672">))</span>
<span style="color:#66d9ef">done</span>

prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | chomp | tf<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># printf -- &#34;%s\n&#34; &#34;$prompt&#34; | tv</span>

prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | qne<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> SHCODE <span style="color:#e6db74">&lt;&lt;HEREDOC
</span><span style="color:#e6db74">openai api \
</span><span style="color:#e6db74">    completions.create \
</span><span style="color:#e6db74">    -e &#34;$engine&#34; \
</span><span style="color:#e6db74">    -t &#34;$temperature&#34; \
</span><span style="color:#e6db74">    -M &#34;$max_tokens&#34; \
</span><span style="color:#e6db74">    -n &#34;$sub_completions&#34; \
</span><span style="color:#e6db74">    $(
</span><span style="color:#e6db74">        if test -n &#34;$stop_sequence&#34;; then
</span><span style="color:#e6db74">            printf -- &#34;%s&#34; &#34;--stop \&#34;$stop_sequence\&#34;&#34;
</span><span style="color:#e6db74">        fi
</span><span style="color:#e6db74">    ) \
</span><span style="color:#e6db74">    -p &#34;$prompt&#34;
</span><span style="color:#e6db74">HEREDOC</span>

response_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>eval <span style="color:#e6db74">&#34;</span>$SHCODE<span style="color:#e6db74">&#34;</span> | uq | s chomp | tf txt<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

prompt_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
response_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

tail -c +<span style="color:#66d9ef">$((</span>prompt_bytes <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span><span style="color:#66d9ef">))</span> <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="additional-reading">Additional reading</h3>
<ul>
<li><a href="https://www.overfit.ai/classroom-items/gpt-3-text-to-emoji">https://www.overfit.ai/classroom-items/gpt-3-text-to-emoji</a></li>
<li><a href="https://www.gwern.net/GPT-3">https://www.gwern.net/GPT-3</a></li>
<li><a href="https://matthewmcateer.me/blog/messing-with-gpt-3/">https://matthewmcateer.me/blog/messing-with-gpt-3/</a></li>
<li><a href="https://youtu.be/fTvB5xMNfTY">#029 GPT-3, Prompt Engineering, Trading, AI Alignment, Intelligence - YouTube</a></li>
<li><a href="https://github.com/mullikine/examplary">https://github.com/mullikine/examplary</a></li>
<li><a href="https://github.com/mullikine/prompt-engineer-mode">https://github.com/mullikine/prompt-engineer-mode</a></li>
<li><a href="http://github.com/mullikine/fine-tuning-gpt-3/puns/">http://github.com/mullikine/fine-tuning-gpt-3/puns/</a></li>
</ul>
]]></content>
        </item>
        
    </channel>
</rss>
