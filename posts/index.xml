<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on semiosis</title>
        <link>http://semiosis.github.io/posts/</link>
        <description>Recent content in Posts on semiosis</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Thu, 15 Jul 2021 00:00:00 +1200</lastBuildDate>
        <atom:link href="http://semiosis.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Imagery for Pen.el with CLIP and inspired from Myst: The Book of Atrus</title>
            <link>http://semiosis.github.io/posts/creating-some-imagery-for-pen-el-with-clip/</link>
            <pubDate>Thu, 15 Jul 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/creating-some-imagery-for-pen-el-with-clip/</guid>
            <description>Original source material https://generative.ink/posts/alchemical-marriage-gpt-3-x-clip/#you-spin-worlds-together-and-untwine-them  Summary I follow the same instructions as in the aforementioned article to generate some imagery for Pen.el.
 Project code https://github.com/semiosis/pen.el/ Tutorial and exhibition https://mullikine.github.io/posts/pen-tutorial/ Join discord https://discord.gg/HH6PY27d  Thoughts Using Pen to generate a programming environment using a LM. NL is the easiest to use code for transforming images, programming languages and NLs. That&amp;rsquo;s why Pen exists, to be a shell for creativity, provenance and intelligibility, so as to not get lost in the interactive fiction.</description>
            <content type="html"><![CDATA[<dl>
<dt>Original source material</dt>
<dd><a href="https://generative.ink/posts/alchemical-marriage-gpt-3-x-clip/#you-spin-worlds-together-and-untwine-them">https://generative.ink/posts/alchemical-marriage-gpt-3-x-clip/#you-spin-worlds-together-and-untwine-them</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I follow the same instructions as in the
aforementioned article to generate some
imagery for <code>Pen.el</code>.</p>
<dl>
<dt>Project code</dt>
<dd><a href="https://github.com/semiosis/pen.el/">https://github.com/semiosis/pen.el/</a></dd>
<dt>Tutorial and exhibition</dt>
<dd><a href="https://mullikine.github.io/posts/pen-tutorial/">https://mullikine.github.io/posts/pen-tutorial/</a></dd>
<dt>Join discord</dt>
<dd><a href="https://discord.gg/HH6PY27d">https://discord.gg/HH6PY27d</a></dd>
</dl>
<h3 id="thoughts">Thoughts</h3>
<p>Using Pen to generate a programming
environment using a LM. NL is the easiest to
use code for transforming images, programming
languages and NLs. That&rsquo;s why Pen exists, to
be a shell for creativity, provenance and
intelligibility, so as to not get lost in the
interactive fiction.</p>
<p>Don&rsquo;t you want to understand things via code rather than become lost in lost in the interactive fiction?
There&rsquo;s a natural tendency to be amazed at tech like neural image generation, and a tendency to focus on that.
But I think that the best place to focus thought is in the generative process, and in intelligibility.
So though it may not be pretty, the NL shell and the prompt sharing etc. is essentially creating the &lsquo;linking books&rsquo; that Ghen was referring to in Myst.
You have to make the linking books. It&rsquo;s the first rule.
Otherwise u get stuck inside another world unable to escape.
Great allegory there.</p>
<h3 id="docker-install-pen-dot-el">Docker install <code>pen.el</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">docker run --rm -ti --entrypoint<span style="color:#f92672">=</span> semiosis/pen.el:latest ./run.sh

<span style="color:#75715e"># And to update the image</span>
docker pull semiosis/pen.el:latest</code></pre></td></tr></table>
</div>
</div>
<h2 id="demo">Demo</h2>
<p>I extract part of a passage from <code>Myst: The Book of Atrus</code>, using GPT-3 and <code>pen.el</code>.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/2XH4Io6Zb973qlOB73gW3mie1" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/2XH4Io6Zb973qlOB73gW3mie1.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/2XH4Io6Zb973qlOB73gW3mie1.js" id="asciicast-2XH4Io6Zb973qlOB73gW3mie1" async></script>
<h2 id="generating-the-imagery">Generating the imagery</h2>
<h3 id="generation-1">Generation 1</h3>
<p>This is the passage I have decided upon.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">A time-traveling wizard who uses a magic book and pen to create worlds.</code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/wizard2.png"/> 
</figure>

<p>I like the little magic swirl above the planet on a pedestel.</p>
<h3 id="generation-2">Generation 2</h3>
<figure>
    <img src="/ox-hugo/wizard4.png"/> 
</figure>

<h3 id="generation-3">Generation 3</h3>
<figure>
    <img src="/ox-hugo/wizard5.png"/> 
</figure>

<h3 id="generation-4">Generation 4</h3>
<figure>
    <img src="/ox-hugo/wizard7.png"/> 
</figure>

<h3 id="generation-5">Generation 5</h3>
<figure>
    <img src="/ox-hugo/wizard8.png"/> 
</figure>

<p>This reminds me of how I imagined Atrus or Ghen</p>
<h2 id="thoughts">Thoughts</h2>
<ul>
<li><a href="https://generative.ink/posts/language-models-are-multiverse-generators/">https://generative.ink/posts/language-models-are-multiverse-generators/</a></li>
<li><a href="https://semiosis.github.io/posts/representing-multiverses-with-datomic/">https://semiosis.github.io/posts/representing-multiverses-with-datomic/</a></li>
</ul>
<p>Hypothesis: both people and language models are multiverse generators.</p>
<h2 id="excerpt-from-myst-the-book-of-atrus">Excerpt from <code>Myst: The Book of Atrus</code></h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">125
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">126
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">127
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">128
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">129
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">130
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">131
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">132
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">133
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">134
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">135
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">136
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">137
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">138
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">139
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">140
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">141
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">142
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">143
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">144
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">145
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">146
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">147
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">148
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">149
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">150
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">151
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">152
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">153
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">154
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">155
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">156
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">157
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">158
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">159
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">160
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">161
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">162
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">&#34;Ink?&#34;

&#34;Yes ... but not just any ink.

It has special powers that ordinary ink does
not possess.

So, too, with the pages of the book.

They are made of a special paper, the formula
for which was kept secret by the Guild.&#34;

&#34;And the pen?&#34; Atrus asked, pointing to it,
&#34;Is that special, too?&#34;

Gehn smiled.

&#34;No.

The pen is but a pen.

However, if anyone else tried to do what we
are about to do- anyone, that is, without D&#39;ni
blood-then they would fail.

It would be impossible.&#34;

Turning to face the page, Gehn set the ink pot
down, then, dipping the metallic rip of the
quill into it, lifted the pen above the page
and began to write.

Slowly a D&#39;ni character-the word &#34;island,&#34;
Atrus noted-began to form, its intense
blackness burned almost into the pure white
surface by the pen.

Gehn wrote another dozen characters onto the
page, then lifted the pen and looked to Atrus.

&#34;Is it done?&#34; Atrus asked, surprised that
there had not been more.

He had expected fireworks or the heavens to
open.

&#34;Have you made a new Age?&#34;

Gehn laughed.

&#34;It exists, yes ... but as yet it is very
crude.

It takes a great deal of work to create an
Age.

There are special formulas you have to follow,
precise laws to obey.

As I said, it is not simply an Art, it is a
science-the science of precise description.&#34;

He gestured toward the open book.

&#34;As yet, I have merely sketched out the most
basic elements of my new world.

Ahead lies an immense amount of hard work.

Every aspect of the Age must be described,
each new element fitted in.

But that is not all.&#34;

Reaching across, Gehn took another, much
smaller book from a pile at the side and held
it out to Atrus.

&#34;Once the Age is complete, one must always-
always-make a Linking Book.&#34;

Atrus took the small book and opened it,
noting at once how few pages were in it.

All of them were blank.

&#34;Yes,&#34; Gehn continued.

&#34;Whenever you travel to a newly written Age
you must always carry a Linking Book with you.

If you did not, you would be trapped there,
without any way of traveling back.&#34;

Atrus looked back at his father, wide-eyed.

&#34;But what&#39;s actually in one of these Linking
Books?&#34;

Gehn took the book back.

&#34;Each Linking Book refers to one of the larger
descriptive books-to one specific book.

You might say that it contains the essence of
the larger book- certain phrases and words
that fuses it to that book and no other.

But that is not all.

For a Linking Book to work, it must also
include an accurate description of the place
one wishes to link to on that particular Age,
which is recorded by writing a special D&#39;ni
symbol, a Garo-hertee.

Yes, and a Linking Book must be written in the
Age and location it is meant to link to.

And so a Linking Book is, in a sense, a
working substitute for a descriptive book.&#34;

Atrus thought a moment, then.

&#34;And can there be only one Linking Book for
each descriptive book?&#34;

&#34;Not at all,&#34; Gehn answered, delighted by his
son&#39;s understanding.

Then, setting the slender book back on the
pile, he added.

&#34;You can make as many Linking Books as you
want.

But you must always make at least one.

That is the first rule.

One you must not forget.&#34;

Atrus nodded, then.

&#34;But what if you change the Age?

What if you decide to write more in the
descriptive book?

Would the Linking Book cease to work?&#34;

&#34;No.

If the descriptive book is changed, then all
Linking Books associated with it will link to
the changed world.&#34;

Atruss eyes lit, imagining it, only now
realizing just how complex and powerful this
Writing was.

&#34;It sounds . .. astonishing!&#34;</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Pen Tutorial</title>
            <link>http://semiosis.github.io/posts/pen-tutorial/</link>
            <pubDate>Sun, 11 Jul 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/pen-tutorial/</guid>
            <description>Summary This is a tutorial for how to use pen.el.
The following command starts pen.el. You only need to have docker installed and an OpenAI GPT-3 key to try this out.
1 2 3 4  docker run --rm -ti --entrypoint= semiosis/pen.el:latest ./run.sh # And to update the image docker pull semiosis/pen.el:latest    Project code https://github.com/semiosis/pen.el/ Join discord https://discord.gg/HH6PY27d    For GPT-neo, GPT-2 and booste support, and latest updates, please install from master branch.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>This is a tutorial for how to use <code>pen.el</code>.</p>
<p>The following command starts <code>pen.el</code>. You
only need to have docker installed and an
<code>OpenAI GPT-3</code> key to try this out.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">docker run --rm -ti --entrypoint<span style="color:#f92672">=</span> semiosis/pen.el:latest ./run.sh

<span style="color:#75715e"># And to update the image</span>
docker pull semiosis/pen.el:latest</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Project code</dt>
<dd><a href="https://github.com/semiosis/pen.el/">https://github.com/semiosis/pen.el/</a></dd>
<dt>Join discord</dt>
<dd><a href="https://discord.gg/HH6PY27d">https://discord.gg/HH6PY27d</a></dd>
</dl>
<figure>
    <img src="/ox-hugo/wizard4.png"/> 
</figure>

<p>For <code>GPT-neo</code>, <code>GPT-2</code> and <code>booste</code> support,
and latest updates, please install from master
branch. Docker support coming. <code>GPT-j</code> also in
the works.</p>
<h2 id="basic-key-bindings">Basic Key bindings</h2>
<table>
<thead>
<tr>
<th>kb</th>
<th>f</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>H-TAB g</code></td>
<td><code>pen-generate-prompt-functions</code></td>
<td>This reloads the prompt functions.</td>
</tr>
<tr>
<td><code>H-TAB r</code></td>
<td><code>pen-run-prompt-function</code></td>
<td>Running a prompt function like this will not insert text or replace it.</td>
</tr>
<tr>
<td><code>M-1</code></td>
<td><code>pen-company-filetype</code></td>
<td>This completes the current line.</td>
</tr>
<tr>
<td><code>H-TAB s</code></td>
<td><code>pen-filter-with-prompt-function</code></td>
<td>This filters the text through a prompt function specifically designed for this.</td>
</tr>
<tr>
<td><code>H-TAB c</code></td>
<td><code>pen-company-complete</code></td>
<td>Select a prompt function as the completer for <code>company-mode</code> and complete with it.</td>
</tr>
<tr>
<td><code>SPC</code></td>
<td><code>pen-run-prompt-function</code></td>
<td>When text is selected, will run with that text as first argument.</td>
</tr>
<tr>
<td><code>H-TAB l</code></td>
<td><code>pen-complete-long</code></td>
<td>This is a multiline completion.</td>
</tr>
</tbody>
</table>
<p><code>H</code> is the Hyper key, which works similar to Escape, Meta, Alt, Control or Shift that is present on the Space Cadet Keyboard.</p>
<p><code>pen.el</code> emulates a Hyper key (<code>H-</code>) with <code>C-M-\</code>.</p>
<p>I like <code>Hyper</code> because you&rsquo;re writing <code>hyperreality</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">hyperreality
    [#semiotics]
    [#postmodernism]

    An inability of consciousness to
    distinguish reality from a simulation of
    reality, especially in technologically
    advanced postmodern societies.</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Imagining <code>Pen.el</code></dt>
<dd><a href="https://mullikine.github.io/posts/creating-some-imagery-for-pen-el-with-clip/">Imagery for Pen.el with CLIP and inspired from Myst: The Book of Atrus // Bodacious Blog</a></dd>
</dl>
<h3 id="how-to-run-h-tab-r-for-emacs-noobies">How to run <code>H-TAB r</code> for emacs noobies</h3>
<dl>
<dt>For mac users</dt>
<dd>Select some text, tap <code>Esc</code>, hold <code>Ctrl</code> and press  <code>\</code>, release and tap <code>r</code>.</dd>
<dt>For everyone else</dt>
<dd>Select some text, hold <code>Ctrl Alt \</code>, release and tap <code>r</code>.</dd>
</dl>
<p>You may also press <code>SPC</code> while some text is selected to run a prompt function.</p>
<p>You may also use <code>right click</code> for starting the context menu.</p>
<h3 id="company-mode">Company-mode</h3>
<dl>
<dt>For mac users</dt>
<dd>Select some text, tap <code>Esc</code>, hold <code>Ctrl</code> and press  <code>\</code>, release and tap <code>c</code>.</dd>
<dt>For everyone else</dt>
<dd>Select some text, hold <code>Ctrl Alt \</code>, release and tap <code>c</code>.</dd>
</dl>
<p>More company bindings.</p>
<table>
<thead>
<tr>
<th>kb</th>
<th>f</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>H-TAB f</code></td>
<td><code>pen-company-complete-choose</code></td>
<td>Select a single completer. Remove others.</td>
</tr>
<tr>
<td><code>H-TAB a</code></td>
<td><code>pen-company-complete-add</code></td>
<td>Add other completers to the completer list</td>
</tr>
</tbody>
</table>
<h3 id="usage">Usage</h3>
<p>Running <code>pen-generate-prompt-functions</code> will
load all prompts from the prompts directory,
which is typically located here: <code>~/.emacs.d/prompts</code>.</p>
<p>Running <code>pen-run-prompt-function</code> will run a prompt function.</p>
<p>You may also press <code>SPC</code> while some text is selected to run a prompt function.</p>
<h2 id="demos">Demos</h2>
<h3 id="select-some-text-and-running-a-prompt-function">Select some text and running a prompt function</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/XrtPxWfh0yhJRdMXpnMnm8i70" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/XrtPxWfh0yhJRdMXpnMnm8i70.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/XrtPxWfh0yhJRdMXpnMnm8i70.js" id="asciicast-XrtPxWfh0yhJRdMXpnMnm8i70" async></script>
<h3 id="run-a-prompt-function-like-an-m-x-interactive-command">Run a prompt function like an M-x interactive command</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/mVe7Ujx7urB1nyPdiEuqGUcb4" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/mVe7Ujx7urB1nyPdiEuqGUcb4.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/mVe7Ujx7urB1nyPdiEuqGUcb4.js" id="asciicast-mVe7Ujx7urB1nyPdiEuqGUcb4" async></script>
<h2 id="an-exhibition-of-a-dot-prompt">An exhibition of a <code>.prompt</code></h2>
<dl>
<dt>Prompt file</dt>
<dd><a href="http://github.com/semiosis/prompts/blob/master/prompts/get-language.prompt">prompts/get-language.prompt at master  semiosis/prompts  GitHub</a></dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#ae81ff">Get language</span>
<span style="color:#f92672">version</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">doc</span>: <span style="color:#ae81ff">This prompt detects the language</span>
<span style="color:#f92672">notes</span>:
- <span style="color:#e6db74">&#34;It appears that combining ### with Input: Output: has no improvement&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    Given some text, return the language.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Input: Hello
</span><span style="color:#e6db74">    Output: English
</span><span style="color:#e6db74">    Input: Bon anniversaire !
</span><span style="color:#e6db74">    Output: French
</span><span style="color:#e6db74">    Input: printf -- &#34;%s\n&#34; &#34;$lang&#34;
</span><span style="color:#e6db74">    Output: bash
</span><span style="color:#e6db74">    Input: Zdravstvuyte
</span><span style="color:#e6db74">    Output: Russian
</span><span style="color:#e6db74">    Input: &lt;1&gt;
</span><span style="color:#e6db74">    Output:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#ae81ff">davinci</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">200</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;\n&#34;</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#ae81ff">text-or-code</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#ae81ff">Happy birthday</span>
<span style="color:#f92672">preprocessors</span>:
- <span style="color:#e6db74">&#34;sed -z &#39;s/\\n/\\\\n/g&#39;&#34;</span>
<span style="color:#f92672">aliases</span>:
- <span style="color:#ae81ff">detect-language</span></code></pre></td></tr></table>
</div>
</div>
<p>This is a prompt which, given text selected
will output the language that text is in.</p>
<p>It works for both world languages and for code.</p>
<p>The <code>title</code> of the prompt will be
<a href="https://pypi.org/project/python-slugify/">slugified</a> and used as the name of
the prompt function.</p>
<p><code>doc</code> and <code>notes</code> will both go into the
documentation for the function.</p>
<p>The prompt is using the <code>Input</code> <code>Output</code>
pattern.</p>
<p><code>engine</code> is the name of a language model.</p>
<p>An API such as the <code>OpenAI API</code> (<code>GPT-3</code>) may serve
several different models.</p>
<ul>
<li>Some alternative models for <code>GPT-3</code>:
<ul>
<li>babbage</li>
<li>content-filter-alpha-c4</li>
<li>content-filter-dev</li>
<li>curie</li>
<li>cursing-filter-v6</li>
<li>davinci</li>
<li>instruct-curie-beta</li>
<li>instruct-davinci-beta</li>
</ul>
</li>
</ul>
<p><code>vars</code> is a list of variable names. Each
variable is substituted into the prompt if it
has a corresponding template placeholder.</p>
<p>For example, the <code>&lt;1&gt;</code> in the prompt
corresponds to where the first variable
(<code>text-or-code</code>) will be substituted.</p>
<p><code>examples</code> is a list with the same number of
elements as <code>vars</code>. The values in <code>examples</code>
may be suggested as initial input when
running the prompt function and may be used in
test cases. They also serve as documentation
for the user.</p>
<p><code>preprocessors</code> are a list of shell
pipelineable commands (stream filters) which
expect both input and output and can be used
to preprocess the variables before they are
substituted into the prompt template.</p>
<p>This prompt doesn&rsquo;t have a <code>postprocessor</code>,
but if it did it would postprocess the
returned completions in a similar fashion to
how the variables are preprocessed.</p>
<p>Finally, <code>aliases</code> is a list of alternative
function names for this prompt.</p>
<h2 id="installation">Installation</h2>
<h3 id="install-dependencies-and-compile-emacs-with-with-modules">Install dependencies and compile emacs with <code>--with-modules</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">git checkout <span style="color:#e6db74">&#34;https://github.com/semiosis/pen.el&#34;</span>
cd pen.el/src
<span style="color:#75715e"># Careful with setup script.</span>
<span style="color:#75715e"># Run the commands manually as this is designed for root user, intended for a Docker container.</span>
./setup.sh</code></pre></td></tr></table>
</div>
</div>
<p>Demo of running the script on a vanilla VPS.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/EzlkZpFMS0NVEUOjcNnlKEJao" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/EzlkZpFMS0NVEUOjcNnlKEJao.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/EzlkZpFMS0NVEUOjcNnlKEJao.js" id="asciicast-EzlkZpFMS0NVEUOjcNnlKEJao" async></script>
<h3 id="ensure-the-following-or-similar-file-structure">Ensure the following or similar file structure</h3>
<p>Or make the additions / adjustments to your own emacs config.</p>
<p>Take the parts you need from the <code>init.el</code> and place inside your own <code>~/.emacs</code>.</p>
<p>If you don&rsquo;t have an init file of your own then run this.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">ln -sf ~/.emacs.d/pen.el/init.el ~/.emacs</code></pre></td></tr></table>
</div>
</div>
<p>Ensure you have the prompts repository in place.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">git checkout <span style="color:#e6db74">&#34;https://github.com/semiosis/prompts/tree/master/prompts&#34;</span> ~/.emacs.d/prompts</code></pre></td></tr></table>
</div>
</div>
<h3 id="openai-just-request-a-key-and-place-it-here">OpenAI - Just request a key and place it here</h3>
<p>Install OpenAI API key.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">mkdir -p ~/.pen
touch ~/.pen/openai_api_key
vim ~/.pen/openai_api_key</code></pre></td></tr></table>
</div>
</div>
<h2 id="using-pen">Using Pen</h2>
<h3 id="just-starting-on-a-vanilla-installation">Just starting on a vanilla installation</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/gwnk0DXnHKSzvUfLmfnQegfCx" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/gwnk0DXnHKSzvUfLmfnQegfCx.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/gwnk0DXnHKSzvUfLmfnQegfCx.js" id="asciicast-gwnk0DXnHKSzvUfLmfnQegfCx" async></script>
<h3 id="prompt-engineering-workflow">Prompt Engineering Workflow</h3>
<ul>
<li>
<p>Setup</p>
<ul>
<li>Install <code>prompt</code> snippet into yasnippet.</li>
<li>M-x <code>yas/reload-all</code></li>
<li>M-x <code>yas-insert-snippet</code></li>
</ul>
</li>
<li>
<p>Prompt design</p>
<ul>
<li>
<ol>
<li>Come up with a task. Let&rsquo;s call it &ldquo;Negate sentence&rdquo;</li>
</ol>
</li>
<li>
<ol start="2">
<li>Insert the prompt snippet into a new prompt file.</li>
</ol>
</li>
<li>
<ol start="3">
<li>Remove keys from prompts file which we don&rsquo;t need.</li>
</ol>
</li>
<li>
<ol start="4">
<li><code>var-defaults</code> is an advanced usage of prompts</li>
</ol>
<ul>
<li>But we will remove them</li>
</ul>
</li>
<li>
<ol start="5">
<li>Now load the prompt with <code>M-x pen-generate-prompt-functions</code></li>
</ol>
</li>
<li>
<ol start="6">
<li>Now look at the prompt function documentation</li>
</ol>
<ul>
<li>The binding <code>C-h C-f</code> is used to bring up help for a function</li>
</ul>
</li>
<li>
<ol start="7">
<li>Looks like we made an error: &ldquo;The Mars is very far away.&rdquo;</li>
</ol>
<ul>
<li>Change it and update the version of the prompt</li>
</ul>
</li>
<li>
<ol start="8">
<li>Reload functions</li>
</ol>
</li>
</ul>
</li>
</ul>
<p>Test it out.</p>
<p>I want to eat dinner now.</p>
<p>It didn&rsquo;t work. hurm.</p>
<p>Well, here is the basic process anyway. I&rsquo;ll try and debug this.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/ofJjyh1A696NDOjwNx0zR6DAI" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/ofJjyh1A696NDOjwNx0zR6DAI.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/ofJjyh1A696NDOjwNx0zR6DAI.js" id="asciicast-ofJjyh1A696NDOjwNx0zR6DAI" async></script>
<h2 id="another-dot-prompt-exhibition">Another <code>.prompt</code> exhibition</h2>
<h3 id="i-create-a-new-prompt-here-for-translating-between-any-world-language">I create a new prompt here for translating between any world language</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/jiBD5ZpRJQWXFMlHdvGGgSxjk" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/jiBD5ZpRJQWXFMlHdvGGgSxjk.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/jiBD5ZpRJQWXFMlHdvGGgSxjk.js" id="asciicast-jiBD5ZpRJQWXFMlHdvGGgSxjk" async></script>
<p>Maori isn&rsquo;t a very prominent language on the
web, but it still managed to capture the idea
of a welcome message, which I think is
amazing! I am Maori, so I appreciate this!</p>
<p>I want to demonstrate the usage of two more <code>.prompt</code> keys.</p>
<dl>
<dt>The technical jargon</dt>
<dd><code>var-defaults</code> overrides the default behaviour of the <code>(interactive)</code> form in emacs.</dd>
</dl>
<p>By specifying <code>var-defaults</code>, you can change
what functions or expressions are run to
acquire the values for the parameters to the
prompt.</p>
<p>The prompt here captures the selected text and
puts it into the second placeholder, <code>&lt;2&gt;</code>.</p>
<p>By default, that would go into the first one, <code>&lt;1&gt;</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">var-defaults</span>:
- <span style="color:#e6db74">&#34;(read-string \&#34;language: \&#34;)&#34;</span>
- <span style="color:#e6db74">&#34;(pen-selected-text)&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="original-prompt">Original prompt</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml">---
<span style="color:#f92672">title</span>: <span style="color:#ae81ff">Translate from English to</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">2</span>
<span style="color:#f92672">doc</span>: <span style="color:#ae81ff">This prompt translates English text to any world langauge</span>
<span style="color:#f92672">issues</span>:
- <span style="color:#ae81ff">I think the unicode characters may be multibyte causing issues with completion</span>
<span style="color:#f92672">prompt</span>: |<span style="color:#e6db74">
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  # English: Hello
</span><span style="color:#e6db74">  # Russian: Zdravstvuyte
</span><span style="color:#e6db74">  # Italian: Salve
</span><span style="color:#e6db74">  # Japanese: Konnichiwa
</span><span style="color:#e6db74">  # German: Guten Tag
</span><span style="color:#e6db74">  # French: Bonjour
</span><span style="color:#e6db74">  # Spanish: Hola
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  # English: Happy birthday!
</span><span style="color:#e6db74">  # French: Bon anniversaire !
</span><span style="color:#e6db74">  # German: Alles Gute zum Geburtstag!
</span><span style="color:#e6db74">  # Italian: Buon compleanno!
</span><span style="color:#e6db74">  # Indonesian: Selamat ulang tahun!
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  # English: &lt;2&gt;
</span><span style="color:#e6db74">  # &lt;1&gt;:</span>  
<span style="color:#f92672">engine</span>: <span style="color:#ae81ff">davinci</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">200</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;#&#34;</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#ae81ff">language</span>
- <span style="color:#ae81ff">phrase</span>
<span style="color:#75715e"># ascification of the prompt is not ideal</span>
<span style="color:#f92672">prompt-filter</span>: <span style="color:#ae81ff">pen-c ascify</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#ae81ff">French</span>
- <span style="color:#ae81ff">Goodnight</span>
<span style="color:#f92672">var-defaults</span>:
- <span style="color:#e6db74">&#34;(read-string \&#34;language: \&#34;)&#34;</span>
- <span style="color:#e6db74">&#34;(pen-selected-text)&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="i-create-this-prompt">I create this prompt</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">prompt-filter: pen-c ascify</code></pre></td></tr></table>
</div>
</div>
<p>The <code>prompt-filter</code> is a final filter script
to transform the prompt before sending to the
<code>API</code> / <code>LM</code> for completion.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml">---
<span style="color:#f92672">title</span>: <span style="color:#ae81ff">Translate from world language X to Y</span>
<span style="color:#f92672">version</span>: <span style="color:#ae81ff">2</span>
<span style="color:#f92672">doc</span>: <span style="color:#ae81ff">This prompt translates English text to any world langauge</span>
<span style="color:#f92672">issues</span>:
- <span style="color:#ae81ff">I think the unicode characters may be multibyte causing issues with completion</span>
<span style="color:#f92672">prompt</span>: |<span style="color:#e6db74">
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  # English: Hello
</span><span style="color:#e6db74">  # Russian: Zdravstvuyte
</span><span style="color:#e6db74">  # Italian: Salve
</span><span style="color:#e6db74">  # Japanese: Konnichiwa
</span><span style="color:#e6db74">  # German: Guten Tag
</span><span style="color:#e6db74">  # French: Bonjour
</span><span style="color:#e6db74">  # Spanish: Hola
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  # English: Happy birthday!
</span><span style="color:#e6db74">  # French: Bon anniversaire !
</span><span style="color:#e6db74">  # German: Alles Gute zum Geburtstag!
</span><span style="color:#e6db74">  # Italian: Buon compleanno!
</span><span style="color:#e6db74">  # Indonesian: Selamat ulang tahun!
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  # &lt;1&gt;: &lt;3&gt;
</span><span style="color:#e6db74">  # &lt;2&gt;:</span>  
<span style="color:#f92672">engine</span>: <span style="color:#ae81ff">davinci</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">200</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;#&#34;</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#ae81ff">from-language</span>
- <span style="color:#ae81ff">to-language</span>
- <span style="color:#ae81ff">phrase</span>
<span style="color:#75715e"># ascification of the prompt is not ideal</span>
<span style="color:#f92672">prompt-filter</span>: <span style="color:#ae81ff">pen-c ascify</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#ae81ff">English</span>
- <span style="color:#ae81ff">French</span>
- <span style="color:#ae81ff">Goodnight</span>
<span style="color:#f92672">var-defaults</span>:
- <span style="color:#e6db74">&#34;(read-string \&#34;From language: \&#34;)&#34;</span>
- <span style="color:#e6db74">&#34;(read-string \&#34;To language: \&#34;)&#34;</span>
- <span style="color:#e6db74">&#34;(pen-selected-text)&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="using-prompt-functions-in-your-code">Using prompt functions in your code</h2>
<p>Prompt functions automatically &lsquo;curry&rsquo; when
you leave out their arguments.</p>
<p>Here is an example, <code>pf-translate-from-world-language-x-to-y</code>:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">pf-translate-from-world-language-x-to-y is an interactive function
defined in pen-example-config.el.

Signature
(pf-translate-from-world-language-x-to-y &amp;optional FROM-LANGUAGE TO-LANGUAGE PHRASE)

Documentation
Translate from world language X to Y
This prompt translates English text to any world langauge

path:
- /home/shane/source/git/spacemacs/prompts/prompts/translate-world-languages.prompt

examples:
- English
- French
- Goodnight

preprocessors:
- cat
- cat
- sed -z &#39;s/\n/\\n/g&#39;

var-defaults:
- (read-string-hist &#34;Pen From language: &#34;)
- (read-string-hist &#34;Pen To language: &#34;)
- (pen-selected-text)

prompt-filter:
- pen-c ascify</code></pre></td></tr></table>
</div>
</div>
<p>If this function is run without a selection
then <code>pen-selected-text</code> will resort to asking
the user for input.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="color:#75715e">;; Leave out all arguments to be prompted for each argument</span>
(pf-translate-from-world-language-x-to-y)</code></pre></td></tr></table>
</div>
</div>
<p>The following default functions / expressions
(i.e. <code>var-defaults</code>) are run when called
interactively or to acquire the values of
optional parameters that were left out of the
call to the prompt function.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">var-defaults</span>:
- <span style="color:#e6db74">&#34;(read-string-hist \&#34;Pen From language: \&#34;)&#34;</span>
- <span style="color:#e6db74">&#34;(read-string-hist \&#34;Pen To language: \&#34;)&#34;</span>
- <span style="color:#e6db74">&#34;(pen-selected-text)&#34;</span></code></pre></td></tr></table>
</div>
</div>
<p>The following invocation supplies <code>&quot;French&quot;</code>
as the first parameter, but the others will be
requested.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(pf-translate-from-world-language-x-to-y <span style="color:#e6db74">&#34;French&#34;</span>)</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">烤面包</code></pre></td></tr></table>
</div>
</div>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/lG511sKyJPjhwtn98IPbSZjYx" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/lG511sKyJPjhwtn98IPbSZjYx.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/lG511sKyJPjhwtn98IPbSZjYx.js" id="asciicast-lG511sKyJPjhwtn98IPbSZjYx" async></script>
<h2 id="an-assistant-for-any-major-mode">An assistant for any major mode</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/MS8xMQfLoExEVyh4Nqu9fX49b" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/MS8xMQfLoExEVyh4Nqu9fX49b.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/MS8xMQfLoExEVyh4Nqu9fX49b.js" id="asciicast-MS8xMQfLoExEVyh4Nqu9fX49b" async></script>
<h2 id="current-development">Current Development</h2>
<h3 id="company-mode"><code>company-mode</code></h3>
<p>I&rsquo;m trying to do something a little more
ambitious than simply having a single
completion function.</p>
<p>There will be infinitely many completion functions that you can select from.</p>
<table>
<thead>
<tr>
<th>kb</th>
<th>f</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>H-TAB c</code></td>
<td><code>pen-company-complete</code></td>
<td><code>pen-map</code></td>
</tr>
</tbody>
</table>
<h3 id="huggingface-transformers">HuggingFace transformers</h3>
<p>Mark Watson in his book &ldquo;Practical Artificial
Intelligence Programming With Clojure&rdquo; uses
spaCy and the HuggingFace transformers library
from Clojure. I would like to connect to
HuggingFace&rsquo;s transformers library in this way.</p>
<p>See &ldquo;<a href="https://markwatson.com/">https://markwatson.com/</a>&rdquo;.</p>
<h3 id="gpt-neo">GPT-neo</h3>
<p><a href="https://github.com/samrawal/emacs-secondmate/">https://github.com/samrawal/emacs-secondmate/</a></p>
<h3 id="gpt-2">GPT-2</h3>
<p>Thank you <code>@Samin</code> and <code>@erik</code> for the
<code>booste</code> API support in integrating a free to
use GPT-2.</p>
<p>Please visit <a href="https://www.booste.io/">https://www.booste.io/</a> to get your key.</p>
<h3 id="gpt-j"><code>GPT-j</code></h3>
<p>Currently working on a way to integrate this.</p>
]]></content>
        </item>
        
        <item>
            <title>Representing multiverses with Datomic</title>
            <link>http://semiosis.github.io/posts/representing-multiverses-with-datomic/</link>
            <pubDate>Sat, 26 Jun 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/representing-multiverses-with-datomic/</guid>
            <description>Related articles  Language models are multiverse generators :: Moire  |:ϝ∷¦ϝ&amp;rsquo;s blog post on exploring language models.   Datomic with Rich Hickey - YouTube Writing Datomic in Clojure - Rich Hickey - YouTube richhickey.md GitHub  Rich Hickey on becoming a better developer   Notes: https://github.com/semiosis/code-org-tidbits/blob/master/datomic/basic-query.    Project code https://github.com/semiosis/pen.el/  Summary After reading |:ϝ∷¦ϝ&amp;rsquo;s blog article LMs are multiverse generators :: Moire, I decided to take a closer look into Datomic as a possible store for LM generations.</description>
            <content type="html"><![CDATA[<h2 id="related-articles">Related articles</h2>
<ul>
<li><a href="https://generative.ink/posts/language-models-are-multiverse-generators/">Language models are multiverse generators <code>::</code>  Moire</a>
<ul>
<li><code>|:ϝ∷¦ϝ</code>&rsquo;s blog post on exploring language models.</li>
</ul>
</li>
<li><a href="https://www.youtube.com/watch?v=9TYfcyvSpEQ">Datomic with Rich Hickey - YouTube</a></li>
<li><a href="https://www.youtube.com/watch?v=7Fi-UvrRpyI">Writing Datomic in Clojure - Rich Hickey - YouTube</a></li>
<li><a href="https://gist.github.com/prakhar1989/1b0a2c9849b2e1e912fb">richhickey.md GitHub</a>
<ul>
<li>Rich Hickey on becoming a better developer</li>
</ul>
</li>
<li>Notes: <a href="https://github.com/semiosis/code-org-tidbits/blob/master/datomic/basic-query">https://github.com/semiosis/code-org-tidbits/blob/master/datomic/basic-query</a>.</li>
</ul>
<hr>
<dl>
<dt>Project code</dt>
<dd><a href="https://github.com/semiosis/pen.el/">https://github.com/semiosis/pen.el/</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>After reading <code>|:ϝ∷¦ϝ</code>&rsquo;s blog article
<a href="https://generative.ink/posts/language-%20models-are-multiverse-generators/">LMs are multiverse generators <code>::</code> Moire</a>, I
decided to take a closer look into Datomic as
a possible store for LM generations.</p>
<p>Something which caught my attention which Rich
Hickey mentioned was the need for immutability
and to <strong>not</strong> throw away data, in order to make progress.</p>
<p><code>|:ϝ∷¦ϝ</code> also mentioned this when we talked
about keeping our notes around and one day
fine-tuning LMs on them.</p>
<p>Since we are now using LM&rsquo;s to facilitate our
creativity, we need a rock solid and
distributed foundation for retaining memories.
Datomic is a great candidate for such a
database.</p>
<ul>
<li>It&rsquo;s a time-travelling database
<ul>
<li><a href="https://stackoverflow.com/questions/49309263/how-to-achieve-time-travel-with-clojure/49310124">https://stackoverflow.com/questions/49309263/how-to-achieve-time-travel-with-clojure/49310124</a></li>
</ul>
</li>
<li>An entire database is considered a value.</li>
<li>Transactions are broken down into functions.</li>
<li>A local copy is kept inside the application.</li>
<li>Datomic has a lisp domain specific logic-oriented language embedded for doing querying.
<ul>
<li><a href="https://mullikine.github.io/posts/generate-graphviz-and-prolog-from-org-brain/">Generate graphviz and prolog from org-brain // Bodacious Blog</a>
<ul>
<li>Datomic is a semantic subset of prolog.</li>
<li>It&rsquo;s a lisp, so is naturally multidimensional in structure.</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure>
    <img src="/ox-hugo/datomic-memory-engine.png"/> 
</figure>

<h2 id="datomic-with-rich-hickey-youtube"><a href="https://www.youtube.com/watch?v=9TYfcyvSpEQ">Datomic with Rich Hickey - YouTube</a></h2>
<ul>
<li>Datomic can harness storage from many different storage and database services
<ul>
<li>Even relational databases</li>
</ul>
</li>
<li>Has pluggable comparators
<ul>
<li>Two sorts that are always maintained
<ul>
<li>Primary by entity</li>
<li>Primary by attribute</li>
</ul>
</li>
</ul>
</li>
<li>Has both the characteristics of a document store and a column store</li>
<li>assert and retract are insufficient
<ul>
<li>So we have tx-fn (transaction functions)</li>
</ul>
</li>
<li>stable basis
<ul>
<li>same query (including time), same result</li>
</ul>
</li>
<li>transactions well defined
<ul>
<li>A transaction is a function to a database</li>
<li>functional accretion</li>
</ul>
</li>
<li>Embedded Datalog
<ul>
<li><a href="https://youtu.be/9TYfcyvSpEQ">Datomic with Rich Hickey - YouTube</a></li>
<li>Subset of Prolog.</li>
<li>guaranteed termination.</li>
<li>Set oriented.
Has set orientation, unlike prolog which
is tuple at a time.</li>
<li>A datalog program contains
<ul>
<li>db(s) + rules + queries
<ul>
<li>one or more databases,</li>
<li>a set of rules which you can map to views</li>
<li>a set of queries</li>
</ul>
</li>
</ul>
</li>
<li>Completely data-driven interface to datalog</li>
<li>has the power of relational algebra</li>
<li>It&rsquo;s embedded in clojure
<ul>
<li>syntactically subset of Clojure</li>
<li>semantically subset of prolog</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="example-datalog-code">Example datalog code</h3>
<ul>
<li><a href="https://youtu.be/9TYfcyvSpEQ">Datomic with Rich Hickey - YouTube</a></li>
</ul>
<p>Can read this as a map where each key maps to a list.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">{<span style="color:#e6db74">:find</span> [?customer ?product]
 <span style="color:#e6db74">:where</span> [[?customer <span style="color:#e6db74">:shipAddress</span> ?addr]
         [?addr <span style="color:#e6db74">:zip</span> ?zip]
         [?product <span style="color:#e6db74">:product/weight</span> ?weight]

         [?product <span style="color:#e6db74">:product/price</span> ?price]
         [(<span style="color:#a6e22e">Shipping/estimate</span> ?zip ?weight) ?shipCost]
         [(&lt;= ?price ?shipCost)]]}</code></pre></td></tr></table>
</div>
</div>
<p>No joins &ndash; all joins are implicit.</p>
<p>Unification unifies all the values of customer
to be the same customer as the product ~~&hellip;</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">unification
    [#prolog]
    [operator]

    Essentially a combination of assignment
    and equality.

    vimlinks +/&#34;?- 2 = 3.&#34; &#34;https://learnxinyminutes.com/docs/prolog/&#34;

    If both sides are bound (ie, defined),
    check equality.
    2 = 3

    IMPORTANT (the essence of unification):
    If one side is free (ie, undefined),
    assign to match the other side.
    X = 3

    If both sides are free, the assignment is
    remembered. With some luck, one of the two
    sides will eventually be bound, but this
    isn&#39;t necessary.
    X = Y are both free, so Prolog remembers
    it. Therefore assigning X will also assign
    Y. IS is another assigment operator in prolog.
    X = Y, X = 2, Z is Y + 3.

    See:
        vim +/&#34;modus ponens&#34; &#34;$NOTES/ws/logic/glossary.txt&#34;</code></pre></td></tr></table>
</div>
</div>
<h2 id="writing-datomic-in-clojure-rich-hickey-youtube"><a href="https://www.youtube.com/watch?v=7Fi-UvrRpyI">Writing Datomic in Clojure - Rich Hickey - YouTube</a></h2>
<p>Database is distributed.</p>
<p>Brings power from database (where
traditionally it would be found), to the
application logic.</p>
<ul>
<li>The application gets its own brain (datomic database copy)
<ul>
<li>The app becomes a peer</li>
<li>The db is effectively local</li>
</ul>
</li>
</ul>
<h3 id="datalog">datalog</h3>
<ul>
<li>The big advantage over <code>core.logic</code> or <code>prolog</code>
<ul>
<li>The semantics of those are tuple at a time</li>
<li>The semantics of datalog is set at a time
<ul>
<li>This means that underneath the hood, entire sets are being merge-joined</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="peer-implementation">Peer implementation</h4>
<p><a href="https://youtu.be/7Fi-UvrRpyI">Writing Datomic in Clojure - Rich Hickey - YouTube</a></p>
<h4 id="consistency-and-scale">Consistency and Scale</h4>
<h4 id="testing">Testing</h4>
<ul>
<li>Functional tests</li>
<li>Simulation-based testing
<ul>
<li>I like.</li>
</ul>
</li>
</ul>
<h2 id="querying-datomic">Querying Datomic</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/4EMtFoULbap3OtMKg9HqFojf5" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/4EMtFoULbap3OtMKg9HqFojf5.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/4EMtFoULbap3OtMKg9HqFojf5.js" id="asciicast-4EMtFoULbap3OtMKg9HqFojf5" async></script>
<h2 id="learning-with-datomic">Learning with Datomic</h2>
<p>In the markdown file linked to above and in
his videos about Datomic Rich Hickey tells us
that tells us that mastery comes from always
working slightly beyond your comfort/ability
zone, pushing it ever forward.</p>
<p>He also designed Datomic to efficiently
accrete and distribute knowledge, whilst
remaining queryable. It allows you to both
offload logic to the database and run logic
locally which traditionally would&rsquo;ve been
conducted remotely on the database.</p>
<h2 id="additional-reading">Additional reading</h2>
<h3 id="domain-modeling-with-datalog-by-norbert-wojtowicz-youtube"><a href="https://www.youtube.com/watch?v=oo-7mN9WXTw">DOMAIN MODELING WITH DATALOG by Norbert Wojtowicz - YouTube</a></h3>
<figure>
    <img src="/ox-hugo/datomic-stream.png"/> 
</figure>

<dl>
<dt>Complete notes</dt>
<dd><a href="https://github.com/semiosis/code-org-tidbits/blob/master/datomic/domain-modeling-with-datalog.org">https://github.com/semiosis/code-org-tidbits/blob/master/datomic/domain-modeling-with-datalog.org</a></dd>
</dl>
<p>Example: github.
New users.
There are 3 users here in our system.
3 ids means they are different things.
Each row is a <code>datum</code>.</p>
<table>
<thead>
<tr>
<th>entity</th>
<th>attribute</th>
<th>value</th>
</tr>
</thead>
<tbody>
<tr>
<td>11</td>
<td><code>:user/name</code></td>
<td>richhickey</td>
</tr>
<tr>
<td>22</td>
<td><code>:user/name</code></td>
<td>tonsky</td>
</tr>
<tr>
<td>33</td>
<td><code>:user/name</code></td>
<td>pithyless</td>
</tr>
</tbody>
</table>
<p>We use pattern-matching for querying (Datomic).</p>
<p>A pattern in this case will be a vector of 3
elements that represents the EAV structure in
our database.</p>
<p>Underscore means I don&rsquo;t care (wildcard).</p>
<p><code>[11 _ _]</code></p>
<p>Variables start with a question mark and some
name i.e. <code>?entity</code>.</p>
<h2 id="annex">Annex</h2>
<p>I want to mention this excerpt about the
origins of surreal numbers because I think
there is some allegory here.</p>
<h3 id="surreal-numbers">Surreal numbers</h3>
<p><a href="https://ianopolous.peergos.me/maths/surreal">https://ianopolous.peergos.me/maths/surreal</a></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">In 1972, Conway described his system of
numbers to computer scientist Donald Knuth at
Stanford.

Knuth (creator of the $\TeX$ typesetting
system) then went away and wrote a short
novelette introducing these numbers.

It was the first time for a major mathematical
discovery to be published in a work of fiction
first.

Knuth coined the term surreal numbers; taking
“Sur” from the French for “above”.

The surreal numbers satisfy the axioms for a
field (but the question of whether or not they
constitute a field is complicated by the fact
that, collectively, they are too large to form
a set).</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>explainshell with GPT-3</title>
            <link>http://semiosis.github.io/posts/explainshell-with-gpt-3/</link>
            <pubDate>Wed, 16 Jun 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/explainshell-with-gpt-3/</guid>
            <description>Summary I make a simple GPT-3 prompt to explain shell code while using emacs.
It mimics the functionality of explainshell but it&amp;rsquo;s able to also describe the purpose of commands with syntax and those that are semi-baked or pseudocode.
 Related https://mullikine.github.io/posts/crontab-guru-in-emacs/  Demo  --  Prompt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135  in-development: no title: &amp;#34;explain a shell command&amp;#34; issues: design-patterns: # future-titles: &amp;#34;&amp;#34; # aims: doc: &amp;#34;Explain what a shell command does&amp;#34; # aims: |+ # - More abstractive rewording prompt-version: 1 # &amp;lt;:pp&amp;gt; defines a point where the following # text is concatenated before the postprocessor # is run.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I make a simple GPT-3 prompt to explain shell
code while using emacs.</p>
<p>It mimics the functionality of <code>explainshell</code>
but it&rsquo;s able to also describe the purpose of
commands with syntax and those that are semi-baked or
pseudocode.</p>
<dl>
<dt>Related</dt>
<dd><a href="https://mullikine.github.io/posts/crontab-guru-in-emacs/">https://mullikine.github.io/posts/crontab-guru-in-emacs/</a></dd>
</dl>
<h2 id="demo">Demo</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/YoWeRJC6W1PhoZuyrtFUQ39sB" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/YoWeRJC6W1PhoZuyrtFUQ39sB.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/YoWeRJC6W1PhoZuyrtFUQ39sB.js" id="asciicast-YoWeRJC6W1PhoZuyrtFUQ39sB" async></script>
<h2 id="prompt">Prompt</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">125
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">126
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">127
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">128
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">129
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">130
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">131
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">132
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">133
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">134
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">135
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">in-development</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;explain a shell command&#34;</span>
<span style="color:#f92672">issues</span>:
<span style="color:#f92672">design-patterns</span>:
<span style="color:#75715e"># future-titles: &#34;&#34;</span>
<span style="color:#75715e"># aims:</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;Explain what a shell command does&#34;</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - More abstractive rewording</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># &lt;:pp&gt; defines a point where the following</span>
<span style="color:#75715e"># text is concatenated before the postprocessor</span>
<span style="color:#75715e"># is run.</span>
<span style="color:#75715e"># &lt;1&gt;, &lt;2&gt; etc. are where variables are substituted</span>
<span style="color:#75715e"># &lt;1&gt; is special because it may be the current selection</span>
<span style="color:#75715e"># &lt;2&gt; May be inferred from &lt;1&gt; via a prompt.</span>
<span style="color:#75715e"># This way, a function can be curried/beta-reduced to a function of 1 argument.</span>
<span style="color:#75715e"># Use the markdown style</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following is a list of one-liners for the linux command-line and some explanations:
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    $ ls -t * | head -1
</span><span style="color:#e6db74">    The above command gets the newest file in directory bash.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    $ find . -name &#39;*&#39; -type f -not -path &#39;*.mp3&#39;
</span><span style="color:#e6db74">    The above command finds with invert match - e.g. find every file that is not mp3
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    $ find . -name &#34;node_modules&#34; -exec rm -rf &#39;{}&#39; +
</span><span style="color:#e6db74">    The above command recursively removes all &#34;node_modules&#34; folders
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    $ &lt;1&gt;
</span><span style="color:#e6db74">    The above command</span>    
<span style="color:#f92672">problems</span>:
<span style="color:#75715e"># Put problems directly after the prompt because the prompt is a multiline string.</span>
<span style="color:#75715e"># - &#34;Struggles with the latter columns.&#34;</span>
<span style="color:#75715e"># # Additional transformation of prompt after the template</span>
<span style="color:#75715e"># prompt-filter: &#34;sed -z &#39;s/\s\+$//&#39;&#34;</span>
<span style="color:#75715e"># # Trailing whitespace is always removed</span>
<span style="color:#75715e"># prompt-remove-trailing-whitespace: on</span>
<span style="color:#75715e"># myrc will select the completion engine using my config.</span>
<span style="color:#75715e"># This may be openi-complete or something else</span>
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;myrc&#34;</span>
<span style="color:#75715e"># if nothing is selected in myrc and openapi-complete is used</span>
<span style="color:#75715e"># by default, then openai should select this engine.</span>
<span style="color:#f92672">preferred-openai-engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/ihadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">200</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># Only the first one will be used by the API,</span>
<span style="color:#75715e"># but the completer script will use the others.</span>
<span style="color:#75715e"># Currently the API can only accept one stop-sequence, but that may change.</span>
<span style="color:#f92672">stop-sequences</span>:
<span style="color:#75715e"># - &#34;\n&#34;</span>
<span style="color:#75715e"># - &#34;\n\n&#34;</span>
<span style="color:#75715e"># 2 hashes is more reliable as a stop sequence because</span>
<span style="color:#75715e"># sometimes the generation morphs from ### to ##</span>
- <span style="color:#e6db74">&#34;##&#34;</span>
<span style="color:#75715e"># inject-start-text: yes</span>
<span style="color:#75715e"># inject-restart-text: yes</span>
<span style="color:#75715e"># show-probabilities: off</span>
<span style="color:#75715e"># Cache the function by default when running the prompt function</span>
<span style="color:#f92672">cache</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;code&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;raco pkg show --all&#34;</span>
<span style="color:#75715e"># test-output: &#34;both are types of berry&#34;</span>
<span style="color:#75715e"># Completion is for generating a company-mode completion function</span>
<span style="color:#75715e"># completion: on</span>
<span style="color:#75715e"># # default values for pen -- evaled</span>
<span style="color:#75715e"># # This is useful for completion commands.</span>
<span style="color:#75715e"># pen-defaults:</span>
<span style="color:#75715e"># - &#34;(pen-surrounding-text)&#34;</span>
<span style="color:#75715e"># These are elisp String-&gt;String functions and run from pen.el</span>
<span style="color:#75715e"># It probably runs earlier than the preprocessors shell scripts</span>
<span style="color:#75715e"># pen-preprocessors:</span>
<span style="color:#75715e"># - &#34;pen-pf-correct-grammar&#34;</span>
<span style="color:#75715e"># # A preprocessor filters the var at that position</span>
<span style="color:#75715e"># the current implementation of preprocessors is kinda slow and will add ~100ml per variable</span>
<span style="color:#75715e"># # This may be useful to distinguish a block of text, for example</span>
<span style="color:#75715e"># preprocessors:</span>
<span style="color:#75715e"># - &#34;sed &#39;s/^/- /&#34;</span>
<span style="color:#75715e"># - &#34;cat&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">prefer-external</span>: <span style="color:#66d9ef">on</span>
<span style="color:#75715e"># This is an optional external command which may be used to perform the same task as the API.</span>
<span style="color:#75715e"># This can be used to train the prompt.</span>
<span style="color:#75715e"># The external command must take arguments, not stdin</span>
<span style="color:#75715e"># So that all variables may be passed into it.</span>
<span style="color:#75715e"># external: &#34;generate-text-from-input.sh&#34;</span>
<span style="color:#75715e"># This compares the output of the external script to the output of the LM</span>
<span style="color:#75715e"># similarity-test:</span>
<span style="color:#75715e"># This script returns a 0-1 decimal value representing the quality of the generated output.</span>
<span style="color:#75715e"># The input is 2 arguments each containing output</span>
<span style="color:#75715e"># The output is a decimal number from 0 to 1</span>
<span style="color:#75715e"># quality-script: &#34;my-quality-checker-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># This script can be used to validate the output.</span>
<span style="color:#75715e"># If the output is accurate, the validation script returns exit code 1.</span>
<span style="color:#75715e"># The input is 2 arguments each containing output</span>
<span style="color:#75715e"># validation-script: &#34;my-validator-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># Enable running conversation</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># This is the name of an external database-driven pretext generator.</span>
<span style="color:#75715e"># It would typically summarize and fact extract from history.</span>
<span style="color:#75715e"># It then passes the pretext to the new prompt.</span>
<span style="color:#75715e"># conversation-pretext-generator: &#34;human-conversation&#34;</span>
<span style="color:#75715e"># Replace selected text</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">external-related</span>:
- <span style="color:#e6db74">&#34;https://explainshell.com/&#34;</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">n-test-runs</span>: <span style="color:#ae81ff">5</span>
<span style="color:#f92672">related-prompts</span>:
- <span style="color:#e6db74">&#34;annotate-with-commentary.prompt&#34;</span>
<span style="color:#75715e"># Prompt function aliases</span>
<span style="color:#75715e"># aliases:</span>
<span style="color:#75715e"># - &#34;asktutor&#34;</span>
<span style="color:#75715e"># postprocessor: &#34;sed &#39;s/- //&#39; | uniqnosort&#34;</span>
<span style="color:#75715e"># # Run it n times and combine the output</span>
<span style="color:#75715e"># n-collate: 10</span>
<span style="color:#75715e"># This for combining prompts:</span>
<span style="color:#75715e"># It might be, for example, summarize, or uniqnosort</span>
<span style="color:#75715e"># collation-postprocessor: &#34;uniqnosort&#34;</span></code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>nlsh (Natural Language Shell) with GPT-3</title>
            <link>http://semiosis.github.io/posts/nlsh-natural-language-shell/</link>
            <pubDate>Wed, 16 Jun 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/nlsh-natural-language-shell/</guid>
            <description>Summary I extend my openai-complete script with REPL capabilities and use it to create parameterised nlsh REPLs for different Operating Systems.
I use comint, the emacs mode for managing REPLs and rlwrap to manage history and allow me to run the REPL without emacs.
I also generalise it within my prompt description format as &amp;ldquo;conversation mode&amp;rdquo; which enables me to have rolling conversations with a prompt.
So far, I have not implemented any kind of pseudo-memory system for rolling conversation.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I extend my <code>openai-complete</code> script with REPL
capabilities and use it to create
parameterised <code>nlsh</code> REPLs for different
Operating Systems.</p>
<p>I use <code>comint</code>, the emacs mode for managing
REPLs and <code>rlwrap</code> to manage history and allow
me to run the REPL without emacs.</p>
<p>I also generalise it within my prompt
description format as &ldquo;conversation mode&rdquo;
which enables me to have rolling conversations
with a prompt.</p>
<p>So far, I have not implemented any kind of
pseudo-memory system for rolling conversation.
The prompt is reset every iteration.</p>
<h2 id="demo">Demo</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/WxnufIRbAbYGL8zFx2bWsHf00" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/WxnufIRbAbYGL8zFx2bWsHf00.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/WxnufIRbAbYGL8zFx2bWsHf00.js" id="asciicast-WxnufIRbAbYGL8zFx2bWsHf00" async></script>
<h2 id="code">Code</h2>
<h3 id="openai-complete"><code>openai-complete</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">125
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">126
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">127
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">128
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">129
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">130
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">131
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">132
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">133
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">134
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">135
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">136
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">137
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">138
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">139
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">140
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">141
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">142
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">143
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">144
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">145
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">146
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">147
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">148
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">149
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">150
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">151
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">152
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">153
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">154
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">155
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">156
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">157
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">158
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">159
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">160
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">161
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">162
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">163
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">164
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">165
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">166
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">167
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">168
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">169
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">170
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">171
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">172
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">173
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">174
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">175
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">176
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">177
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">178
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">179
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">180
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">181
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">182
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">183
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">184
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">185
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">186
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">187
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">188
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">189
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">190
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">191
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">192
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">193
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">194
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">195
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">196
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">197
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">198
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">199
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">200
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">201
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">202
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">203
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">204
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">205
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">206
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">207
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">208
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">209
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">210
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">211
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">212
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">213
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">214
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">215
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">216
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">217
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">218
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">219
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">220
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">221
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">222
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">223
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">224
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">225
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">226
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">227
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">228
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">229
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">230
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">231
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">232
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">233
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">234
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">235
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">236
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">237
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">238
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">239
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">240
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">241
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">242
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">243
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">244
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">245
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">246
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">247
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">248
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">249
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">250
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">251
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">252
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">253
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">254
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">255
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">256
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">257
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">258
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">259
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">260
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">261
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">262
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">263
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">264
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">265
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">266
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">267
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">268
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">269
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">270
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">271
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">272
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">273
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">274
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">275
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">276
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">277
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">278
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">279
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">280
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">281
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">282
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">283
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">284
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">285
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">286
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">287
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">288
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">289
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">290
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">291
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">292
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">293
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">294
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">295
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">296
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">297
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">298
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">299
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">300
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">301
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">302
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">303
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">304
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">305
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">306
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">307
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">308
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">309
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">310
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">311
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">312
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">313
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">314
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">315
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">316
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">317
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">318
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">319
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">320
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">321
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">322
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">323
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">324
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">325
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">326
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">327
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">328
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">329
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">330
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">331
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">332
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">333
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">334
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">335
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">336
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">337
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">338
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">339
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">340
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">341
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">342
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">343
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">344
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">345
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

sn<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

yq<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    command yq <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> 2&gt;/dev/null
<span style="color:#f92672">}</span>

oci<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    <span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$NOCACHE<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;y&#34;</span>; <span style="color:#66d9ef">then</span>
        <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
    <span style="color:#66d9ef">else</span>
        command oci <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
    <span style="color:#66d9ef">fi</span>
<span style="color:#f92672">}</span>

stdin_exists<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    ! <span style="color:#f92672">[</span> -t <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> ! test <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>readlink /proc/$$/fd/0<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> /dev/null
<span style="color:#f92672">}</span>

get_stop_sequences<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    yq -r <span style="color:#e6db74">&#34;(.\&#34;stop-sequences\&#34;[] |= @base64) .\&#34;stop-sequences\&#34;[] // empty&#34;</span> |
        wrlp -E <span style="color:#e6db74">&#34;base64-decode-string | uq | qne&#34;</span>
<span style="color:#f92672">}</span>

<span style="color:#75715e"># Keep at top</span>
oargs<span style="color:#f92672">=(</span><span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span><span style="color:#f92672">)</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -cmode<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        <span style="color:#75715e"># This will create a readline REPL</span>
        USE_CONVERSATION_MODE<span style="color:#f92672">=</span>y
        shift
    <span style="color:#f92672">}</span>
    ;;

    -nc<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        NOCACHE<span style="color:#f92672">=</span>y
        shift
    <span style="color:#f92672">}</span>
    ;;

    -pp<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        PRETTY_PRINT<span style="color:#f92672">=</span>y
        shift
    <span style="color:#f92672">}</span>
    ;;

    -s<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        silence<span style="color:#f92672">=</span>y
        <span style="color:#75715e"># exec 2&gt;/dev/null</span>
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

export PRETTY_PRINT

<span style="color:#75715e"># set -xv</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>NOCACHE:=<span style="color:#e6db74">&#34;n&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

<span style="color:#66d9ef">if</span> ! test <span style="color:#e6db74">&#34;</span>$sn<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> openai-complete; <span style="color:#66d9ef">then</span>
    prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$sn<span style="color:#e6db74">&#34;</span>
    prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | sed <span style="color:#e6db74">&#39;s/^oai-//&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">elif</span> test -n <span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
    prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
    shift
<span style="color:#66d9ef">fi</span>

<span style="color:#66d9ef">if</span> stdin_exists; <span style="color:#66d9ef">then</span>
    <span style="color:#75715e"># The stdin can be the first argument</span>
    set -- <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

<span style="color:#66d9ef">if</span> ! pl <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | grep -q -P <span style="color:#e6db74">&#39;\.prompt$&#39;</span>; <span style="color:#66d9ef">then</span>
    prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>prompt_fp<span style="color:#e6db74">}</span><span style="color:#e6db74">.prompt&#34;</span>
<span style="color:#66d9ef">fi</span>

<span style="color:#66d9ef">if</span> ! test -f <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
    <span style="color:#66d9ef">if</span> test -f <span style="color:#e6db74">&#34;</span>$MYGIT<span style="color:#e6db74">/semiosis/prompts/prompts/</span>$prompt_fp<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
        cd <span style="color:#e6db74">&#34;</span>$MYGIT<span style="color:#e6db74">/semiosis/prompts/prompts/&#34;</span>
    <span style="color:#66d9ef">fi</span>
<span style="color:#66d9ef">fi</span>

test -f <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit

<span style="color:#75715e"># set -f; IFS=&#39;|&#39; data=($(curl &#39;......&#39; | jq -r &#39;.data |</span>
<span style="color:#75715e">#     map([.absoluteNumber, .airedEpisodeNumber, .episodeName, .overview] |</span>
<span style="color:#75715e">#     join(&#34;|&#34;)) | join(&#34;\n&#34;)&#39;)); set +f</span>

<span style="color:#75715e"># https://stackoverflow.com/questions/44111831/bash-read-multi-line-string-into-multiple-variables</span>

<span style="color:#75715e"># Can only be a single character, so use something rare</span>
delim<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;¬&#34;</span>
IFS<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$delim<span style="color:#e6db74">&#34;</span> read -r -d<span style="color:#e6db74">$&#39;\1&#39;</span> prompt rlprompt conversation_mode repeater first_stop_sequence haspreprocessors temperature engine preferred_openai_engine max_tokens top_p postprocessor prettifier &lt; &lt;<span style="color:#f92672">(</span>
cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#39;[.prompt,.rlprompt,.&#34;conversation-mode&#34;,.repeater,.&#34;stop-sequences&#34;[0],.preprocessors[0],.temperature,.engine,.&#34;preferred-openai-engine&#34;,.&#34;max-tokens&#34;,.&#34;top-p&#34;,.postprocessor,.prettifier] | join(&#34;&#39;</span>$delim<span style="color:#e6db74">&#39;&#34;)&#39;</span><span style="color:#f92672">)</span>

inputargpos<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$((</span> $# <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span> <span style="color:#66d9ef">))</span><span style="color:#e6db74">&#34;</span>
repeater<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$repeater<span style="color:#e6db74">&#34;</span> | sed <span style="color:#e6db74">&#34;s/{}/&lt;</span><span style="color:#e6db74">${</span>inputargpos<span style="color:#e6db74">}</span><span style="color:#e6db74">&gt;/g&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$conversation_mode<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;true&#34;</span>; <span style="color:#66d9ef">then</span>
    <span style="color:#75715e"># Turn this into a normal prompt by joining the repeater with the main prompt</span>
    prompt<span style="color:#f92672">+=</span><span style="color:#e6db74">&#34;</span>$repeater<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

haspreprocessors<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$haspreprocessors<span style="color:#e6db74">&#34;</span> | sed -z <span style="color:#e6db74">&#39;s/^\n$//&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
postprocessor<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$postprocessor<span style="color:#e6db74">&#34;</span> | sed -z <span style="color:#e6db74">&#39;s/^\n$//&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
prettifier<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$prettifier<span style="color:#e6db74">&#34;</span> | sed -z <span style="color:#e6db74">&#39;s/^\n$//&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$engine<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> myrc; <span style="color:#66d9ef">then</span>
    engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>myrc .default_openai_api_engine<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

<span style="color:#75715e"># The preprocessors must be loaded into memory, not simply used because the conversation-mode input may need preprocessing</span>
<span style="color:#66d9ef">if</span> test -n <span style="color:#e6db74">&#34;</span>$haspreprocessors<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
    <span style="color:#75715e"># yq -r &#34;(.preprocessors[] |= @base64) .preprocessors[] // empty&#34; | awk1</span>
    <span style="color:#75715e"># | wrlp -E &#34;base64-decode-string&#34;</span>

    <span style="color:#75715e"># readarray is bash 4</span>
    readarray -t pps &lt; &lt;<span style="color:#f92672">(</span>cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;(.preprocessors[] |= @base64) .preprocessors[] // empty&#34;</span> | awk1<span style="color:#f92672">)</span>

    <span style="color:#75715e"># This is slow. I should use a different language</span>
    eval <span style="color:#e6db74">&#34;set -- </span><span style="color:#66d9ef">$(</span>
    i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
    <span style="color:#66d9ef">for</span> pp in <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>pps[@]<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
    <span style="color:#66d9ef">do</span>
        pp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$pp<span style="color:#e6db74">&#34;</span> | base64-decode-string<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
        echo <span style="color:#e6db74">&#34;</span>$pp<span style="color:#e6db74">&#34;</span> | hls blue 1&gt;&amp;<span style="color:#ae81ff">2</span>

        eval val<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;\$</span>$i<span style="color:#e6db74">&#34;</span>

        <span style="color:#66d9ef">if</span> ! test <span style="color:#e6db74">&#34;</span>$pp<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;null&#34;</span>; <span style="color:#66d9ef">then</span>
            val<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$val<span style="color:#e6db74">&#34;</span> | eval <span style="color:#e6db74">&#34;</span>$pp<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
        <span style="color:#66d9ef">fi</span>

        printf <span style="color:#e6db74">&#34;&#39;%s&#39; &#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf %s <span style="color:#e6db74">&#34;</span>$val<span style="color:#e6db74">&#34;</span> | sed <span style="color:#e6db74">&#34;s/&#39;/&#39;\\\\&#39;&#39;/g&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>;
        i<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$((</span>i <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span><span style="color:#66d9ef">))</span><span style="color:#e6db74">&#34;</span>
    <span style="color:#66d9ef">done</span> | sed <span style="color:#e6db74">&#39;s/ $//&#39;</span>
    <span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>engine:=<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>myrc .default_openai_api_engine<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>preferred_openai_engine:=<span style="color:#e6db74">&#34;davinci&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>engine:=<span style="color:#e6db74">&#34;</span>$preferred_openai_engine<span style="color:#e6db74">&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>engine:=<span style="color:#e6db74">&#34;davinci&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># This is OK now because I have &#39;myeval&#39;</span>
first_stop_sequence<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$first_stop_sequence<span style="color:#e6db74">&#34;</span> | qne<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># prompt=&#34;$(cat &#34;$prompt_fp&#34; | yq -r &#34;.prompt // empty&#34;)&#34;</span>
<span style="color:#75715e"># # stop_sequence=&#34;$(cat &#34;$prompt_fp&#34; | yq &#34;.\&#34;stop-sequences\&#34;[0] // empty&#34; | uq | qne)&#34;</span>
stop_sequences<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | get_stop_sequences 2&gt;/dev/null<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#75715e"># temperature=&#34;$(cat &#34;$prompt_fp&#34; | yq -r &#34;.\&#34;temperature\&#34; // empty&#34;)&#34;</span>
<span style="color:#75715e"># engine=&#34;$(cat &#34;$prompt_fp&#34; | yq -r &#34;.\&#34;engine\&#34; // empty&#34;)&#34;</span>
<span style="color:#75715e"># max_tokens=&#34;$(cat &#34;$prompt_fp&#34; | yq -r &#34;.\&#34;max-tokens\&#34; // empty&#34;)&#34;</span>
<span style="color:#75715e"># top_p=&#34;$(cat &#34;$prompt_fp&#34; | yq -r &#34;.\&#34;top-p\&#34; // empty&#34;)&#34;</span>

test -n <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">0</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -e<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
;;

*<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>engine:=<span style="color:#e6db74">&#34;ada&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>temperature:=<span style="color:#e6db74">&#34;0.6&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>max_tokens:=<span style="color:#e6db74">&#34;64&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>sub_completions:=<span style="color:#e6db74">&#34;1&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>


ogprompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span>

prompt_prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | chomp | tf<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$USE_CONVERSATION_MODE<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;y&#34;</span>; <span style="color:#66d9ef">then</span>
    i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
    <span style="color:#66d9ef">for</span> var in <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
    <span style="color:#66d9ef">do</span>
        <span style="color:#75715e"># Ensure that nothing is chomped from the arguments</span>
        printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>var<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> | uq -f | IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> var
        rlprompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$rlprompt<span style="color:#e6db74">&#34;</span> | template -$i <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

        <span style="color:#75715e"># cmd-nice template -$i &#34;$var&#34;</span>
        <span style="color:#f92672">((</span>i++<span style="color:#f92672">))</span>
    <span style="color:#66d9ef">done</span>
<span style="color:#66d9ef">fi</span>

repl_run<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>

    <span style="color:#75715e"># Choose to reset after each entry.</span>
    <span style="color:#75715e"># I should do this by default because of the prompt size.</span>
    <span style="color:#75715e"># It can&#39;t grow beyond a particular length.</span>
    prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$ogprompt<span style="color:#e6db74">&#34;</span>

    i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
    <span style="color:#66d9ef">for</span> var in <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
    <span style="color:#66d9ef">do</span>
        <span style="color:#75715e"># Ensure that nothing is chomped from the arguments</span>
        printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>var<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> | uq -f | IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> var
        prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | template -$i <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

        <span style="color:#75715e"># cmd-nice template -$i &#34;$var&#34;</span>
        <span style="color:#f92672">((</span>i++<span style="color:#f92672">))</span>
    <span style="color:#66d9ef">done</span>

    printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | chomp &gt; <span style="color:#e6db74">&#34;</span>$prompt_prompt_fp<span style="color:#e6db74">&#34;</span>

    gen_pos<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>grep <span style="color:#e6db74">&#34;&lt;:pp&gt;&#34;</span> --byte-offset <span style="color:#e6db74">&#34;</span>$prompt_prompt_fp<span style="color:#e6db74">&#34;</span> | cut -d : -f 1<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    sed -i <span style="color:#e6db74">&#39;s/&lt;:pp&gt;//&#39;</span> <span style="color:#e6db74">&#34;</span>$prompt_prompt_fp<span style="color:#e6db74">&#34;</span>

    <span style="color:#75715e"># prompt=&#34;$(p &#34;$prompt&#34; | bs &#39;$!&#39; | qne)&#34;</span>

    prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$prompt_prompt_fp<span style="color:#e6db74">&#34;</span> | bs <span style="color:#e6db74">&#39;$`&#34;!&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    <span style="color:#75715e"># prompt=&#34;$(p &#34;$prompt&#34; | bs &#39;$`&#34;&#39; | sed -z &#39;s/\n/\\n/g&#39;)&#34;</span>


    IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> SHCODE <span style="color:#e6db74">&lt;&lt;HEREDOC
</span><span style="color:#e6db74">openai api \
</span><span style="color:#e6db74">    completions.create \
</span><span style="color:#e6db74">    -e &#34;$engine&#34; \
</span><span style="color:#e6db74">    -t &#34;$temperature&#34; \
</span><span style="color:#e6db74">    -M &#34;$max_tokens&#34; \
</span><span style="color:#e6db74">    -n &#34;$sub_completions&#34; \
</span><span style="color:#e6db74">    $(
</span><span style="color:#e6db74">        if test -n &#34;$first_stop_sequence&#34;; then
</span><span style="color:#e6db74">            # printf -- &#34;%s&#34; &#34; --stop $(aqf &#34;$first_stop_sequence&#34;)&#34;
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">            # The newline must go in verbatim, which means it needs
</span><span style="color:#e6db74">            # to be interpreted in the printf
</span><span style="color:#e6db74">            # printf -- &#34; --stop \&#34;$first_stop_sequence\&#34;&#34;
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">            printf -- &#34;%s&#34; &#34; --stop $(aqf &#34;$first_stop_sequence&#34;)&#34;
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">            # eval &#34;$(cmd printf -- &#34;%s&#34; &#34; --stop \&#34;$first_stop_sequence\&#34;&#34;)&#34;
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">            # multiple doesn&#39;t work
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">            # printf -- &#34;%s$delim&#34; &#34;$first_stop_sequence&#34; | while IFS=&#34;$delim&#34; read -r line; do
</span><span style="color:#e6db74">                # printf -- &#34;%s&#34; &#34; --stop $(aqf &#34;$line&#34;)&#34;
</span><span style="color:#e6db74">            # done
</span><span style="color:#e6db74">        fi
</span><span style="color:#e6db74">    ) \
</span><span style="color:#e6db74">    -p &#34;$prompt&#34;
</span><span style="color:#e6db74">HEREDOC</span>

    shfp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s\n&#34;</span> <span style="color:#e6db74">&#34;</span>$SHCODE<span style="color:#e6db74">&#34;</span> | sed -z <span style="color:#e6db74">&#39;s/\n\+$//&#39;</span> | sed -z <span style="color:#e6db74">&#34;s/\\n/\\\n/g&#34;</span> | tf sh<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

    <span style="color:#75715e"># printf -- &#34;%s\n&#34; &#34;$SHCODE&#34; | tv</span>
    <span style="color:#75715e"># exit 1</span>

    export UPDATE<span style="color:#f92672">=</span>y

    <span style="color:#75715e"># response_fp=&#34;$(eval &#34;$SHCODE&#34; | uq | s chomp | tf txt)&#34;</span>

    response_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>sh <span style="color:#e6db74">&#34;</span>$shfp<span style="color:#e6db74">&#34;</span> | uq | s chomp | tf txt<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

    <span style="color:#75715e"># Only record the history if the command actually queried the API</span>
    <span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>oargs[@]<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

    prompt_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$prompt_prompt_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    response_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

    : <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>gen_pos:=<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$((</span>prompt_bytes <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span><span style="color:#66d9ef">))</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

    seddelim<span style="color:#f92672">=</span>%
    IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> stop_sequence_trimmer <span style="color:#e6db74">&lt;&lt;HEREDOC
</span><span style="color:#e6db74">$(
</span><span style="color:#e6db74">    printf -- &#34;%s\n&#34; &#34;$stop_sequences&#34; | while IFS=$&#39;\n&#39; read -r s; do
</span><span style="color:#e6db74">        printf -- &#34;%s&#34; &#34;sed -z &#39;s${seddelim}${s}.*${seddelim}${seddelim}&#39; |&#34;
</span><span style="color:#e6db74">    done
</span><span style="color:#e6db74">)
</span><span style="color:#e6db74">cat
</span><span style="color:#e6db74">HEREDOC</span>

    <span style="color:#75715e"># printf -- &#34;%s\n&#34; &#34;$stop_sequence_trimmer&#34; | tv &amp;&gt;/dev/null</span>

    cat <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span> | hc <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">-response&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>oargs[@]<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> &amp;&gt;/dev/null

    tail -c +$gen_pos <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span> | <span style="color:#f92672">{</span>
        <span style="color:#75715e"># This will get slow</span>
        <span style="color:#75715e"># I should be working in clojure or racket I think</span>

        <span style="color:#66d9ef">if</span> <span style="color:#f92672">(</span> exec 0&lt;/dev/null; cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | yq-test chomp-start; <span style="color:#f92672">)</span>; <span style="color:#66d9ef">then</span>
            <span style="color:#75715e"># exec 0&lt;/dev/null ns hi</span>
            sed -z <span style="color:#e6db74">&#39;s/^\n\+//&#39;</span> | sed -z <span style="color:#e6db74">&#39;s/^\s\+//&#39;</span>
        <span style="color:#66d9ef">else</span>
            cat
        <span style="color:#66d9ef">fi</span> |
            <span style="color:#66d9ef">if</span> <span style="color:#f92672">(</span> exec 0&lt;/dev/null; cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | yq-test chomp-end; <span style="color:#f92672">)</span>; <span style="color:#66d9ef">then</span>
                sed -z <span style="color:#e6db74">&#39;s/\n\+$//&#39;</span> | sed -z <span style="color:#e6db74">&#39;s/\s\+$//&#39;</span>
            <span style="color:#66d9ef">else</span>
                cat
            <span style="color:#66d9ef">fi</span> | <span style="color:#f92672">{</span>
                eval <span style="color:#e6db74">&#34;</span>$stop_sequence_trimmer<span style="color:#e6db74">&#34;</span>
            <span style="color:#f92672">}</span> | <span style="color:#f92672">{</span>
                <span style="color:#66d9ef">if</span> test -n <span style="color:#e6db74">&#34;</span>$postprocessor<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
                    <span style="color:#75715e"># echo &#34;&#39;$postprocessor&#39;&#34; | hls green 1&gt;&amp;2</span>
                    eval <span style="color:#e6db74">&#34;</span>$postprocessor<span style="color:#e6db74">&#34;</span>
                <span style="color:#66d9ef">else</span>
                    cat
                <span style="color:#66d9ef">fi</span>
            <span style="color:#f92672">}</span> |
                <span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$PRETTY_PRINT<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> y <span style="color:#f92672">&amp;&amp;</span> test -n <span style="color:#e6db74">&#34;</span>$prettifier<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
                    <span style="color:#75715e"># echo &#34;&#39;$prettifier&#39;&#34; | hls green 1&gt;&amp;2</span>
                    eval <span style="color:#e6db74">&#34;</span>$prettifier<span style="color:#e6db74">&#34;</span>
                <span style="color:#66d9ef">else</span>
                    cat
                <span style="color:#66d9ef">fi</span>
    <span style="color:#f92672">}</span>

    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>
<span style="color:#f92672">}</span>

<span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$USE_CONVERSATION_MODE<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> y <span style="color:#f92672">&amp;&amp;</span> test <span style="color:#e6db74">&#34;</span>$conversation_mode<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;true&#34;</span>; <span style="color:#66d9ef">then</span>
    inputargpos<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$((</span> $# <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span> <span style="color:#66d9ef">))</span><span style="color:#e6db74">&#34;</span>

    echo -n <span style="color:#e6db74">&#34;</span>$rlprompt<span style="color:#e6db74">&gt; &#34;</span> | hls red 1&gt;&amp;<span style="color:#ae81ff">2</span>
    <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r line; <span style="color:#66d9ef">do</span>
        out<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>repl_run <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$line<span style="color:#e6db74">&#34;</span> | awk 1<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
        printf -- <span style="color:#e6db74">&#34;%s\n&#34;</span> <span style="color:#e6db74">&#34;</span>$out<span style="color:#e6db74">&#34;</span>

        prompt<span style="color:#f92672">+=</span><span style="color:#e6db74">&#34;</span>$out<span style="color:#e6db74">\n</span>$first_stop_sequence<span style="color:#e6db74">\n&#34;</span>
        prompt<span style="color:#f92672">+=</span><span style="color:#e6db74">&#34;</span>$repeater<span style="color:#e6db74">&#34;</span>
        echo -n <span style="color:#e6db74">&#34;</span>$rlprompt<span style="color:#e6db74">&gt; &#34;</span> | hls red 1&gt;&amp;<span style="color:#ae81ff">2</span>
    <span style="color:#66d9ef">done</span>
<span style="color:#66d9ef">else</span>
    repl_run <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> | hc <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>oargs[@]<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> | <span style="color:#f92672">{</span>
        <span style="color:#75715e"># exec 3&gt;&amp;2</span>
        pavs
    <span style="color:#f92672">}</span>
<span style="color:#66d9ef">fi</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="elisp">elisp</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun comint-quick (cmd <span style="color:#66d9ef">&amp;optional</span> dir)
  (interactive (<span style="color:#a6e22e">list</span> (read-string-hist <span style="color:#e6db74">&#34;comint-quick: &#34;</span>)))
  (let* ((slug (slugify cmd))
         (buf (make-comint slug (nsfa cmd dir))))
    (with-current-buffer buf
      (switch-to-buffer buf)
      (turn-on-comint-history (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;/home/shane/notes/programs/comint/history/&#34;</span> slug)))))

<span style="color:#75715e">;; &#34;OS which have a bash-like shell of some kind installed&#34;</span>
(defset list-of-sh-operating-systems <span style="color:#f92672">&#39;</span>(
                                       <span style="color:#75715e">;;  There has been a name change</span>
                                       <span style="color:#75715e">;; That&#39;s why this is giving bad results</span>
                                       <span style="color:#75715e">;; &#34;GNU Guix System&#34;</span>
                                       <span style="color:#e6db74">&#34;GuixSD&#34;</span>
                                       <span style="color:#e6db74">&#34;Alpine Linux&#34;</span>
                                       <span style="color:#e6db74">&#34;RHEL Red Hat Enterprise Linux&#34;</span>
                                       <span style="color:#e6db74">&#34;Amazon Linux 2&#34;</span>
                                       <span style="color:#e6db74">&#34;NixOS&#34;</span>
                                       <span style="color:#e6db74">&#34;Ubuntu 20.04&#34;</span>
                                       <span style="color:#e6db74">&#34;Arch Linux&#34;</span>))

(defun nlsh-os (os)
  (interactive (<span style="color:#a6e22e">list</span> (fz list-of-sh-operating-systems)))
  (comint-quick (cmd <span style="color:#e6db74">&#34;nlsh-os&#34;</span> os)))</code></pre></td></tr></table>
</div>
</div>
<h3 id="prompt">prompt</h3>
<p><a href="http://github.com/mullikine/prompts/blob/master/prompts/nlsh-shell-for-given-os.prompt">http://github.com/mullikine/prompts/blob/master/prompts/nlsh-shell-for-given-os.prompt</a></p>
<p><code>nlsh-shell-for-given-os.prompt</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;bash one liner generator on OS from natural language&#34;</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;Get a bash one liner on OS from natural language&#34;</span>
<span style="color:#f92672">rlprompt</span>: <span style="color:#e6db74">&#34;nlsh &lt;1&gt;&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    # List of one-liner shell commands for &lt;1&gt;.
</span><span style="color:#e6db74">    # Language: Shell
</span><span style="color:#e6db74">    # Operating System: &lt;1&gt;
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Input: Print the current directory
</span><span style="color:#e6db74">    Output: pwd
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Input: List files
</span><span style="color:#e6db74">    Output: ls -l
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Input: Change directory to /tmp
</span><span style="color:#e6db74">    Output: cd /tmp
</span><span style="color:#e6db74">    ###</span>    
<span style="color:#75715e"># The last variable should is used as the conversation-mode variable</span>
<span style="color:#75715e"># For conversation-mode</span>
<span style="color:#f92672">repeater</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    Input: {}
</span><span style="color:#e6db74">    Output:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
<span style="color:#75715e"># - &#34;\n&#34;</span>
<span style="color:#75715e"># - &#34;\n\n&#34;</span>
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#75715e"># The last variable is used as the conversation-mode variable</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;Operating System&#34;</span>
- <span style="color:#e6db74">&#34;command&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;Arch Linux&#34;</span>
- <span style="color:#e6db74">&#34;Install package&#34;</span>
<span style="color:#f92672">postprocessor</span>: <span style="color:#e6db74">&#34;sed &#39;s/^Output: //&#39;&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span></code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>GPT-3 assistants for emacs modes</title>
            <link>http://semiosis.github.io/posts/gpt-3-assistants-for-emacs-modes/</link>
            <pubDate>Wed, 02 Jun 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/gpt-3-assistants-for-emacs-modes/</guid>
            <description>Summary In this article I will show how I transition from using shell script to emacs lisp with my &amp;lsquo;any topic&amp;rsquo; tutor in emacs lisp.
I am working on integrating GPT-3, GPT-j and more GPT completion engines into emacs, and connecting more and more emacs packages to GPT-3.
1 2  # Latest docker image of =pen.el= docker run --rm -ti --entrypoint= semiosis/pen.el:latest ./run.sh   Some ideas I have:</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>In this article I will show how I transition
from using shell script to emacs lisp with my
&lsquo;any topic&rsquo; tutor in emacs lisp.</p>
<p>I am working on integrating GPT-3, GPT-j and
more GPT completion engines into emacs, and
connecting more and more emacs packages to
GPT-3.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># Latest docker image of =pen.el=</span>
docker run --rm -ti --entrypoint<span style="color:#f92672">=</span> semiosis/pen.el:latest ./run.sh</code></pre></td></tr></table>
</div>
</div>
<p>Some ideas I have:</p>
<ul>
<li>Correct spelling and grammar in conversations over <code>erc</code> and other <code>emacs</code> chat modes.</li>
<li>Select error messages and ask what they mean.</li>
</ul>
<p>What I&rsquo;ve already built:</p>
<ul>
<li>Context menus for selecting text and running prompt functions on that text
<ul>
<li>Translating</li>
<li>Context-aware functions</li>
<li>Natural language shell for any OS.</li>
<li>Explain shell code.</li>
<li>Get a code snippet.</li>
<li>Get a code one-liner.</li>
<li>Generate code from comments.</li>
<li>Automatically add comments to code</li>
<li>Ask GPT-3, &ldquo;What is the word for &hellip;&rdquo;</li>
<li>Abstractive summarization of text within emacs.</li>
<li>Subtopic generation for mind maps</li>
<li>Tutor for any topic
<ul>
<li>e.g. JavaScript. Ask it which version of node was available in 2018.</li>
</ul>
</li>
<li>Generate lists of things</li>
</ul>
</li>
</ul>
<h3 id="introducing-pen-dot-el--prompt-engineering-in-emacs">Introducing <code>pen.el</code> (Prompt Engineering in emacs)</h3>
<p>Please see my article on <code>Pen</code>  <a href="https://mullikine.github.io/posts/pen/">Pen // Bodacious Blog</a>.</p>
<p>Pen facilitates the creation, development,
discovery and usage of prompts to a LM such as
GPT-3 and GPT-j.</p>
<p>And please email me if you would like to help: <a href="mailto:mullikine@gmail.com">mailto:mullikine@gmail.com</a>.</p>
<dl>
<dt>Pen Project on GitHub</dt>
<dd><a href="https://github.com/semiosis/pen.el">https://github.com/semiosis/pen.el</a></dd>
</dl>
<h2 id="original-shell-script-asktutor">Original <code>shell</code> script, <code>asktutor</code></h2>
<p><code>asktutor</code> queries the OpenAI API via the python library (<code>pip install openai</code>).</p>
<p>This is how it is called:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">asktutor haskell ghc <span style="color:#e6db74">&#34;What does could not deduce mean?&#34;</span></code></pre></td></tr></table>
</div>
</div>
<p>Here is its code:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>
topic<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
test -n <span style="color:#e6db74">&#34;</span>$topic<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">1</span>
shift

in_the_context_of<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
test -n <span style="color:#e6db74">&#34;</span>$in_the_context_of<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">1</span>
shift

question<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
test -n <span style="color:#e6db74">&#34;</span>$question<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">1</span>

<span style="color:#66d9ef">if</span> ! pl <span style="color:#e6db74">&#34;</span>$question<span style="color:#e6db74">&#34;</span> | grep -q -P <span style="color:#e6db74">&#34;.*\\?&#34;</span>; <span style="color:#66d9ef">then</span>
    question<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>question<span style="color:#e6db74">}</span><span style="color:#e6db74">?&#34;</span>
<span style="color:#66d9ef">fi</span>

oci openai-complete $MYGIT/semiosis/prompts/prompts/tutor.prompt <span style="color:#e6db74">&#34;</span>$topic<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$in_the_context_of<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$question<span style="color:#e6db74">&#34;</span> | pavs</code></pre></td></tr></table>
</div>
</div>
<h3 id="converting-above-into-elisp-together-with-a-prompt-function">Converting above into elisp together with a prompt function</h3>
<p><code>pen-pf-asktutor</code> is generated from a <code>.prompt</code> file (<a href="http://github.com/semiosis/prompts/blob/master/prompts/tutor.prompt">http://github.com/semiosis/prompts/blob/master/prompts/tutor.prompt</a>).</p>
<p>Here is the generation function, <code>pen-generate-prompt-functions</code>: <a href="https://github.com/semiosis/pen.el/blob/master/pen.el#L131">https://github.com/semiosis/pen.el/blob/master/pen.el#L131</a></p>
<p>Now we can use <code>pen-pf-asktutor</code> inside <code>org- brain</code>. We supply the parent node as the
context to the function.</p>
<dl>
<dt>Org-brain tutor code</dt>
<dd><a href="https://github.com/semiosis/pen.el/blob/master/pen-brain.el#L98">https://github.com/semiosis/pen.el/blob/master/pen-brain.el#L98</a></dd>
</dl>
<p>The prompt function calls a simple shell script (<code>openai-complete.sh</code>) which sends the final templated prompt to the OpenAI API.</p>
<p>This can be substituted for other completers such as GPT-j.</p>
<dl>
<dt><code>openai-complete.sh</code></dt>
<dd><a href="https://github.com/semiosis/pen.el/blob/master/scripts/openai-complete.sh">https://github.com/semiosis/pen.el/blob/master/scripts/openai-complete.sh</a></dd>
</dl>
<p><code>pen-tutor-mode-assist</code> is another example of using the same prompt function.</p>
<p><code>M-x pen-tutor-mode-assist</code>, enter your query and have the answer displayed in a new buffer.</p>
<dl>
<dt>Code</dt>
<dd><a href="http://github.com/semiosis/pen.el/blob/master/pen-contrib.el">http://github.com/semiosis/pen.el/blob/master/pen-contrib.el</a></dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun pen-tutor-mode-assist (query)
  (interactive (let* ((bl (buffer-language <span style="color:#66d9ef">t</span> <span style="color:#66d9ef">t</span>)))
                 (<span style="color:#a6e22e">list</span>
                  (read-string-hist
                   (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;asktutor (&#34;</span> bl <span style="color:#e6db74">&#34;): &#34;</span>)
                   (my/thing-at-point)))))
  (pen-pf-asktutor bl bl query))</code></pre></td></tr></table>
</div>
</div>
<h2 id="original-shell-script-cq">Original <code>shell</code> script, <code>cq</code></h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

topic<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
test -n <span style="color:#e6db74">&#34;</span>$topic<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">1</span>
shift

task<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
test -n <span style="color:#e6db74">&#34;</span>$task<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">1</span>

openai-complete code-snippet.prompt <span style="color:#e6db74">&#34;</span>$topic<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$task<span style="color:#e6db74">&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="converting-above-into-elisp-together-with-a-prompt-function">Converting above into elisp together with a prompt function</h3>
<p><code>pen-pf-cq</code> is generated from a <code>.prompt</code> file (<a href="http://github.com/semiosis/prompts/blob/master/prompts/code-snippet.prompt">http://github.com/semiosis/prompts/blob/master/prompts/code-snippet.prompt</a>).</p>
<p>Documentation for generated function:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">pen-pf-cq is an alias for ‘pen-pf-code-snippet-from-natural-language’
in ‘pen-example-config.el’.

(pen-pf-cq LANGUAGE TASK)

code snippet from natural language
Get a bash one liner from natural langauge
future-titles:- Get code snippet
- Get snippet</code></pre></td></tr></table>
</div>
</div>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/foNqrgSZLJcDPDsaqanffOJSY" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/foNqrgSZLJcDPDsaqanffOJSY.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/foNqrgSZLJcDPDsaqanffOJSY.js" id="asciicast-foNqrgSZLJcDPDsaqanffOJSY" async></script>
<h2 id="right-click-context-click-menu"><code>right-click-context-click-menu</code></h2>
<p>This is an example of connecting a prompt function to <code>right-click-context-menu</code>.</p>
<p>GPT language models are capable of classification as well as generation.</p>
<p>Classification is just a downstream task of generation, it seems.</p>
<dl>
<dt>Right click menu code</dt>
<dd><a href="https://github.com/semiosis/pen.el/blob/master/pen-right-click-menu.el#L126">https://github.com/semiosis/pen.el/blob/master/pen-right-click-menu.el#L126</a></dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(<span style="color:#e6db74">&#34;GPT-3: Convert Haskell to Clojure&#34;</span>
 :call pen-pf-translate-haskell-to-clojure
 :if (gpt-test-haskell))
(<span style="color:#e6db74">&#34;pen (code)&#34;</span>
 (<span style="color:#e6db74">&#34;asktutor&#34;</span>
  :call pen-tutor-mode-assist
  :if (major-mode-p <span style="color:#e6db74">&#39;prog-mode</span>)))</code></pre></td></tr></table>
</div>
</div>
<h2 id="tutor-gpt-3-prompt-in-yaml">Tutor <code>GPT-3</code> prompt in <code>yaml</code></h2>
<figure>
    <img src="/ox-hugo/tutor-code.png"/> 
</figure>

]]></content>
        </item>
        
        <item>
            <title>Generate graphviz and prolog from org-brain</title>
            <link>http://semiosis.github.io/posts/generate-graphviz-and-prolog-from-org-brain/</link>
            <pubDate>Thu, 06 May 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/generate-graphviz-and-prolog-from-org-brain/</guid>
            <description>Summary I would like to be creating graphs interactively with org-brain and then using them to generate graphviz, plantuml and mermaid diagrams, and also knowledge bases with prolog.
Why Prolog? Prolog is incredibly useful for querying KBs. If I plan on working for a large corporation with their own ontologies and knowledge graphs, then I will want to be skilled with Prolog.
Graphviz  --  A generated graphviz neato diagram This has been generated from an org-brain.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I would like to be creating graphs
interactively with <code>org-brain</code> and then using
them to generate graphviz, plantuml and
mermaid diagrams, and also knowledge bases with prolog.</p>
<p>Why Prolog? Prolog is incredibly useful for
querying KBs. If I plan on working for a large
corporation with their own ontologies and
knowledge graphs, then I will want to be
skilled with Prolog.</p>
<h2 id="graphviz">Graphviz</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/9CPWDAd1ZR4azTOxyXEosNOUr" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/9CPWDAd1ZR4azTOxyXEosNOUr.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/9CPWDAd1ZR4azTOxyXEosNOUr.js" id="asciicast-9CPWDAd1ZR4azTOxyXEosNOUr" async></script>
<h3 id="a-generated-graphviz-neato-diagram">A generated graphviz <code>neato</code> diagram</h3>
<p>This has been generated from an <code>org-brain</code>.</p>
<p>It shows only the headings.</p>
<figure>
    <img src="/ox-hugo/brain-billboard-gv.png"/> 
</figure>

<h3 id="elisp">elisp</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">81
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defvar org-brain-visited-ht)

(defun org-brain-recursive-associates-visited (entry max-level <span style="color:#66d9ef">&amp;optional</span> func)
  <span style="color:#e6db74">&#34;Return a tree of ENTRY and its (grand)associates up to MAX-LEVEL.
</span><span style="color:#e6db74">Apply FUNC to each tree member. FUNC is a function which takes an
</span><span style="color:#e6db74">entry as the only argument. If FUNC is nil or omitted, get the
</span><span style="color:#e6db74">raw entry data.
</span><span style="color:#e6db74">Also stop descending if a node has been visited before.
</span><span style="color:#e6db74">&#34;</span>
  (let ((en (org-brain-entry-name entry)))
    (if (not (and (ht-contains? org-brain-visited-ht (sxhash-equal en))))
        (<span style="color:#a6e22e">cons</span> (<span style="color:#a6e22e">funcall</span> (or func <span style="color:#a6e22e">#&#39;identity</span>) entry)
              (when (<span style="color:#a6e22e">&gt;</span> max-level <span style="color:#ae81ff">0</span>)
                (ht-set org-brain-visited-ht (sxhash-equal en) <span style="color:#66d9ef">t</span>)
                (<span style="color:#a6e22e">mapcar</span> (lambda (x) (org-brain-recursive-associates-visited x (<span style="color:#a6e22e">1-</span> max-level) func))
                        (org-brain-associates entry)))))))

(defun org-brain-to-dot-associates (<span style="color:#66d9ef">&amp;optional</span> depth)
  (interactive (<span style="color:#a6e22e">list</span> (string-to-int (read-string-hist <span style="color:#e6db74">&#34;depth: &#34;</span> <span style="color:#e6db74">&#34;5&#34;</span> <span style="color:#66d9ef">nil</span> <span style="color:#ae81ff">5</span>))))

  (if (not depth)
      (setq depth <span style="color:#ae81ff">5</span>))

  (let* ((recurfun <span style="color:#e6db74">&#39;org-brain-recursive-associates-visited</span>)
         (tre
          (-flatten
           (progn
             (setq org-brain-visited-ht (<span style="color:#a6e22e">make-hash-table</span>))
             (<span style="color:#a6e22e">funcall</span> recurfun
                      (org-brain-current-entry) depth
                      (lambda (e)
                        (let* ((n (org-brain-entry-name e))
                               (fs (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;org-brain-entry-name</span> (org-brain-friends e)))
                               (cs (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;org-brain-entry-name</span> (org-brain-children e))))
                          (<span style="color:#a6e22e">list</span>
                           <span style="color:#75715e">;; (concat &#34;[&#34; n &#34;]&#34;)</span>
                           (if fs
                               (loop for f in fs
                                     collect
                                     (<span style="color:#a6e22e">list</span> (<span style="color:#a6e22e">concat</span> (e/q n) <span style="color:#e6db74">&#34; -&gt; &#34;</span> (e/q f))
                                           (<span style="color:#a6e22e">concat</span> (e/q f) <span style="color:#e6db74">&#34; -&gt; &#34;</span> (e/q n))))
                             <span style="color:#75715e">;; &#34;FRIENDS&#34;</span>
                             )
                           (if cs
                               (loop for c in cs
                                     collect
                                     (<span style="color:#a6e22e">concat</span> (e/q n) <span style="color:#e6db74">&#34; -&gt; &#34;</span> (e/q c)))
                             <span style="color:#75715e">;; &#34;CHILDREN&#34;</span>
                             )))
                        <span style="color:#75715e">;; (list (org-brain-entry-name e)</span>
                        <span style="color:#75715e">;;       (org-brain-friends e))</span>
                        ))))))

    (nbfs (snc <span style="color:#e6db74">&#34;uniqnosort&#34;</span> (list2str tre)) <span style="color:#66d9ef">nil</span> <span style="color:#e6db74">&#39;graphviz-dot-mode</span>))

  <span style="color:#75715e">;; (etv (pp-to-string (org-brain-recursive-children (org-brain-current-entry) 10 &#39;org-brain-entry-name)))</span>

  <span style="color:#75715e">;; (loop for c in t)</span>
  )

(defun dot-digraph ()
  (interactive)
  (let* ((td (snc <span style="color:#e6db74">&#34;td&#34;</span>))
         (f (snc (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;cd &#34;</span> (e/q td) <span style="color:#e6db74">&#34;; dot-digraph -norg&#34;</span>) (region-or-buffer-string)))
         (fp (<span style="color:#a6e22e">concat</span> td f)))
    (my/copy fp)
    (if (interactive-p)
        (if (yn <span style="color:#e6db74">&#34;show?&#34;</span>)
            (sps (cmd <span style="color:#e6db74">&#34;o&#34;</span> fp))))))

(defun neato-digraph ()
  (interactive)
  (let* ((td (snc <span style="color:#e6db74">&#34;td&#34;</span>))
         (f (snc (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;cd &#34;</span> (e/q td) <span style="color:#e6db74">&#34;; neato-digraph -norg&#34;</span>) (region-or-buffer-string)))
         (fp (<span style="color:#a6e22e">concat</span> td f)))
    (my/copy fp)
    (if (interactive-p)
        (if (yn <span style="color:#e6db74">&#34;show?&#34;</span>)
            (sps (cmd <span style="color:#e6db74">&#34;o&#34;</span> fp))))))

(provide <span style="color:#e6db74">&#39;my-graphviz</span>)</code></pre></td></tr></table>
</div>
</div>
<h3 id="shell">shell</h3>
<p><code>dot-digraph</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

read -r -d <span style="color:#e6db74">&#39;&#39;</span> dotcode <span style="color:#e6db74">&lt;&lt;HEREDOC
</span><span style="color:#e6db74"># graph [style=filled,color=lightgrey,label=subgraph];
</span><span style="color:#e6db74">graph [style=filled,color=lightgrey];
</span><span style="color:#e6db74"># node [style=filled,color=white,shape=circle,fontsize=8,fixedsize=true,width=0.9];
</span><span style="color:#e6db74">node [style=filled,fillcolor=white,shape=circle];
</span><span style="color:#e6db74"># edge [fontsize=8];
</span><span style="color:#e6db74"># rankdir=LR;
</span><span style="color:#e6db74"># size=&#34;6,6&#34;;
</span><span style="color:#e6db74">HEREDOC</span>

<span style="color:#f92672">{</span>
    echo <span style="color:#e6db74">&#34;digraph Q {&#34;</span>
    echo <span style="color:#e6db74">&#34;</span>$dotcode<span style="color:#e6db74">&#34;</span>
    awk1
    echo <span style="color:#e6db74">&#34;}&#34;</span>
<span style="color:#f92672">}</span> | dot-png <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span></code></pre></td></tr></table>
</div>
</div>
<p><code>dot-png</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

do_org_output<span style="color:#f92672">=</span>y
<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -norg<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        do_org_output<span style="color:#f92672">=</span>n
        shift
    <span style="color:#f92672">}</span>
    ;;

    -org<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        do_org_output<span style="color:#f92672">=</span>y
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

is_tty<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    <span style="color:#f92672">[[</span> -t <span style="color:#ae81ff">1</span> <span style="color:#f92672">]]</span>
<span style="color:#f92672">}</span>

stdin_exists<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    ! <span style="color:#f92672">[</span> -t <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>
<span style="color:#f92672">}</span>

tf_dot<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>tf dot<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#75715e"># trap &#34;rm \&#34;$tf_dot\&#34; 2&gt;/dev/null&#34; 0</span>

<span style="color:#75715e"># cat &gt; &#34;$tf_dot&#34;</span>

fn<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$tf_dot<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span>
dn<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>dirname <span style="color:#e6db74">&#34;</span>$tf_dot<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span>
ext<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>fn##*.<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
mant<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>fn%.*<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>


nf<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>mant<span style="color:#e6db74">}</span><span style="color:#e6db74">.png&#34;</span>
<span style="color:#75715e"># echo &#34;$nf&#34; | tv &amp;&gt;/dev/null</span>

<span style="color:#66d9ef">if</span> test -n <span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
    nf<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">.png&#34;</span>
    shift
<span style="color:#66d9ef">fi</span>

<span style="color:#66d9ef">if</span> is_tty; <span style="color:#66d9ef">then</span>
    dot -q -T png <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$tf_dot<span style="color:#e6db74">&#34;</span> &gt; <span style="color:#e6db74">&#34;</span>$nf<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">else</span>
    <span style="color:#75715e"># echo &#34;$nf&#34; | tv &amp;&gt;/dev/null</span>
    dot -q -T png <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$tf_dot<span style="color:#e6db74">&#34;</span> &gt; <span style="color:#e6db74">&#34;</span>$nf<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

<span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$do_org_output<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;y&#34;</span>; <span style="color:#66d9ef">then</span>
    echo -n <span style="color:#e6db74">&#34;[[file:</span>$nf<span style="color:#e6db74">]]&#34;</span>
<span style="color:#66d9ef">else</span>
    echo -n <span style="color:#e6db74">&#34;</span>$nf<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="prolog">Prolog</h2>
<h2 id="mermaid">Mermaid</h2>
<h2 id="plantuml">PlantUML</h2>
]]></content>
        </item>
        
        <item>
            <title>Network exploration with nmap and emacs</title>
            <link>http://semiosis.github.io/posts/network-exploration-with-nmap-and-emacs/</link>
            <pubDate>Wed, 05 May 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/network-exploration-with-nmap-and-emacs/</guid>
            <description>Summary I create some scripts based on nmap for network exploration. I then make user interfaces for their output based on tabulated-list-mode. I create some bindings to operate on the tabulated nmap output.
Demo  --  Scripts nmap wrapper 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  #!</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I create some scripts based on <code>nmap</code> for network exploration.
I then make user interfaces for their output based on <code>tabulated-list-mode</code>.
I create some bindings to operate on the tabulated <code>nmap</code> output.</p>
<h2 id="demo">Demo</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/hEn3dOYCxpfi0YNqZppQuesq6" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/hEn3dOYCxpfi0YNqZppQuesq6.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/hEn3dOYCxpfi0YNqZppQuesq6.js" id="asciicast-hEn3dOYCxpfi0YNqZppQuesq6" async></script>
<h2 id="scripts">Scripts</h2>
<h3 id="nmap-wrapper"><code>nmap</code> wrapper</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

<span style="color:#75715e"># https://hackertarget.com/nmap-cheatsheet-a-quick-reference-guide/</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -csv<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        csv_output<span style="color:#f92672">=</span>y
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

test -f <span style="color:#e6db74">&#34;/usr/bin/nmap&#34;</span> <span style="color:#f92672">&amp;&amp;</span> : <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>bin:=<span style="color:#e6db74">&#34;/usr/bin/nmap&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

test -f <span style="color:#e6db74">&#34;</span>$bin<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> agi nmap &amp;&gt;/dev/null

<span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$csv_output<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;y&#34;</span>; <span style="color:#66d9ef">then</span>
    out<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>0&lt;/dev/null tf csv<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    <span style="color:#e6db74">&#34;</span>$bin<span style="color:#e6db74">&#34;</span> -oX <span style="color:#e6db74">&#34;</span>$out<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> &amp;&gt;/dev/null
    cat <span style="color:#e6db74">&#34;</span>$out<span style="color:#e6db74">&#34;</span> | nmap-xml2csv | pavd <span style="color:#75715e"># pa -E &#34;tf csv | xa fpvd&#34;</span>
<span style="color:#66d9ef">else</span>
    <span style="color:#e6db74">&#34;</span>$bin<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>  | pavd <span style="color:#75715e"># pa -E &#34;tf csv | xa fpvd&#34;</span>
<span style="color:#66d9ef">fi</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="nmap-s"><code>nmap-s</code></h3>
<p>Scripts for <code>nmap</code>.</p>
<p>Symlink to <code>list-current-subnet-computers-details</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

sn<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

list_ip_range_for_subnet<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    cidr<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
    : <span style="color:#e6db74">${</span>cidr:=<span style="color:#e6db74">&#34;192.168.1.0/24&#34;</span><span style="color:#e6db74">}</span>

    <span style="color:#75715e"># $HOME/notes2018/ws/ip-networking/cidr.org</span>

    nmap -sL -n <span style="color:#e6db74">&#34;</span>$cidr<span style="color:#e6db74">&#34;</span> | grep <span style="color:#e6db74">&#39;Nmap scan report for&#39;</span> | cut -f <span style="color:#ae81ff">5</span> -d <span style="color:#e6db74">&#39; &#39;</span>
    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>
<span style="color:#f92672">}</span>

list_connected_raspberry_pi_dcbc<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    nmap-s list_all_ssh_ips_for_subnet 192.168.1.1/24
<span style="color:#f92672">}</span>

list_current_subnet_computers_details<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    oci -t <span style="color:#ae81ff">600</span> -E <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cmd-nice nmap -csv -sT -F <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>i gateway<span style="color:#66d9ef">)</span><span style="color:#e6db74">/24&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> | pavd

    <span style="color:#75715e"># n-list-open-ports -F localhost</span>
    <span style="color:#75715e"># list-ips-for-current-network</span>
<span style="color:#f92672">}</span>

list_ips_for_current_network<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    <span style="color:#75715e"># list_all_ssh_ips_for_subnet &#34;$(i gateway)/24&#34;</span>
    list_all_ips_for_subnet <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>i gateway<span style="color:#66d9ef">)</span><span style="color:#e6db74">/24&#34;</span>
<span style="color:#f92672">}</span>

list_all_ips_for_subnet<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    cidr<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
    : <span style="color:#e6db74">${</span>cidr:=<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ci -t <span style="color:#ae81ff">600</span> i gateway<span style="color:#66d9ef">)</span><span style="color:#e6db74">/24&#34;</span><span style="color:#e6db74">}</span>

    nmap -sn <span style="color:#e6db74">&#34;</span>$cidr<span style="color:#e6db74">&#34;</span> | sed 1d | paste -s -d<span style="color:#e6db74">&#39; \n&#39;</span> | sed <span style="color:#e6db74">&#39;$d&#39;</span> | grep <span style="color:#e6db74">&#34;Host is up&#34;</span> | rosie-ips

    <span style="color:#75715e"># nmap -sn &#34;$cidr&#34; | aatr &#34;\n\n&#34; &#34;tr &#39;\n&#39; _ | eipct -E $(aqf &#34;grep -q open&#34;) | tr _ &#39;\n&#39;&#34; | rosie-ips</span>
<span style="color:#f92672">}</span>

list_all_ssh_ips_for_subnet<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    <span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
        <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
        -p<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
            port<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
            shift
            shift
        <span style="color:#f92672">}</span>
        ;;

        *<span style="color:#f92672">)</span> break;
    <span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

    : <span style="color:#e6db74">${</span>port:=<span style="color:#e6db74">&#34;22&#34;</span><span style="color:#e6db74">}</span>

    cidr<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
    : <span style="color:#e6db74">${</span>cidr:=<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ci -t <span style="color:#ae81ff">600</span> i gateway<span style="color:#66d9ef">)</span><span style="color:#e6db74">/24&#34;</span><span style="color:#e6db74">}</span>

    nmap -p <span style="color:#e6db74">&#34;</span>$port<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$cidr<span style="color:#e6db74">&#34;</span> | aatr <span style="color:#e6db74">&#34;\n\n&#34;</span> <span style="color:#e6db74">&#34;tr &#39;\n&#39; _ | eipct -E </span><span style="color:#66d9ef">$(</span>aqf <span style="color:#e6db74">&#34;grep -q open&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74"> | tr _ &#39;\n&#39;&#34;</span> | rosie-ips
<span style="color:#f92672">}</span>

nmap_s<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    eval <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
<span style="color:#f92672">}</span>

f_from_sn<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    tr - _
<span style="color:#f92672">}</span>

eval <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$sn<span style="color:#e6db74">&#34;</span> | tr - _<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="emacs-lisp">emacs lisp</h2>
<h3 id="add-to-my-server-suggest-dot-el-dot">Add to <code>my-server-suggest.el</code>.</h3>
<dl>
<dt>Article explaining this</dt>
<dd><a href="https://mullikine.github.io/posts/auto-suggest-tooling-to-handle-ports-on-a-network/">Auto-suggest tooling to handle ports on a network // Bodacious Blog</a></dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defset server-command-tuples <span style="color:#f92672">&#39;</span>((<span style="color:#ae81ff">22</span> <span style="color:#f92672">.</span> ((sps (cmd <span style="color:#e6db74">&#34;zrepl&#34;</span> <span style="color:#e6db74">&#34;ssh&#34;</span> <span style="color:#e6db74">&#34;-o&#34;</span> <span style="color:#e6db74">&#34;BatchMode=no&#34;</span>
                                                 hn <span style="color:#e6db74">&#34;-p&#34;</span> port))
                                       (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;sql-mysql</span>)))
                                (<span style="color:#ae81ff">80</span> <span style="color:#f92672">.</span> ((chrome (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;http://&#34;</span> hn <span style="color:#e6db74">&#34;:&#34;</span> port))))
                                (<span style="color:#ae81ff">443</span> <span style="color:#f92672">.</span> ((chrome (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;https://&#34;</span> hn <span style="color:#e6db74">&#34;:&#34;</span> port))))
                                (<span style="color:#ae81ff">3306</span> <span style="color:#f92672">.</span> ((<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;connect-to-mysql</span>)
                                         (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;sql-mysql</span>)))
                                (<span style="color:#ae81ff">5432</span> <span style="color:#f92672">.</span> ((connect-to-postgres hn port <span style="color:#e6db74">&#34;admin&#34;</span> <span style="color:#e6db74">&#34;main&#34;</span> <span style="color:#e6db74">&#34;admin&#34;</span>)
                                         (connect-to-postgres hn port <span style="color:#e6db74">&#34;ahungry&#34;</span> <span style="color:#e6db74">&#34;ahungry&#34;</span> <span style="color:#e6db74">&#34;ahungry&#34;</span>)
                                         (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;connect-to-postgres</span>)
                                         (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;sql-postgres</span>)))))</code></pre></td></tr></table>
</div>
</div>
<h3 id="add-subnetscan-to-the-tabulated-list-mode">Add <code>subnetscan</code> to the tabulated list mode</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defset my-tablist-mode-tuples
  <span style="color:#f92672">&#39;</span>((<span style="color:#e6db74">&#34;list-venv-dirs-csv&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;venv&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;30 40 20&#34;</span>))
    (<span style="color:#e6db74">&#34;n-list-open-ports&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;ports&#34;</span> <span style="color:#66d9ef">t</span>))
    (<span style="color:#e6db74">&#34;mygit-tablist&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;mygit&#34;</span> <span style="color:#66d9ef">t</span>))
    (<span style="color:#e6db74">&#34;list-current-subnet-computers-details&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;subnetscan&#34;</span> <span style="color:#66d9ef">t</span>))
    (<span style="color:#e6db74">&#34;arp-details&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;arp&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;20 20 20 20 20 20&#34;</span>))
    (<span style="color:#e6db74">&#34;list-aws-iam-policies-csv&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;aws-policies&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;30 80&#34;</span>))
    (<span style="color:#e6db74">&#34;oci prompts-details -csv&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;prompts&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;30 30 20 10 15 15 15 10&#34;</span>))
    (<span style="color:#e6db74">&#34;upd list-aws-iam-users-csv&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;aws-users&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;20 60 20&#34;</span>))))</code></pre></td></tr></table>
</div>
</div>
<h3 id="create-functions-for-the-subnetscan-tabulated-list-mode">Create functions for the <code>subnetscan</code> <code>tabulated-list</code> mode</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun server-suggest-subnet-scan (hn)
  (interactive (<span style="color:#a6e22e">list</span> tablist-selected-id))
  (if tablist-selected-id
      (server-suggest tablist-selected-id)))

(<span style="color:#a6e22e">define-key</span> subnetscan-tablist-mode-map (kbd <span style="color:#e6db74">&#34;&#39;&#34;</span>) <span style="color:#e6db74">&#39;server-suggest-subnet-scan</span>)</code></pre></td></tr></table>
</div>
</div>
<h2 id="pathfinder"><code>pathfinder</code></h2>
<dl>
<dt>Project code</dt>
<dd><a href="https://github.com/TKCERT/pathfinder">https://github.com/TKCERT/pathfinder</a></dd>
</dl>
<p>Pathfinder will make a dot graph out of <code>nmap</code>&rsquo;s traceroute output.</p>
<p>I script around pathfinder to get it to generate an ASCII dot graph from a list of hostnames.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">pathfinder mullikine.github.io semiosis.github.io</code></pre></td></tr></table>
</div>
</div>
<h3 id="demo"><code>demo</code></h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/LH9r7DsTKvlOdNJZtcceO6V6Q" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/LH9r7DsTKvlOdNJZtcceO6V6Q.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/LH9r7DsTKvlOdNJZtcceO6V6Q.js" id="asciicast-LH9r7DsTKvlOdNJZtcceO6V6Q" async></script>
<h3 id="scripts"><code>scripts</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -a<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        all<span style="color:#f92672">=</span>y
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

hn<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
test -n <span style="color:#e6db74">&#34;</span>$hn<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">1</span>

dir<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$MYGIT<span style="color:#e6db74">/TKCERT/pathfinder&#34;</span>

test -d <span style="color:#e6db74">&#34;</span>$dir<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> <span style="color:#f92672">{</span>
    cd <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>gc <span style="color:#e6db74">&#34;https://github.com/TKCERT/pathfinder&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    sudo apt-get install graphviz graphviz-dev
    plf Graph::Easy <span style="color:#75715e"># cpan</span>
    py i pygraphviz
    py i untangle
<span style="color:#f92672">}</span> &amp;&gt;/dev/null

test -d <span style="color:#e6db74">&#34;</span>$dir<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">1</span>

cd <span style="color:#e6db74">&#34;</span>$dir<span style="color:#e6db74">&#34;</span>

nm_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>oci msudo nmap -xml -sn --traceroute <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> | tf xml<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

pf_dot<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>tf dot<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># sps v &#34;$nm_fp&#34;</span>
<span style="color:#75715e">#exit</span>

<span style="color:#f92672">{</span>
    <span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$all<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;y&#34;</span>; <span style="color:#66d9ef">then</span>
        mypython pathfinder.py --destIpToNetwork -i <span style="color:#e6db74">&#34;</span>$nm_fp<span style="color:#e6db74">&#34;</span> -o <span style="color:#e6db74">&#34;</span>$pf_dot<span style="color:#e6db74">&#34;</span>
    <span style="color:#66d9ef">else</span>
        mypython pathfinder.py -i <span style="color:#e6db74">&#34;</span>$nm_fp<span style="color:#e6db74">&#34;</span> -o <span style="color:#e6db74">&#34;</span>$pf_dot<span style="color:#e6db74">&#34;</span>
    <span style="color:#66d9ef">fi</span>
<span style="color:#f92672">}</span>

cat <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>pf_dot<span style="color:#e6db74">}</span><span style="color:#e6db74">.dot&#34;</span> | show-dot | pavs</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Auto-suggest tooling to handle ports on a network</title>
            <link>http://semiosis.github.io/posts/auto-suggest-tooling-to-handle-ports-on-a-network/</link>
            <pubDate>Fri, 30 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/auto-suggest-tooling-to-handle-ports-on-a-network/</guid>
            <description>Summary Given a server (default localhost), suggest tooling to handle said ports.
For example, if you are running a postgres server, suggest pgcli (a TUI) to allow you to connect to it.
Be more intelligent than this, though.
Tools to accommodate  https://github.com/dbcli/mycli https://github.com/dbcli/pgcli  Files too somehow?  https://github.com/dbcli/litecli  elisp Detect ports shell n-list-open-ports
1 2 3 4 5 6 7 8 9 10 11 12  #!/bin/bash export TTY ( hs &amp;#34;$(basename &amp;#34;$0&amp;#34;)&amp;#34; &amp;#34;$@&amp;#34; &amp;#34;#&amp;#34; &amp;#34;&amp;lt;==&amp;#34; &amp;#34;$(ps -o comm= $PPID)&amp;#34; 0&amp;lt;/dev/null ) &amp;amp;&amp;gt;/dev/null hn=&amp;#34;$1&amp;#34; : &amp;#34;${hn:=&amp;#34;localhost&amp;#34;}&amp;#34; { echo &amp;#34;Port State Service&amp;#34; sudo nmap -sT -O &amp;#34;$hn&amp;#34; | sed &amp;#34;0,/^PORT /{d}&amp;#34; | sed &amp;#34;/^[^0-9]\\+/,\$d&amp;#34; } | sed &amp;#34;s/ \\+/,/g&amp;#34; | pavs   ports-tablist This generates a CSV.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Given a server (default localhost), suggest tooling to handle said ports.</p>
<p>For example, if you are running a postgres
server, suggest <code>pgcli</code> (a <code>TUI</code>) to allow you
to connect to it.</p>
<p>Be more intelligent than this, though.</p>
<h2 id="tools-to-accommodate">Tools to accommodate</h2>
<ul>
<li><a href="https://github.com/dbcli/mycli">https://github.com/dbcli/mycli</a></li>
<li><a href="https://github.com/dbcli/pgcli">https://github.com/dbcli/pgcli</a></li>
</ul>
<h3 id="files-too-somehow">Files too somehow?</h3>
<ul>
<li><a href="https://github.com/dbcli/litecli">https://github.com/dbcli/litecli</a></li>
</ul>
<h2 id="elisp">elisp</h2>
<h3 id="detect-ports">Detect ports</h3>
<p><span class="underline"><strong>shell</strong></span>
<code>n-list-open-ports</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

hn<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>hn:=<span style="color:#e6db74">&#34;localhost&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

<span style="color:#f92672">{</span>
echo <span style="color:#e6db74">&#34;Port State Service&#34;</span>
sudo nmap -sT -O <span style="color:#e6db74">&#34;</span>$hn<span style="color:#e6db74">&#34;</span> | sed <span style="color:#e6db74">&#34;0,/^PORT /{d}&#34;</span> | sed <span style="color:#e6db74">&#34;/^[^0-9]\\+/,\$d&#34;</span>
<span style="color:#f92672">}</span> | sed <span style="color:#e6db74">&#34;s/ \\+/,/g&#34;</span> | pavs</code></pre></td></tr></table>
</div>
</div>
<p><code>ports-tablist</code>
This generates a CSV.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

hn<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>hn:=<span style="color:#e6db74">&#34;&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

create-tablist n-list-open-ports ports t</code></pre></td></tr></table>
</div>
</div>
<p>Add to the tablist mode list.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defset my-tablist-modes-cmds-or-paths
  <span style="color:#f92672">&#39;</span>(
    <span style="color:#75715e">;; &#34;arp -a | spaces2tabs | tsv2csv&#34;</span>
    <span style="color:#e6db74">&#34;arp&#34;</span>
    <span style="color:#e6db74">&#34;prompts&#34;</span>
    <span style="color:#e6db74">&#34;ports&#34;</span>
    <span style="color:#e6db74">&#34;aws-policies&#34;</span>
    <span style="color:#e6db74">&#34;aws-users&#34;</span>
    <span style="color:#e6db74">&#34;mygit&#34;</span>)
  <span style="color:#e6db74">&#34;A list of commands or csv paths to create tablist minor modes for&#34;</span>)</code></pre></td></tr></table>
</div>
</div>
<p>Create handlers in <code>my-server-suggest.el</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defset server-command-tuples <span style="color:#f92672">&#39;</span>((sql-mysql <span style="color:#ae81ff">3306</span>)
                                (sql-postgres <span style="color:#ae81ff">5432</span>)))

(provide <span style="color:#e6db74">&#39;my-server-suggest</span>)</code></pre></td></tr></table>
</div>
</div>
<h3 id="handle-ports">Handle ports</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(require <span style="color:#e6db74">&#39;sql</span>)

<span style="color:#75715e">;; Like format but quotes string arguments</span>
<span style="color:#75715e">;; This would be nice. It would be easy to achieve in racket</span>
<span style="color:#75715e">;; (defmacro formatq (&amp;rest body)</span>
<span style="color:#75715e">;;   &#34;Do not return anything.&#34;</span>
<span style="color:#75715e">;;   ;; body</span>
<span style="color:#75715e">;;   `(progn (,@body) nil))</span>

(defun sql-mode-sps-tui ()
  (interactive)
  (if (major-mode-p <span style="color:#e6db74">&#39;sql-interactive-mode</span>)
      (cond ((<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;mysql&#34;</span> sql-product)
             (sps (<span style="color:#a6e22e">format</span> <span style="color:#e6db74">&#34;mycli -u %s --pass %s %s&#34;</span> (q sql-user) (q sql-password) (q sql-database))))
            ((<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;postgres&#34;</span> sql-product)
             (sps (<span style="color:#a6e22e">format</span> <span style="color:#e6db74">&#34;pgcli -u %s -W %s -d %s&#34;</span> (q sql-user) (q sql-password) (q sql-database)))))
    (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;need to be in sql-mode&#34;</span>)))

<span style="color:#75715e">;; export PGPASSWORD=$POSTGRES_PASSWORD</span>
  <span style="color:#75715e">;; - psql -h &#34;postgres&#34; -U &#34;$POSTGRES_USER&#34; -d &#34;$POSTGRES_DB&#34; -c &#34;SELECT &#39;OK&#39; AS status;&#34;</span>
(defun sql-mode-sps-cli ()
  (interactive)
  (if (major-mode-p <span style="color:#e6db74">&#39;sql-interactive-mode</span>)
      (cond ((<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;mysql&#34;</span> sql-product)
             <span style="color:#75715e">;; (zrepl (format &#34;mysql --user=%s --password=%s %s&#34; (q sql-user) (q sql-password) (q sql-database)))</span>
             (zreplcm (<span style="color:#a6e22e">format</span> <span style="color:#e6db74">&#34;mysql --user=%s --password=%s %s&#34;</span> (q sql-user) (q sql-password) (q sql-database))))
            ((<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;postgres&#34;</span> sql-product)
             (sps (<span style="color:#a6e22e">format</span> <span style="color:#e6db74">&#34;psql -U %s -W %s -d %s&#34;</span> (q sql-user) (q sql-password) (q sql-database)))))
    (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;need to be in sql-mode&#34;</span>)))

(<span style="color:#a6e22e">define-key</span> sql-interactive-mode-map (kbd <span style="color:#e6db74">&#34;M-i&#34;</span>) <span style="color:#e6db74">&#39;sql-mode-sps-cli</span>)
(<span style="color:#a6e22e">define-key</span> sql-interactive-mode-map (kbd <span style="color:#e6db74">&#34;M-o&#34;</span>) <span style="color:#e6db74">&#39;sql-mode-sps-tui</span>)

(provide <span style="color:#e6db74">&#39;my-sql-mode</span>)</code></pre></td></tr></table>
</div>
</div>
<h3 id="add-to-tablist-modes">Add to <code>tablist-modes</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defset my-tablist-mode-tuples
  <span style="color:#f92672">&#39;</span>((<span style="color:#e6db74">&#34;list-venv-dirs-csv&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;venv&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;30 40 20&#34;</span>))
    (<span style="color:#e6db74">&#34;n-list-open-ports&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;ports&#34;</span> <span style="color:#66d9ef">t</span>))
    (<span style="color:#e6db74">&#34;mygit-tablist&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;mygit&#34;</span> <span style="color:#66d9ef">t</span>))
    (<span style="color:#e6db74">&#34;arp-details&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;arp&#34;</span> <span style="color:#66d9ef">t</span>))
    (<span style="color:#e6db74">&#34;list-aws-iam-policies-csv&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;aws-policies&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;30 80&#34;</span>))
    (<span style="color:#e6db74">&#34;oci prompts-details -csv&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;prompts&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;30 30 20 10 15 15 15 10&#34;</span>))
    (<span style="color:#e6db74">&#34;upd list-aws-iam-users-csv&#34;</span> <span style="color:#f92672">.</span> (<span style="color:#e6db74">&#34;aws-users&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#34;20 60 20&#34;</span>))))

(defun my-start-tablist ()
  (interactive)
  (let* ((tlname (fz (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;car</span> my-tablist-mode-tuples)))
        (args
         (if (sor tlname)
             (<span style="color:#a6e22e">assoc</span> tlname my-tablist-mode-tuples)
             <span style="color:#75715e">;; (cdr (assoc tlname my-tablist-mode-tuples))</span>
           )))
    (<span style="color:#a6e22e">apply</span> <span style="color:#e6db74">&#39;create-tablist</span> args)))</code></pre></td></tr></table>
</div>
</div>
<h3 id="detect-open-ports-and-suggest">Detect open ports and suggest</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">99
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(require <span style="color:#e6db74">&#39;my-net</span>)

(defun connect-to-mysql (<span style="color:#66d9ef">&amp;optional</span> hn port user dbname pass)
  (interactive (<span style="color:#a6e22e">list</span> (read-string-hist <span style="color:#e6db74">&#34;mysql hn: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;mysql port: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;mysql user: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;mysql db: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;mysql pw: &#34;</span>)))

  (if (not (sor hn)) (setq hn <span style="color:#e6db74">&#34;localhost&#34;</span>))
  (if (not (sor port)) (setq port <span style="color:#e6db74">&#34;3306&#34;</span>))
  (if (not (sor user)) (setq user <span style="color:#e6db74">&#34;admin&#34;</span>))
  (if (not (sor dbname)) (setq dbname <span style="color:#e6db74">&#34;main&#34;</span>))
  (if (not (sor pass)) (setq pass <span style="color:#e6db74">&#34;admin&#34;</span>))

  (sps (<span style="color:#a6e22e">concat</span> (cmd
                <span style="color:#e6db74">&#34;mycli&#34;</span>
                <span style="color:#e6db74">&#34;-initcmd&#34;</span> <span style="color:#e6db74">&#34;\\d&#34;</span>
                <span style="color:#e6db74">&#34;-h&#34;</span> hn
                <span style="color:#e6db74">&#34;-p&#34;</span> port
                <span style="color:#e6db74">&#34;-D&#34;</span> dbname
                <span style="color:#e6db74">&#34;-y&#34;</span> user
                <span style="color:#e6db74">&#34;-p&#34;</span> pass)
               <span style="color:#e6db74">&#34;; pak&#34;</span>)))

(defun connect-to-postgres (<span style="color:#66d9ef">&amp;optional</span> hn port user dbname pass)
  (interactive (<span style="color:#a6e22e">list</span> (read-string-hist <span style="color:#e6db74">&#34;pg hn: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;pg port: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;pg user: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;pg db: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;pg pw: &#34;</span>)))

  (if (not (sor hn)) (setq hn <span style="color:#e6db74">&#34;localhost&#34;</span>))
  (if (not (sor port)) (setq port <span style="color:#e6db74">&#34;5432&#34;</span>))
  (if (not (sor user)) (setq user <span style="color:#e6db74">&#34;admin&#34;</span>))
  (if (not (sor dbname)) (setq dbname <span style="color:#e6db74">&#34;main&#34;</span>))
  (if (not (sor pass)) (setq pass <span style="color:#e6db74">&#34;admin&#34;</span>))

  (sps (<span style="color:#a6e22e">concat</span> (cmd
                <span style="color:#e6db74">&#34;pgcli&#34;</span>
                <span style="color:#e6db74">&#34;-pw&#34;</span> pass
                <span style="color:#e6db74">&#34;-initcmd&#34;</span> <span style="color:#e6db74">&#34;\\d&#34;</span>
                <span style="color:#e6db74">&#34;-h&#34;</span> hn
                <span style="color:#e6db74">&#34;-p&#34;</span> port
                <span style="color:#e6db74">&#34;-d&#34;</span> dbname
                <span style="color:#e6db74">&#34;-U&#34;</span> user
                <span style="color:#e6db74">&#34;-W&#34;</span>)
               <span style="color:#e6db74">&#34;; pak&#34;</span>)))

(defset server-command-tuples <span style="color:#f92672">&#39;</span>((<span style="color:#ae81ff">3306</span> <span style="color:#f92672">.</span> ((<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;connect-to-mysql</span>)
                                         (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;sql-mysql</span>)))
                                (<span style="color:#ae81ff">5432</span> <span style="color:#f92672">.</span> ((connect-to-postgres hn port <span style="color:#e6db74">&#34;admin&#34;</span> <span style="color:#e6db74">&#34;main&#34;</span> <span style="color:#e6db74">&#34;admin&#34;</span>)
                                         (connect-to-postgres hn port <span style="color:#e6db74">&#34;ahungry&#34;</span> <span style="color:#e6db74">&#34;ahungry&#34;</span> <span style="color:#e6db74">&#34;ahungry&#34;</span>)
                                         (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;connect-to-postgres</span>)
                                         (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;sql-postgres</span>)))))

(defun server-suggestions (hostname)
  (interactive (<span style="color:#a6e22e">list</span> (read-string-hist <span style="color:#e6db74">&#34;hostname: &#34;</span>)))
  (let* ((open (n-list-open-ports hostname))
         (hnopen
          (<span style="color:#a6e22e">mapcar</span>
           (lambda (tp) (-drop <span style="color:#ae81ff">1</span> tp))
           (-filter (lambda (tp) (<span style="color:#a6e22e">string-equal</span> hostname (<span style="color:#a6e22e">car</span> tp)))
                    (n-list-open-ports hostname))))
         (openmap
          (<span style="color:#a6e22e">mapcar</span>
           (lambda (tp)
             (<span style="color:#a6e22e">cons</span> (string-to-int (<span style="color:#a6e22e">car</span> tp))
                   (<span style="color:#a6e22e">cdr</span> tp)))
           hnopen))
         <span style="color:#75715e">;; (etv openmap)</span>
         (suggestions
          (flatten-once
           (-filter
            <span style="color:#e6db74">&#39;identity</span>
            (cl-loop
             for tp in
             openmap
             collect
             <span style="color:#75715e">;; https://en.wikipedia.org/wiki/Relational_algebra</span>
             (let* ((cand (<span style="color:#a6e22e">assoc</span> (<span style="color:#a6e22e">car</span> tp) server-command-tuples))
                    (hnport (<span style="color:#a6e22e">list</span> hostname (<span style="color:#a6e22e">car</span> cand)))
                    (cs (<span style="color:#a6e22e">cdr</span> cand)))
               (if cand
                   (cl-loop for subtp in cs collect
                            (<span style="color:#a6e22e">append</span> hnport subtp)))
               ))))))
    suggestions))

(defun server-suggest (hostname)
  (interactive (<span style="color:#a6e22e">list</span> (read-string-hist <span style="color:#e6db74">&#34;hostname: &#34;</span>)))
  (let* ((ss (server-suggestions hostname))
         (c (fz (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;pp-oneline</span> ss))))
    (if c
        (let* ((sel (my-eval-string (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;&#39;&#34;</span> c)))
               (hn (<span style="color:#a6e22e">car</span> sel))
               (port (str (second sel)))
               (c2 (-drop <span style="color:#ae81ff">2</span> sel)))
          (<span style="color:#a6e22e">eval</span> c2)))))</code></pre></td></tr></table>
</div>
</div>
<h2 id="testing-it-out">Testing it out</h2>
<h3 id="start-postgres-with-docker">Start postgres with docker</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">docker <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    run <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    --rm <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -p 5432:5432 <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -e POSTGRES_PASSWORD<span style="color:#f92672">=</span>admin <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -e POSTGRES_USER<span style="color:#f92672">=</span>admin <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -e POSTGRES_DB<span style="color:#f92672">=</span>main <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -v <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>pwd<span style="color:#66d9ef">)</span><span style="color:#e6db74">:/</span><span style="color:#66d9ef">$(</span>pwd | slugify<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -w <span style="color:#e6db74">&#34;/</span><span style="color:#66d9ef">$(</span>pwd | slugify<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -ti <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    --entrypoint<span style="color:#f92672">=</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    postgres:alpine <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    docker-entrypoint.sh <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    postgres</code></pre></td></tr></table>
</div>
</div>
<h3 id="demo">Demo</h3>
<p>emacs will suggest programs to connect to open
ports for a host.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/qkK74e4Y4IbLSEYJm6SLOd0gm" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/qkK74e4Y4IbLSEYJm6SLOd0gm.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/qkK74e4Y4IbLSEYJm6SLOd0gm.js" id="asciicast-qkK74e4Y4IbLSEYJm6SLOd0gm" async></script>
<p>Thanks to this, I will no longer need to
remember which programs I commonly associate
with certain ports.</p>
<p>As I am browsing the network through emacs, I
will be able to click on a host and select
from suggested programs to interact with ports
on that host.</p>
]]></content>
        </item>
        
        <item>
            <title>Zero-shot NLP in Clojure</title>
            <link>http://semiosis.github.io/posts/zero-shot-nlp-in-clojure/</link>
            <pubDate>Fri, 30 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/zero-shot-nlp-in-clojure/</guid>
            <description>Original article http://gigasquidsoftware.com/blog/2021/03/15/breakfast-with-zero-shot-nlp/ Code http://github.com/mullikine/zero-shot-nlp   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  (ns zero-shot-nlp.core (:gen-class) (:require [libpython-clj2.require :refer [require-python]] [libpython-clj2.python :as py :refer [py. py.. py.-]])) (require-python &amp;#39;[transformers :bind-ns]) (require &amp;#39;[clojure.pprint :as p]) (use &amp;#39;[clojure.java.shell :only [sh]]) ;; (in-ns &amp;#39;clojure.pprint) (defn -main &amp;#34;I classify stuff.&amp;#34; [&amp;amp; args] ;; import transformers; transformers.</description>
            <content type="html"><![CDATA[<dl>
<dt>Original article</dt>
<dd><a href="http://gigasquidsoftware.com/blog/2021/03/15/breakfast-with-zero-shot-nlp/">http://gigasquidsoftware.com/blog/2021/03/15/breakfast-with-zero-shot-nlp/</a></dd>
<dt>Code</dt>
<dd><a href="http://github.com/mullikine/zero-shot-nlp">http://github.com/mullikine/zero-shot-nlp</a></dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">ns </span>zero-shot-nlp.core
  (<span style="color:#e6db74">:gen-class</span>)
  (<span style="color:#e6db74">:require</span> [libpython-clj2.require <span style="color:#e6db74">:refer</span> [require-python]]
            [libpython-clj2.python <span style="color:#e6db74">:as</span> py <span style="color:#e6db74">:refer</span> [py. py.. py.-]]))

(<span style="color:#a6e22e">require-python</span> <span style="color:#f92672">&#39;</span>[transformers <span style="color:#e6db74">:bind-ns</span>])

(<span style="color:#a6e22e">require</span> <span style="color:#f92672">&#39;</span>[clojure.pprint <span style="color:#e6db74">:as</span> p])

(<span style="color:#a6e22e">use</span> <span style="color:#f92672">&#39;</span>[clojure.java.shell <span style="color:#e6db74">:only</span> [sh]])

<span style="color:#75715e">;; (in-ns &#39;clojure.pprint)</span>

(<span style="color:#66d9ef">defn </span>-main
  <span style="color:#e6db74">&#34;I classify stuff.&#34;</span>
  [<span style="color:#f92672">&amp;</span> args]
  <span style="color:#75715e">;; import transformers; transformers.pipeline(&#34;zero-shot-classification&#34;)</span>
  (<span style="color:#66d9ef">def </span>classifier (<span style="color:#a6e22e">py.</span> transformers <span style="color:#e6db74">&#34;pipeline&#34;</span> <span style="color:#e6db74">&#34;zero-shot-classification&#34;</span>))

  (<span style="color:#66d9ef">def </span>text <span style="color:#e6db74">&#34;French Toast with egg and bacon in the center with maple syrup on top. Sprinkle with powdered sugar if desired.&#34;</span>)

  (<span style="color:#66d9ef">def </span>labels [<span style="color:#e6db74">&#34;breakfast&#34;</span> <span style="color:#e6db74">&#34;lunch&#34;</span> <span style="color:#e6db74">&#34;dinner&#34;</span>])

  (<span style="color:#66d9ef">let </span>[s (<span style="color:#a6e22e">classifier</span> text labels)
        j (<span style="color:#a6e22e">clojure.data.json/write-str</span> s)]
    (<span style="color:#a6e22e">sh</span> <span style="color:#e6db74">&#34;sh&#34;</span> <span style="color:#e6db74">&#34;-c&#34;</span> <span style="color:#e6db74">&#34;jq . | tv&#34;</span> <span style="color:#e6db74">:in</span> j)))</code></pre></td></tr></table>
</div>
</div>
<p>In python, the following syntax is used to get a classifier.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#f92672">import</span> transformers; transformers<span style="color:#f92672">.</span>pipeline(<span style="color:#e6db74">&#34;zero-shot-classification&#34;</span>)</code></pre></td></tr></table>
</div>
</div>
<p>In clojure, this is how it&rsquo;s done with the interop.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#a6e22e">py.</span> transformers <span style="color:#e6db74">&#34;pipeline&#34;</span> <span style="color:#e6db74">&#34;zero-shot-classification&#34;</span>)</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-json" data-lang="json">{
  <span style="color:#f92672">&#34;sequence&#34;</span>: <span style="color:#e6db74">&#34;French Toast with egg and bacon in the center with maple syrup on top. Sprinkle with powdered sugar if desired.&#34;</span>,
  <span style="color:#f92672">&#34;labels&#34;</span>: [
    <span style="color:#e6db74">&#34;breakfast&#34;</span>,
    <span style="color:#e6db74">&#34;lunch&#34;</span>,
    <span style="color:#e6db74">&#34;dinner&#34;</span>
  ],
  <span style="color:#f92672">&#34;scores&#34;</span>: [
    <span style="color:#ae81ff">0.989736795425415</span>,
    <span style="color:#ae81ff">0.007010197266936302</span>,
    <span style="color:#ae81ff">0.003252969356253743</span>
  ]
}</code></pre></td></tr></table>
</div>
</div>
<p>Breakfast wins.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/svXhlcT8OyXAn7KCFr1zUILYr" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/svXhlcT8OyXAn7KCFr1zUILYr.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/svXhlcT8OyXAn7KCFr1zUILYr.js" id="asciicast-svXhlcT8OyXAn7KCFr1zUILYr" async></script>]]></content>
        </item>
        
        <item>
            <title>Universal file parser and query tool in emacs</title>
            <link>http://semiosis.github.io/posts/universal-file-parser-in-emacs/</link>
            <pubDate>Thu, 29 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/universal-file-parser-in-emacs/</guid>
            <description>Summary I make a way to get a more abstract representation of any type of file or buffer in emacs utilising parsers, antlr4 in particular.
I also want to be able to query the contents of the source code.
I also want to be able to query prose programmatically.
Motivation In the past I have used ctags to get simple lists of source code components such as functions and classes. I would like to have much finer control over queries to source code.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I make a way to get a more abstract
representation of any type of file or buffer in emacs
utilising parsers, <code>antlr4</code> in particular.</p>
<p>I also want to be able to query the contents
of the source code.</p>
<p>I also want to be able to query prose programmatically.</p>
<h3 id="motivation">Motivation</h3>
<p>In the past I have used <code>ctags</code> to get simple
lists of source code components such as
functions and classes. I would like to have
much finer control over queries to source
code.</p>
<p>The reason I want an automated way of parsing
and then querying source code and prose is so
I can build tooling which automates it and be
programming at a higher abstraction level.</p>
<h3 id="external-parsers-used">External parsers used</h3>
<ul>
<li><code>antlr</code></li>
<li>GitHub <code>semantic</code></li>
<li><code>json2hcl</code></li>
<li><code>ej</code></li>
<li><code>jq</code></li>
</ul>
<h2 id="problems-encountered">Problems encountered</h2>
<p><code>antlr</code> seems to be fairly unreliable at
parsing, or at least is too pedantic for this purpose.</p>
<p>I will attempt to do this with GitHub&rsquo;s
<code>semantic</code> parser as it is designed to be a
pragmatic parser.</p>
<h2 id="demonstration">Demonstration</h2>
<h3 id="going-from-edn-to-json-to-json-schema">Going from <code>edn</code> to <code>json</code> to <code>json schema</code></h3>
<p>All I need to do is press <code>M-&amp;</code> 2 times to do this.</p>
<p>The idea is that every time you press <code>M-&amp;</code>,
it takes you to a more abstract representation
of what you are looking at.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/EYxLJ4n65VrgGGfmanUKNyrbz" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/EYxLJ4n65VrgGGfmanUKNyrbz.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/EYxLJ4n65VrgGGfmanUKNyrbz.js" id="asciicast-EYxLJ4n65VrgGGfmanUKNyrbz" async></script>
<h3 id="using-the-universal-antlr-parser">Using the universal antlr parser</h3>
<script src="https://asciinema.org/a/q7QBII745RFxIUdsBwbwVDNfl.js" id="asciicast-q7QBII745RFxIUdsBwbwVDNfl" async></script>
<h2 id="steps">Steps</h2>
<h3 id="set-up-antlr">Set up antlr</h3>
<p>Follow the setup instructions.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">curl -O https://www.antlr.org/download/antlr-4.7.1-complete.jar</code></pre></td></tr></table>
</div>
</div>
<p>Create the <code>antlr4</code> script.</p>
<p><code>antlr4</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

export CLASSPATH<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;.:</span>$HOME<span style="color:#e6db74">/local/lib/antlr-4.7.1-complete.jar:</span>$CLASSPATH<span style="color:#e6db74">&#34;</span>

sn<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$sn<span style="color:#e6db74">&#34;</span> in
    grun<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        java -Xmx500M -cp <span style="color:#e6db74">&#34;/usr/local/lib/antlr-4.7.1-complete.jar:</span>$CLASSPATH<span style="color:#e6db74">&#34;</span> org.antlr.v4.gui.TestRig <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        java -Xmx500M -cp <span style="color:#e6db74">&#34;/usr/local/lib/antlr-4.7.1-complete.jar:</span>$CLASSPATH<span style="color:#e6db74">&#34;</span> org.antlr.v4.Tool <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
    <span style="color:#f92672">}</span>
    ;;
<span style="color:#66d9ef">esac</span></code></pre></td></tr></table>
</div>
</div>
<p>Create the <code>universal-antlr-parse</code> script.</p>
<p><code>universal-antlr-parse</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

grammar_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
src<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>

stdin_exists<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    ! <span style="color:#f92672">[</span> -t <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> ! test <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>readlink /proc/$$/fd/0<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> /dev/null
<span style="color:#f92672">}</span>

<span style="color:#66d9ef">if</span> test -f <span style="color:#e6db74">&#34;</span>$src<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
    src<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$src<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

<span style="color:#66d9ef">if</span> ! test -n <span style="color:#e6db74">&#34;</span>$src<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">&amp;&amp;</span> stdin_exists; <span style="color:#66d9ef">then</span>
    src<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

<span style="color:#75715e"># grammar_fp=$MYGIT/antlr/grammars-v4/json/JSON.g4</span>

cd $MYGIT/mullikine/universal-antlr-clojure-visitor-interpreter
lein run <span style="color:#e6db74">&#34;</span>$grammar_fp<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$src<span style="color:#e6db74">&#34;</span> | pavs</code></pre></td></tr></table>
</div>
</div>
<h3 id="obtain-the-grammars">Obtain the grammars</h3>
<p><a href="https://github.com/antlr/grammars-v4">https://github.com/antlr/grammars-v4</a></p>
<h3 id="create-a-parsing-utility-in-clojure">Create a parsing utility in clojure</h3>
<dl>
<dt>Code</dt>
<dd><a href="http://github.com/mullikine/universal-antlr-clojure-visitor-interpreter">http://github.com/mullikine/universal-antlr-clojure-visitor-interpreter</a></dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">ns </span>universal-antlr-clojure-visitor-interpreter.core
  (<span style="color:#e6db74">:gen-class</span>)
  (<span style="color:#e6db74">:require</span> [clj-antlr.core <span style="color:#e6db74">:as</span> antlr]
            [clojure.pprint <span style="color:#e6db74">:as</span> pp]))

(<span style="color:#66d9ef">defn </span>-main
  <span style="color:#e6db74">&#34;I don&#39;t do a whole lot ... yet.&#34;</span>
  [<span style="color:#f92672">&amp;</span> args]
  <span style="color:#75715e">;; Use :throw? to ignore errors</span>
  (<span style="color:#66d9ef">def </span>parser (<span style="color:#a6e22e">antlr/parser</span> (first args) {<span style="color:#e6db74">:throw?</span> false}))
  (<span style="color:#a6e22e">pp/pprint</span> (<span style="color:#a6e22e">parser</span> (slurp (second args)))))</code></pre></td></tr></table>
</div>
</div>
<p><code>demo</code>: Creating a parse tree with <code>antlr</code>.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/QFTXJWTmZupXuLcLGpirm4NIl" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/QFTXJWTmZupXuLcLGpirm4NIl.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/QFTXJWTmZupXuLcLGpirm4NIl.js" id="asciicast-QFTXJWTmZupXuLcLGpirm4NIl" async></script>
<h3 id="create-an-interface-in-emacs">Create an interface in emacs</h3>
<p><code>my-file-parsers.el</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="color:#75715e">;; Mode is not enough information to determine</span>

(defun antlr-list-all-grammars ()
  (snc <span style="color:#e6db74">&#34;cd $MYGIT/antlr/grammars-v4/; find . -name &#39;*.g4&#39; | xargs -l basename | sed &#39;s/\..*//&#39;&#34;</span>))

(defun antlr-grammar-path-from-name (name)
  (let* ((cmd (<span style="color:#a6e22e">format</span>
               <span style="color:#e6db74">&#34;cd $MYGIT/antlr/grammars-v4/; find . -iname &#39;%s.g4&#39; | sed &#39;s/.\\///&#39; | head -n 1&#34;</span>
               name))
         (result (snc cmd)))
    (if (sor result)
        (umn (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;$MYGIT/antlr/grammars-v4/&#34;</span>
                     result)))))

<span style="color:#75715e">;; $MYGIT/antlr/grammars-v4/</span>

(defun get-buffer-python-version ()
  (if (<span style="color:#a6e22e">string-equal</span> (detect-language) <span style="color:#e6db74">&#34;python&#34;</span>)
      (snc (cmd <span style="color:#e6db74">&#34;vermin&#34;</span> (tf <span style="color:#e6db74">&#34;python&#34;</span> (<span style="color:#a6e22e">buffer-string</span>))))))

(defun antlr-detect-language ()
  <span style="color:#75715e">;; Detecting the language is not good enough</span>
  <span style="color:#75715e">;; Sometimes I also need to know the language version, such as python3</span>
  (let ((lang (detect-language)))
    (cond ((<span style="color:#a6e22e">string-equal</span> lang <span style="color:#e6db74">&#34;python&#34;</span>)
           (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;python&#34;</span> (get-buffer-python-version)))
          (<span style="color:#66d9ef">t</span> lang))))

<span style="color:#75715e">;; universal-antlr-parse &#34;$MYGIT/antlr/grammars-v4/json/JSON.g4&#34; &#34;[4, 5, 6]&#34;</span>
(defset file-parser-2-tuples
  <span style="color:#f92672">&#39;</span>(((major-mode-p <span style="color:#e6db74">&#39;terraform-mode</span>)
     <span style="color:#f92672">.</span> <span style="color:#e6db74">&#34;json2hcl -reverse&#34;</span>)
    ((major-mode-p <span style="color:#e6db74">&#39;json-mode</span>)
     <span style="color:#f92672">.</span> <span style="color:#e6db74">&#34;zh -j&#34;</span>)
    ((and (major-mode-p <span style="color:#e6db74">&#39;clojure-mode</span>)
          (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;edn&#34;</span> (f-ext (get-path))))
     <span style="color:#f92672">.</span> <span style="color:#e6db74">&#34;ej | jq .&#34;</span>)
    ((or (and (major-mode-p <span style="color:#e6db74">&#39;c++-mode</span>)
              (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;cpp&#34;</span> (f-ext (get-path))))
         (and (major-mode-p <span style="color:#e6db74">&#39;python-mode</span>)
              (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;py&#34;</span> (f-ext (get-path))))
         (and (major-mode-p <span style="color:#e6db74">&#39;java-mode</span>)
              (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;java&#34;</span> (f-ext (get-path))))
         (and (major-mode-p <span style="color:#e6db74">&#39;haskell-mode</span>)
              (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;hs&#34;</span> (f-ext (get-path)))))
     <span style="color:#f92672">.</span> (snc (cmd <span style="color:#e6db74">&#34;semantic-parse&#34;</span> (get-path))))
    ((sor (antlr-grammar-path-from-name (f-ext (get-path))))
     <span style="color:#f92672">.</span> (snc (cmd <span style="color:#e6db74">&#34;universal-antlr-parse&#34;</span> (antlr-grammar-path-from-name (f-ext (get-path))) (tf <span style="color:#e6db74">&#34;code&#34;</span> (selection-or-buffer-string)))))
    ((sor (antlr-grammar-path-from-name (antlr-detect-language)))
     <span style="color:#f92672">.</span> (snc (cmd <span style="color:#e6db74">&#34;universal-antlr-parse&#34;</span> (antlr-grammar-path-from-name (antlr-detect-language)) (tf <span style="color:#e6db74">&#34;code&#34;</span> (selection-or-buffer-string)))))))

(defun assoc-collect-true (al)
  (-distinct
   (-flatten
    (cl-loop
     for
     kv
     in
     al
     collect
     (if (<span style="color:#a6e22e">eval</span> (<span style="color:#a6e22e">car</span> kv)) (<span style="color:#a6e22e">cdr</span> kv))))))

(defun assoc-get-first-true (al)
  (<span style="color:#a6e22e">car</span> (assoc-collect-true al)))


<span style="color:#75715e">;; (defun get-parse-for-file (path)</span>
<span style="color:#75715e">;;   (interactive (list (current-path)))</span>

<span style="color:#75715e">;;   (assoc &#39;terraform-mode file-parser-2-tuples))</span>

(defun parse-current-buffer ()
  (interactive)

  (let ((parser
         (assoc-get-first-true file-parser-2-tuples)))
    (if parser
        (let ((parse
               (if (<span style="color:#a6e22e">stringp</span> parser)
                   (snc (<span style="color:#a6e22e">concat</span> parser <span style="color:#e6db74">&#34; 2&gt;&amp;1&#34;</span>) (<span style="color:#a6e22e">buffer-string</span>))
                 (<span style="color:#a6e22e">eval</span> parser))))
          (if (sor parse)
              (with-current-buffer
                  (nbfs
                   parse)
                (detect-language-set-mode))
            (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;No parse created&#34;</span>)))))

  <span style="color:#75715e">;; (let* (;; (p (current-path))</span>
  <span style="color:#75715e">;;        (cm major-mode)</span>
  <span style="color:#75715e">;;        (parser (assoc cm file-parser-2-tuples)))</span>
  <span style="color:#75715e">;;   (if parser</span>
  <span style="color:#75715e">;;       (let ((parse (snc (concat (cdr parser) &#34; 2&gt;&amp;1&#34;) (buffer-string))))</span>
  <span style="color:#75715e">;;         (if (sor parse)</span>
  <span style="color:#75715e">;;             (with-current-buffer</span>
  <span style="color:#75715e">;;                 (nbfs</span>
  <span style="color:#75715e">;;                  parse)</span>
  <span style="color:#75715e">;;               (detect-language-set-mode))</span>
  <span style="color:#75715e">;;           (message &#34;No parse created&#34;)))))</span>
  )

(<span style="color:#a6e22e">define-key</span> my-mode-map (kbd <span style="color:#e6db74">&#34;H-&amp;&#34;</span>) <span style="color:#e6db74">&#39;parse-current-buffer</span>)

(provide <span style="color:#e6db74">&#39;my-file-parsers</span>)</code></pre></td></tr></table>
</div>
</div>
<h2 id="parser-scripts">Parser scripts</h2>
<h3 id="semantic-parse--github-semantic"><code>semantic-parse</code> (GitHub Semantic)</h3>
<p><code>semantic-parse</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>
test -f <span style="color:#e6db74">&#34;</span>$fp<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">1</span>

rp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>realpath <span style="color:#e6db74">&#34;</span>$fp<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
bn<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$fp<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
dn<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>dirname <span style="color:#e6db74">&#34;</span>$rp<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

cwdslug<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$dn<span style="color:#e6db74">&#34;</span> | slugify<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

unbuffer docker run <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    --rm <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -v <span style="color:#e6db74">&#34;</span>$dn<span style="color:#e6db74">:/</span>$cwdslug<span style="color:#e6db74">&#34;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -w <span style="color:#e6db74">&#34;/</span>$cwdslug<span style="color:#e6db74">&#34;</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    -ti <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    --entrypoint<span style="color:#f92672">=</span> <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    docker.pkg.github.com/github/semantic/semantic:sha_248a1b3646643613960e444fe8ab6623224d47b1 <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    /usr/local/bin/semantic <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    parse <span style="color:#ae81ff">\
</span><span style="color:#ae81ff"></span>    <span style="color:#e6db74">&#34;</span>$bn<span style="color:#e6db74">&#34;</span> |
        erase-trailing-whitespace |
        pa -E <span style="color:#e6db74">&#34;tf lisp | xa orspe&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="parser-language-support">Parser language support</h2>
<h3 id="github-semantic">GitHub Semantic</h3>
<table>
<thead>
<tr>
<th>Language</th>
<th>Support</th>
</tr>
</thead>
<tbody>
<tr>
<td>Ruby</td>
<td>✓</td>
</tr>
<tr>
<td>JavaScript</td>
<td>✓</td>
</tr>
<tr>
<td>TypeScript</td>
<td>✓</td>
</tr>
<tr>
<td>Python</td>
<td>✓</td>
</tr>
<tr>
<td>Go</td>
<td>✓</td>
</tr>
<tr>
<td>PHP</td>
<td>✓</td>
</tr>
<tr>
<td>Java</td>
<td>✗</td>
</tr>
<tr>
<td>JSON</td>
<td>✓</td>
</tr>
<tr>
<td>JSX</td>
<td>✓</td>
</tr>
<tr>
<td>TSX</td>
<td>✓</td>
</tr>
<tr>
<td>CodeQL</td>
<td>✓</td>
</tr>
<tr>
<td>Haskell</td>
<td>✗</td>
</tr>
</tbody>
</table>
]]></content>
        </item>
        
        <item>
            <title>Building a Clojure environment in emacs</title>
            <link>http://semiosis.github.io/posts/building-a-clojure-environment-in-emacs/</link>
            <pubDate>Wed, 28 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/building-a-clojure-environment-in-emacs/</guid>
            <description>Summary  I install/learn some existing tooling I create some tools for missing functionality  Missing functionality  Google (semantic) search for clojure libaries / versions  clj-refactor.el lists all libraries on clojars, but you have to lexically select from that &amp;ldquo;web framework&amp;rdquo; should yield lists of web framework libraries   Require a library into a source file from the dependencies imported in project.clj  Install tools  https://github.com/clojure-emacs/clj-refactor.el  clj-refactor.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<ul>
<li>I install/learn some existing tooling</li>
<li>I create some tools for missing functionality</li>
</ul>
<h2 id="missing-functionality">Missing functionality</h2>
<ul>
<li>Google (semantic) search for clojure libaries / versions
<ul>
<li><code>clj-refactor.el</code> lists all libraries on <code>clojars</code>, but you have to lexically select from that</li>
<li>&ldquo;web framework&rdquo; should yield lists of web framework libraries</li>
</ul>
</li>
<li>Require a library into a source file from the dependencies imported in <code>project.clj</code></li>
</ul>
<h2 id="install-tools">Install tools</h2>
<ul>
<li><a href="https://github.com/clojure-emacs/clj-refactor.el">https://github.com/clojure-emacs/clj-refactor.el</a></li>
</ul>
<h3 id="clj-refactor-dot-el"><code>clj-refactor.el</code></h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/mMVFa96FeZkLVEUeANRqtgYpF" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/mMVFa96FeZkLVEUeANRqtgYpF.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/mMVFa96FeZkLVEUeANRqtgYpF.js" id="asciicast-mMVFa96FeZkLVEUeANRqtgYpF" async></script>
<h2 id="create-tools">Create tools</h2>
<h3 id="antlr4-current-buffer-parser"><code>antlr4</code> current buffer parser</h3>
<p>Using <code>antlr4</code> I would like to be able to
obtain a parse tree of the current source file
of any language and a clojure <code>repl</code> for
visiting that parse tree.</p>
<ul>
<li><a href="https://github.com/aphyr/clj-antlr">https://github.com/aphyr/clj-antlr</a></li>
</ul>
<h3 id="clojure-find-deps"><code>clojure-find-deps</code></h3>
<p>This script searches the <code>clojars</code> website for dependencies.</p>
<p>This is useful because it&rsquo;s arduous to find
libraries and the correct version to import.</p>
<p>emacs will ask if you want to search google
for appropriate libraries. This is great
because you can use any search terms, such as
&ldquo;<code>web framework</code>&rdquo; and the libraries you want
will be suggested.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
                                     <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
                                     -gl<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
                                         use_google<span style="color:#f92672">=</span>y
                                         shift
                                     <span style="color:#f92672">}</span>
                                          ;;

                                     *<span style="color:#f92672">)</span> break;
                                 <span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

query<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
query<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$query<span style="color:#e6db74">&#34;</span> | urlencode<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#f92672">{</span>
    oci elinks-dump <span style="color:#e6db74">&#34;https://clojars.org/search?q=</span>$query<span style="color:#e6db74">&#34;</span> | scrape <span style="color:#e6db74">&#34;^[a-z/]+ [0-9]+\.[0-9]+\.[0-9]+</span>$<span style="color:#e6db74">&#34;</span> | sed <span style="color:#e6db74">&#39;s/^/[/;s/ \(.*\)/ &#34;\1&#34;/;s/$/]/;&#39;</span> | awk <span style="color:#ae81ff">1</span>
    <span style="color:#66d9ef">if</span> test <span style="color:#e6db74">&#34;</span>$use_google<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;y&#34;</span>; <span style="color:#66d9ef">then</span>
        <span style="color:#75715e"># Don&#39;t do more than 3. It&#39;s too slow at the moment.</span>
        <span style="color:#75715e"># Parallelise it in the future with clojure</span>
        gl site:clojars.org <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> | head -n <span style="color:#ae81ff">5</span> | <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r line; <span style="color:#66d9ef">do</span>
            <span style="color:#f92672">(</span>
                exec 0&lt;/dev/null
                timeout <span style="color:#ae81ff">2</span> oci elinks-dump <span style="color:#e6db74">&#34;</span>$line<span style="color:#e6db74">&#34;</span>
            <span style="color:#f92672">)</span>
        <span style="color:#66d9ef">done</span> | scrape <span style="color:#e6db74">&#34;^\[[a-z/]+ \&#34;[0-9.]+\&#34;\]&#34;</span>
    <span style="color:#66d9ef">fi</span>
<span style="color:#f92672">}</span> | uniqnosort | pavs</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun clojure-find-deps (use-google <span style="color:#66d9ef">&amp;rest</span> query)
  (interactive (<span style="color:#a6e22e">list</span> (yn <span style="color:#e6db74">&#34;Use google?&#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;clojure-find-deps query: &#34;</span>)))

  (if (<span style="color:#a6e22e">&gt;=</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">4</span>)
      (setq use-google <span style="color:#66d9ef">t</span>))

  <span style="color:#75715e">;; (tv query)</span>
  (my/copy (fz (snc (<span style="color:#a6e22e">apply</span> <span style="color:#e6db74">&#39;cmd</span> <span style="color:#e6db74">&#34;clojure-find-deps&#34;</span>
                           (if use-google
                               <span style="color:#e6db74">&#34;-gl&#34;</span>)
                           (-flatten (<span style="color:#a6e22e">mapcar</span> (lambda (e) (s-split <span style="color:#e6db74">&#34; &#34;</span> e)) query)))))))</code></pre></td></tr></table>
</div>
</div>
<p>The results come out in <code>lein add</code> format.</p>
<p>Top hits for <code>routing library</code> on google.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">[compojure &#34;1.6.2&#34;]
[trail &#34;2.3.1&#34;]
[ataraxy &#34;0.4.2&#34;]
[paths &#34;0.1.1&#34;]
[trout &#34;0.1.4&#34;]
[gate &#34;0.0.19&#34;]
[treo &#34;0.2.1&#34;]
[avenue &#34;0.2.7&#34;]</code></pre></td></tr></table>
</div>
</div>
<p>Some hits for <code>web framework</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">[noir &#34;1.3.0&#34;]
[joodo &#34;2.1.0&#34;]
[borg/compojure &#34;0.3.2&#34;]
[webnf &#34;0.0.0&#34;]
[funkyweb &#34;0.1.0&#34;]
[conjure &#34;0.8.4&#34;]
[tandem &#34;0.0.2&#34;]</code></pre></td></tr></table>
</div>
</div>
<p><code>DEMO</code></p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/powkGa61fG4zttGEX723FqSeu" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/powkGa61fG4zttGEX723FqSeu.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/powkGa61fG4zttGEX723FqSeu.js" id="asciicast-powkGa61fG4zttGEX723FqSeu" async></script>
<h3 id="clojure-list-deps"><code>clojure-list-deps</code></h3>
<p>This script will find all the <code>project.clj</code>
files on my computer and parse them for their
dependencies list.</p>
<p>This makes it easy to find and add
dependencies I have used in the past.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

lf <span style="color:#e6db74">&#34;project.clj&#34;</span> | umn | awk1 | <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r line; <span style="color:#66d9ef">do</span>
    <span style="color:#f92672">(</span>
    exec 0&lt;/dev/null
    cat <span style="color:#e6db74">&#34;</span>$line<span style="color:#e6db74">&#34;</span> | bb -i <span style="color:#e6db74">&#34;(doseq [l (map str (-&gt;&gt; (read-string (clojure.string/join \&#34; \&#34; *input*)) (drop-while (complement #{:dependencies})) next first))] (println l))&#34;</span> -o 2&gt;/dev/null | cat
    <span style="color:#f92672">)</span>
<span style="color:#66d9ef">done</span> | uniqnosort</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun clojure-select-copy-dependency ()
  (interactive)
  (my/copy (fz (snc <span style="color:#e6db74">&#34;cd $NOTES; oci clojure-list-deps&#34;</span>))))</code></pre></td></tr></table>
</div>
</div>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/4gNTXRw9ifeGZ3WmSQWAdfyki" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/4gNTXRw9ifeGZ3WmSQWAdfyki.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/4gNTXRw9ifeGZ3WmSQWAdfyki.js" id="asciicast-4gNTXRw9ifeGZ3WmSQWAdfyki" async></script>
<h2 id="tidy-cider">Tidy <code>cider</code></h2>
<h3 id="automatically-run-cider-jack-in">Automatically run cider <code>jack-in</code></h3>
<ul>
<li>ignore it if it&rsquo;s already connected</li>
</ul>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun ignore-truthy (<span style="color:#66d9ef">&amp;rest</span> _arguments)
  <span style="color:#e6db74">&#34;Do nothing and return nil.
</span><span style="color:#e6db74">This function accepts any number of ARGUMENTS, but ignores them.&#34;</span>
  (interactive)
  <span style="color:#66d9ef">t</span>)

(defmacro auto-yes (<span style="color:#66d9ef">&amp;rest</span> body)
  <span style="color:#e6db74">&#34;&#34;</span>
  <span style="color:#f92672">`</span>(cl-letf (((<span style="color:#a6e22e">symbol-function</span> <span style="color:#e6db74">&#39;yes-or-no-p</span>) <span style="color:#a6e22e">#&#39;</span>ignore-truthy)
             ((<span style="color:#a6e22e">symbol-function</span> <span style="color:#e6db74">&#39;y-or-n-p</span>) <span style="color:#a6e22e">#&#39;</span>ignore-truthy))
     (progn <span style="color:#f92672">,@</span>body)))
(defmacro auto-no (<span style="color:#66d9ef">&amp;rest</span> body)
  <span style="color:#e6db74">&#34;&#34;</span>
  <span style="color:#f92672">`</span>(cl-letf (((<span style="color:#a6e22e">symbol-function</span> <span style="color:#e6db74">&#39;yes-or-no-p</span>) <span style="color:#a6e22e">#&#39;</span>ignore)
             ((<span style="color:#a6e22e">symbol-function</span> <span style="color:#e6db74">&#39;y-or-n-p</span>) <span style="color:#a6e22e">#&#39;</span>ignore))
     (progn <span style="color:#f92672">,@</span>body)))

(defvar my-do-cider-auto-jack-in <span style="color:#66d9ef">t</span>)

(defun cider-auto-jack-in ()
  <span style="color:#75715e">;; Make sure to be more precise. jack in with cljs too if it should</span>
  <span style="color:#75715e">;; j:cider-jack-in-cllj</span>
  <span style="color:#75715e">;; j:cider-jack-in-cljs</span>
  <span style="color:#75715e">;; j:cider-jack-in-clj&amp;cljs</span>

  (if my-do-cider-auto-jack-in
      (auto-no (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;cider-jack-in</span>))))

(add-hook <span style="color:#e6db74">&#39;clojure-mode-hook</span> <span style="color:#e6db74">&#39;cider-auto-jack-in</span>)</code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Add to <code>toggle-values</code></li>
</ul>
<figure>
    <img src="/ox-hugo/auto-jack-in.png"/> 
</figure>

]]></content>
        </item>
        
        <item>
            <title>Creating a clojure app with terraform and AWS Cloud</title>
            <link>http://semiosis.github.io/posts/creating-a-clojure-app-with-terraform-and-aws-cloud/</link>
            <pubDate>Tue, 27 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/creating-a-clojure-app-with-terraform-and-aws-cloud/</guid>
            <description>Summary These are the steps I have taken to automate the process of building a Web Application in Clojure and deploying said application to an AWS cluster defined by a Terraform module.
This is a work in progress.
Original article https://dzone.com/articles/deploy-a-clojure-web-application-to-aws-using-terr
I have taken steps and copied code from this article.
Design I have chosen Clojure as the language to implement the blob uploader for the following reasons:
 It is very reliable It is easy to understand REPL workflow  Live updates   One language for both the back-end and front-end It&amp;rsquo;s the language I&amp;rsquo;m growing into for most of my work It has very good support for concurrency Access to all of Java&amp;rsquo;s libraries Access to all of Python&amp;rsquo;s libraries via clj-python/libpython-clj  I was initially working with Terraform 0.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>These are the steps I have taken to automate
the process of building a Web Application in
Clojure and deploying said application to an
AWS cluster defined by a Terraform module.</p>
<p>This is a work in progress.</p>
<h2 id="original-article">Original article</h2>
<p><a href="https://dzone.com/articles/deploy-a-clojure-web-application-to-aws-using-terr">https://dzone.com/articles/deploy-a-clojure-web-application-to-aws-using-terr</a></p>
<p>I have taken steps and copied code from this article.</p>
<h2 id="design">Design</h2>
<p>I have chosen Clojure as the language to
implement the blob uploader for the following reasons:</p>
<ul>
<li>It is very reliable</li>
<li>It is easy to understand</li>
<li>REPL workflow
<ul>
<li>Live updates</li>
</ul>
</li>
<li>One language for both the back-end and front-end</li>
<li>It&rsquo;s the language I&rsquo;m growing into for most of my work</li>
<li>It has very good support for concurrency</li>
<li>Access to all of Java&rsquo;s libraries</li>
<li>Access to all of Python&rsquo;s libraries via <code>clj-python/libpython-clj</code></li>
</ul>
<p>I was initially working with <code>Terraform 0.15</code> on <code>Ubuntu 20.04</code>,
but I regressed to <code>Terraform v0.14.0-dev</code> and <code>Ubuntu 16.04</code> due to my computer breaking down.</p>
<h2 id="project-code">Project Code</h2>
<ul>
<li><a href="http://github.com/mullikine/blob-uploader-terraform">http://github.com/mullikine/blob-uploader-terraform</a></li>
<li><a href="http://github.com/mullikine/blob-uploader">http://github.com/mullikine/blob-uploader</a></li>
<li>Notes:
<ul>
<li><a href="https://github.com/mullikine/code-org-tidbits">https://github.com/mullikine/code-org-tidbits</a></li>
</ul>
</li>
</ul>
<h2 id="current-state">Current state</h2>
<h3 id="what-s-working">What&rsquo;s working</h3>
<ul>
<li>Cluster is successfully created using <code>terraform apply</code>.</li>
<li>Deployment of the web app to the cluster is working.</li>
</ul>
<h3 id="things-i-fixed-from-the-original-code">Things I fixed from the original code</h3>
<ul>
<li><code>UserData</code> and installing <code>amazon-efs-utils</code> on the Ubuntu instances.
<ul>
<li>The original code used the Amazon ECS image.</li>
</ul>
</li>
</ul>
<h3 id="what-s-not-working-yet">What&rsquo;s not working yet</h3>
<ul>
<li>So far no communication with the web app on port 3000.</li>
</ul>
<h2 id="problems-so-far">Problems so far</h2>
<ul>
<li>The computer I was using died one day into starting this project, so I&rsquo;ve had to continue
on an older computer, but it has a much older environment and is lacking many conveniences.</li>
</ul>
<h2 id="things-i-have-automated-for-the-purpose-of-this-project">Things I have automated for the purpose of this project</h2>
<ul>
<li>Terraform editor
<ul>
<li>Parsing terraform files with <code>json2hcl</code>.
<a href="https://asciinema.org/a/1lqm2POncL3NmuqmYIynRurMH">https://asciinema.org/a/1lqm2POncL3NmuqmYIynRurMH</a></li>
</ul>
</li>
<li>Diagram editing with <code>plantuml</code> for AWS infrastructure diagrams</li>
<li>Cluster creation
<ul>
<li>Ubuntu 20.04</li>
</ul>
</li>
<li>Deployment to the cluster</li>
<li>aws cli command completion</li>
<li>aws iam users and policies management in emacs
<ul>
<li>Add and remove policies from users</li>
</ul>
</li>
<li>ec2 instance management in emacs
<ul>
<li>inspect ec2 instances</li>
<li>display <code>UserData</code></li>
<li>log into instances</li>
<li>start and stop instances</li>
</ul>
</li>
<li>Clojure editing
<ul>
<li>Parsing <code>project.clj</code> with babashka to automate dependency imports.</li>
</ul>
</li>
</ul>
<h2 id="automations">Automations</h2>
<h3 id="parsing-project-dot-clj-with-babashka-to-automate-dependency-imports">Parsing <code>project.clj</code> with babashka to automate dependency imports</h3>
<p><code>clojure-list-deps</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

lf <span style="color:#e6db74">&#34;project.clj&#34;</span> | umn | awk1 | <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r line; <span style="color:#66d9ef">do</span>
    <span style="color:#f92672">(</span>
    exec 0&lt;/dev/null
    cat <span style="color:#e6db74">&#34;</span>$line<span style="color:#e6db74">&#34;</span> | bb -i <span style="color:#e6db74">&#34;(doseq [l (map str (-&gt;&gt; (read-string (clojure.string/join \&#34; \&#34; *input*)) (drop-while (complement #{:dependencies})) next first))] (println l))&#34;</span> -o 2&gt;/dev/null | cat
    <span style="color:#f92672">)</span>
<span style="color:#66d9ef">done</span> | uniqnosort</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun clojure-select-copy-dependency ()
  (interactive)
  (my/copy (fz (snc <span style="color:#e6db74">&#34;cd $NOTES; oci clojure-list-deps&#34;</span>))))</code></pre></td></tr></table>
</div>
</div>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/WT5T7OVcNYk9CENb8gVAH0DHa" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/WT5T7OVcNYk9CENb8gVAH0DHa.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/WT5T7OVcNYk9CENb8gVAH0DHa.js" id="asciicast-WT5T7OVcNYk9CENb8gVAH0DHa" async></script>
<h3 id="direnv"><code>direnv</code></h3>
<p>I have stored the actual passwords for <code>tf</code> in my
private password store, but direnv can still
retrieve them.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">curl -sfL https://direnv.net/install.sh | bash</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">export TF_VAR_aws_access_key_id<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>myrc .tf_aws_access_key_id<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
export TF_VAR_aws_secret_access_key<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>myrc .tf_aws_secret_access_key<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="automate-terraform-editor">Automate terraform editor</h3>
<p>While I am editing <code>terraform</code> or any type of document, I may
click on things that have been automatically
highlighted according to rules I specify.</p>
<p>This runs commands based on the text I selected.</p>
<p>I&rsquo;ve automated the following:</p>
<ul>
<li>Describing any <code>ami</code> used in terraform.</li>
<li>Selecting different types of instances.</li>
<li>Selecting different regions.</li>
<li>Selecting an <code>ami</code> from an owner such as Canonical.</li>
<li>Displaying terraform documention for <code>resources</code> and other things inside <code>tf</code> files.</li>
<li>migrating terraform files</li>
</ul>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/fneAXIjLJhseQhikfTRw546kQ" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/fneAXIjLJhseQhikfTRw546kQ.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/fneAXIjLJhseQhikfTRw546kQ.js" id="asciicast-fneAXIjLJhseQhikfTRw546kQ" async></script>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">125
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">126
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">127
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">128
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">129
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">130
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">131
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">132
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">133
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">134
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">135
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">136
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">137
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">138
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">139
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">140
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">141
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">142
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">143
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">144
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">145
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">146
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">147
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">148
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">149
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">150
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">151
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">152
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">153
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">154
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">155
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">156
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">157
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">158
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">159
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">160
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">161
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">162
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="color:#75715e">;; Given an external filter script, which finds substrings of a file,</span>
<span style="color:#75715e">;; buttonize those strings within in the buffer. Clicking on one of</span>
<span style="color:#75715e">;; these buttons should do something useful</span>

(defsetface filter-cmd-button-face
  <span style="color:#f92672">&#39;</span>((<span style="color:#66d9ef">t</span> :foreground <span style="color:#e6db74">&#34;#66cc00&#34;</span>
       <span style="color:#75715e">;; It&#39;s better for the glossary buttons to have no background, so normal syntax things, such as LSP highlighting can still be visible</span>
       <span style="color:#75715e">;; underline is enough</span>
       <span style="color:#75715e">;; :background &#34;#2e2e2e&#34;</span>
       :background <span style="color:#66d9ef">nil</span>
       :weight bold
       :underline <span style="color:#66d9ef">t</span>))
  <span style="color:#e6db74">&#34;Face for filter-cmd buttons.&#34;</span>)

(define-button-type <span style="color:#e6db74">&#39;filter-cmd-button</span> <span style="color:#e6db74">&#39;follow-link</span> <span style="color:#66d9ef">t</span> <span style="color:#e6db74">&#39;help-echo</span> <span style="color:#e6db74">&#34;Click to run command&#34;</span> <span style="color:#e6db74">&#39;face</span> <span style="color:#e6db74">&#39;filter-cmd-button-face</span>)

(defset filter-cmd-buttonize-2-tuples
  <span style="color:#75715e">;; Replace %q with a quoted argument</span>
  <span style="color:#f92672">&#39;</span>((<span style="color:#e6db74">&#34;scrape \&#34;\\bami-[a-z0-9]+\\b\&#34;&#34;</span> <span style="color:#e6db74">&#34;sps zrepl -cm pavit aws ec2 describe-images --image-ids %q&#34;</span>)
    <span style="color:#75715e">;; (&#34;sed -n &#39;s/.*instance_type\\s*=\\s*\&#34;\\([^\&#34;]*\\)\&#34;.*/\\1/p&#39;&#34; &#34;sps zrepl -cm pavit aws ec2 describe-instance-types --instance-types&#34;)</span>
    (<span style="color:#e6db74">&#34;sed -n &#39;s/.*instance_type\\s*=\\s*\&#34;\\([^\&#34;]*\\)\&#34;.*/\\1/p&#39;&#34;</span> <span style="color:#e6db74">&#34;sps aws-list-instance-types&#34;</span>)
    (<span style="color:#e6db74">&#34;sed -n &#39;s/\\bregion\\s*=\\s*\&#34;\\([^\&#34;]*\\)\&#34;.*/\\1/p&#39;&#34;</span> <span style="color:#e6db74">&#34;sps aws-list-regions&#34;</span>)
    <span style="color:#75715e">;; (&#34;sed -n &#39;s/.*\\bowners\\s*=\\s*\\[\&#34;\\([^\&#34;]*\\)\&#34;\\].*/\\1/p&#39;&#34; &#34;sps aws-list-image-names-from-owner&#34;)</span>
    (<span style="color:#e6db74">&#34;json2hcl -reverse | jq -r &#39;.data[].aws_ami[][][].owners[]&#39;&#34;</span> <span style="color:#e6db74">&#34;sps aws-list-image-names-from-owner&#34;</span>)
    <span style="color:#75715e">;; (&#34;sed -n &#39;s/^resource \\s*\&#34;\\([^\\\&#34;]*\\)\&#34; \&#34;[^\\\&#34;]*\&#34; *{$/\\1/p&#39;&#34; &#34;go-to-terraform-resource %q&#34;)</span>
    (<span style="color:#e6db74">&#34;scrape-terraform-resource&#34;</span> <span style="color:#e6db74">&#34;go-to-terraform-resource %q&#34;</span>)))


(add-hook <span style="color:#e6db74">&#39;terraform-mode-hook</span> <span style="color:#e6db74">&#39;make-buttons-for-all-filter-cmds</span>)


(defun remove-filter-cmd-buttons-over-region (beg end)
  (interactive <span style="color:#e6db74">&#34;r&#34;</span>)
  (remove-overlays beg end <span style="color:#e6db74">&#39;face</span> <span style="color:#e6db74">&#39;filter-cmd-button-face</span>))

(defun remove-all-filter-cmd-buttons (beg end)
  (interactive <span style="color:#e6db74">&#34;r&#34;</span>)
  (remove-filter-cmd-buttons-over-region (<span style="color:#a6e22e">point-min</span>) (<span style="color:#a6e22e">point-max</span>)))
(defalias <span style="color:#e6db74">&#39;clear-filter-cmd-buttons</span> <span style="color:#e6db74">&#39;remove-all-filter-cmd-buttons</span>)

(defun get-filter-cmd-button-data-at (p)
  (interactive (<span style="color:#a6e22e">list</span> (<span style="color:#a6e22e">point</span>)))
  (-filter
   (l (tp)
     (<span style="color:#a6e22e">apply</span> <span style="color:#e6db74">&#39;gnus-and</span> tp))
   (cl-loop
    for
    o
    in
    (<span style="color:#a6e22e">overlays-at</span> p)
    collect
    (<span style="color:#a6e22e">list</span>
     (button-get o <span style="color:#e6db74">&#39;term</span>)
     (button-get o <span style="color:#e6db74">&#39;runfunc</span>)
     (button-get o <span style="color:#e6db74">&#39;filtercmd</span>)))))

(defun filter-cmd-button-pressed (button)
  <span style="color:#e6db74">&#34;When I press a filtercmd button, it should run the button&#39;s function&#34;</span>
  (let* (
         <span style="color:#75715e">;; (term (button-get-text button))</span>
         (term (button-get button <span style="color:#e6db74">&#39;term</span>))
         (runfunc (button-get button <span style="color:#e6db74">&#39;runfunc</span>))
         (start (button-start button))
         (filtercmd (button-get button <span style="color:#e6db74">&#39;filtercmd</span>))
         (buttons-data-here (get-filter-cmd-button-data-at start)))

    (if (<span style="color:#a6e22e">&lt;</span> <span style="color:#ae81ff">1</span> (<span style="color:#a6e22e">length</span> buttons-data-here))
        (let* ((button-line (umn (fz (mnm (pp-map-line buttons-data-here)))))
               (button-tuple (if button-line
                                 (my-eval-string (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;&#39;&#34;</span> button-line))))
               (selected-button (if button-tuple
                                    (<span style="color:#a6e22e">car</span> (-filter (l (li) (and (<span style="color:#a6e22e">equal</span> (first button-tuple) (button-get li <span style="color:#e6db74">&#39;term</span>))
                                                               (<span style="color:#a6e22e">equal</span> (second button-tuple) (button-get li <span style="color:#e6db74">&#39;runfunc</span>))
                                                               (<span style="color:#a6e22e">equal</span> (third button-tuple) (button-get li <span style="color:#e6db74">&#39;filtercmd</span>))))
                                                  (<span style="color:#a6e22e">overlays-at</span> start))))))
          (if selected-button
              (progn
                (setq button selected-button)
                <span style="color:#75715e">;; (setq term (button-get-text button))</span>
                (setq term (button-get button <span style="color:#e6db74">&#39;term</span>))
                (setq runfunc (button-get button <span style="color:#e6db74">&#39;runfunc</span>))
                (setq start (button-start button))
                <span style="color:#75715e">;; filtercmd isnt used here</span>
                (setq filtercmd (button-get button <span style="color:#e6db74">&#39;filtercmd</span>))
                (setq buttons-data-here (get-filter-cmd-button-data-at start)))
            (<span style="color:#a6e22e">backward-char</span>))))
    (cond
     ((<span style="color:#a6e22e">equal</span> current-prefix-arg (<span style="color:#a6e22e">list</span> <span style="color:#ae81ff">4</span>)) (setq current-prefix-arg <span style="color:#66d9ef">nil</span>))
     ((not current-prefix-arg) (setq current-prefix-arg (<span style="color:#a6e22e">list</span> <span style="color:#ae81ff">4</span>))))

    (<span style="color:#a6e22e">funcall</span> runfunc term)))

(defun create-buttons-for-filtrate (term beg end filtercmd runfunc buttontype)
  <span style="color:#e6db74">&#34;&#34;</span>
  (if (not buttontype)
      (setq buttontype <span style="color:#e6db74">&#39;filter-cmd-button</span>))

  (<span style="color:#a6e22e">goto-char</span> beg)
  (let ((pat
         (<span style="color:#a6e22e">concat</span>
          <span style="color:#e6db74">&#34;\\(\\b\\|[. &#39;]\\|^\\)&#34;</span>
          (<span style="color:#a6e22e">regexp-quote</span> term)
          <span style="color:#e6db74">&#34;s?\\(\\b\\|[. &#39;]\\|$\\)&#34;</span>)))
    (while (<span style="color:#a6e22e">re-search-forward</span> pat end <span style="color:#66d9ef">t</span>)
      (progn
        <span style="color:#75715e">;; (message &#34;%s&#34; (concat &#34;searching forward &#34; (str (point))))</span>
        (let ((contents (match-string <span style="color:#ae81ff">0</span>))
              (beg (<span style="color:#a6e22e">match-beginning</span> <span style="color:#ae81ff">0</span>))
              (end (<span style="color:#a6e22e">match-end</span> <span style="color:#ae81ff">0</span>)))
          (make-button
           (if (<span style="color:#a6e22e">string-match</span> <span style="color:#e6db74">&#34;^[ &#39;.].*&#34;</span> contents)
               (<span style="color:#a6e22e">+</span> beg <span style="color:#ae81ff">1</span>)
             beg)
           (if (<span style="color:#a6e22e">string-match</span> <span style="color:#e6db74">&#34;.*[&#39; .]$&#34;</span> contents)
               (<span style="color:#a6e22e">-</span> end <span style="color:#ae81ff">1</span>)
             end)
           <span style="color:#e6db74">&#39;term</span> term
           <span style="color:#e6db74">&#39;runfunc</span> runfunc
           <span style="color:#e6db74">&#39;filtercmd</span> filtercmd
           <span style="color:#e6db74">&#39;action</span> <span style="color:#e6db74">&#39;filter-cmd-button-pressed</span>
           <span style="color:#e6db74">&#39;type</span> buttontype))))))


(defun make-buttons-for-filter-cmd (beg end filtercmd runcmd <span style="color:#66d9ef">&amp;optional</span> clear-first)
  <span style="color:#e6db74">&#34;Makes buttons for terms found by filter-cmd in this buffer.&#34;</span>
  (interactive (<span style="color:#a6e22e">list</span> (<span style="color:#a6e22e">point-min</span>)
                     (<span style="color:#a6e22e">point-max</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;filter-cmd: &#34;</span>)
                     (read-string-hist <span style="color:#e6db74">&#34;runcmd %s: &#34;</span>)))

  (if clear-first (remove-all-filter-cmd-buttons))

  (let* ((terms (-filter <span style="color:#e6db74">&#39;sor</span> (-uniq (str2list (snc filtercmd (region2string beg end))))))
         (runfunc (<span style="color:#a6e22e">eval</span> <span style="color:#f92672">`</span>(lambda (term) (sn
                                         (if (re-match-p <span style="color:#e6db74">&#34;%q&#34;</span> <span style="color:#f92672">,</span>runcmd)
                                             (s-replace-regexp <span style="color:#e6db74">&#34;%q&#34;</span> (q term) <span style="color:#f92672">,</span>runcmd)
                                           (<span style="color:#a6e22e">concat</span> <span style="color:#f92672">,</span>runcmd <span style="color:#e6db74">&#34; &#34;</span> (q term))))))))
    (if (not (or (major-mode-p <span style="color:#e6db74">&#39;org-modmfse</span>)
                 (major-mode-p <span style="color:#e6db74">&#39;outline-mode</span>)
                 (<span style="color:#a6e22e">string-equal</span> (<span style="color:#a6e22e">buffer-name</span>) <span style="color:#e6db74">&#34;*glossary cloud*&#34;</span>)))
        (save-excursion
          (cl-loop for term in terms do
                   (progn
                     (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;creating for %s&#34;</span> term)
                     (create-buttons-for-filtrate
                      term
                      beg end
                      <span style="color:#75715e">;; This is just to make it easy to introspect</span>
                      filtercmd
                      runfunc
                      <span style="color:#e6db74">&#39;filter-cmd-button</span>)))))))

(defun make-buttons-for-all-filter-cmds (<span style="color:#66d9ef">&amp;optional</span> clear-first)
  (interactive)
  (cl-loop for tp in filter-cmd-buttonize-2-tuples do
           (make-buttons-for-filter-cmd
            (<span style="color:#a6e22e">point-min</span>) (<span style="color:#a6e22e">point-max</span>)
            (<span style="color:#a6e22e">car</span> tp)
            (second tp)
            clear-first)))

(provide <span style="color:#e6db74">&#39;my-filter-cmd-buttonize</span>)</code></pre></td></tr></table>
</div>
</div>
<h3 id="key-management">Key management</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">aws ec2 describe-key-pairs</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#f92672">{</span>
    <span style="color:#e6db74">&#34;KeyPairs&#34;</span>: <span style="color:#f92672">[</span>
        <span style="color:#f92672">{</span>
            <span style="color:#e6db74">&#34;KeyPairId&#34;</span>: <span style="color:#e6db74">&#34;key-09fb6b77288849f3b&#34;</span>,
            <span style="color:#e6db74">&#34;KeyFingerprint&#34;</span>: <span style="color:#e6db74">&#34;f2:77:ec:1f:8c:3d:65:23:12:1a:65:70:5a:0b:6f:c6:fc:46:d4:cd&#34;</span>,
            <span style="color:#e6db74">&#34;KeyName&#34;</span>: <span style="color:#e6db74">&#34;blob_uploader_key_pair&#34;</span>,
            <span style="color:#e6db74">&#34;Tags&#34;</span>: <span style="color:#f92672">[]</span>
        <span style="color:#f92672">}</span>
    <span style="color:#f92672">]</span>
<span style="color:#f92672">}</span>
</code></pre></div><p>Because the private key isn&rsquo;t stored in AWS and can
be retrieved only when it&rsquo;s created, you can&rsquo;t
recover it later.</p>
<p>When I create the key pair, I should also
download and save the json.</p>
<h3 id="create-key">Create key</h3>
<dl>
<dt>A caveat</dt>
<dd>There is no way yet to specify a region for the cli subcommand, so this step must be done manually via the AWS console
<a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-key-pair.html">https://docs.aws.amazon.com/cli/latest/reference/ec2/create-key-pair.html</a></dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh"><span style="color:#75715e"># The would-be way to create the key</span>
aws ec2 create-key-pair --key-name blob_uploader_key_pair</code></pre></td></tr></table>
</div>
</div>
<ul>
<li>Steps automated:
<ul>
<li>Download key to ssh file when it&rsquo;s created</li>
</ul>
</li>
</ul>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">jq -r .KeyMaterial &gt; ~/.ssh/ids/AdminKey.pem</code></pre></td></tr></table>
</div>
</div>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/yIZ9z3L36dOVmr1Br90Rvm9dN" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/yIZ9z3L36dOVmr1Br90Rvm9dN.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/yIZ9z3L36dOVmr1Br90Rvm9dN.js" id="asciicast-yIZ9z3L36dOVmr1Br90Rvm9dN" async></script>
<h3 id="set-up-aws-user-accounts">Set up <code>aws</code> user accounts</h3>
<p><a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started%5Fcreate-admin-group.html">https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started%5Fcreate-admin-group.html</a></p>
<p>I have chosen to automate the process with the <code>aws</code> <code>cli</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">oci aws iam create-user --user-name Administrator
<span style="color:#75715e"># Enable console login</span>
oci aws iam create-login-profile --user-name Administrator --password <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>pwgen <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">1</span> | tee -a $NOTES/personal/passwords/aws-administrator.txt<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#75715e"># Change the pasword</span>
oci aws iam update-login-profile --user-name Administrator --password <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>pwgen <span style="color:#ae81ff">30</span> <span style="color:#ae81ff">1</span> | tee -a $NOTES/personal/passwords/aws-administrator.txt<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#75715e"># Enable programmatic access</span>
oci aws iam create-access-key --user-name Administrator &gt;&gt; $NOTES/personal/passwords/aws-administrator-programmatic.json</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">oci aws iam create-user --user-name Administrator</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#f92672">{</span>
    <span style="color:#e6db74">&#34;User&#34;</span>: <span style="color:#f92672">{</span>
        <span style="color:#e6db74">&#34;Path&#34;</span>: <span style="color:#e6db74">&#34;/&#34;</span>,
        <span style="color:#e6db74">&#34;UserName&#34;</span>: <span style="color:#e6db74">&#34;Administrator&#34;</span>,
        <span style="color:#e6db74">&#34;UserId&#34;</span>: <span style="color:#e6db74">&#34;AIDAR55HCH7KNSLMHLBLO&#34;</span>,
        <span style="color:#e6db74">&#34;Arn&#34;</span>: <span style="color:#e6db74">&#34;arn:aws:iam::132957487060:user/Administrator&#34;</span>,
        <span style="color:#e6db74">&#34;CreateDate&#34;</span>: <span style="color:#e6db74">&#34;2021-04-26T00:07:09Z&#34;</span>
    <span style="color:#f92672">}</span>
<span style="color:#f92672">}</span>
</code></pre></div><div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">AdministratorAccess</code></pre></td></tr></table>
</div>
</div>
<h3 id="select-the-administratoraccess-policy-and-add-to-administrator">Select the <code>AdministratorAccess</code> policy and add to <code>Administrator</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">oci aws iam list-policies | jq -r <span style="color:#e6db74">&#34;.Policies[] | [ .PolicyName, .Arn ] | @csv&#34;</span></code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#e6db74">&#34;AdministratorAccess&#34;</span>,<span style="color:#e6db74">&#34;arn:aws:iam::aws:policy/AdministratorAccess&#34;</span></code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Automated user and policies management with <code>tabulated-list-mode</code></dt>
<dd>Using emacs, tablist and this tool (<a href="http://harelba.github.io/q/">http://harelba.github.io/q/</a>), create tabulated list modes for managing aws.</dd>
</dl>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/g6Cc64u1p5lF9geoSmCKgwmd7" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/g6Cc64u1p5lF9geoSmCKgwmd7.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/g6Cc64u1p5lF9geoSmCKgwmd7.js" id="asciicast-g6Cc64u1p5lF9geoSmCKgwmd7" async></script>
<p>The above is a demonstration of adding the <code>AdministratorAccess</code> policy to a user account.</p>
<p><code>aws-policy-tablist</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

create-tablist list-aws-iam-policies-csv aws-policies t <span style="color:#e6db74">&#34;30 80&#34;</span></code></pre></td></tr></table>
</div>
</div>
<p><code>list-aws-iam-policies-csv</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">{</span>
echo name,arn
unbuffer oci aws iam list-policies | jq -r <span style="color:#e6db74">&#34;.Policies[] | [ .PolicyName, .Arn ] | @csv&#34;</span>
<span style="color:#f92672">}</span> | mnm | pavs</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#e6db74">&#34;AdministratorAccess&#34;</span>,<span style="color:#e6db74">&#34;arn:aws:iam::aws:policy/AdministratorAccess&#34;</span></code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">oci aws iam attach-user-policy --user-name Administrator --policy-arn <span style="color:#e6db74">&#34;arn:aws:iam::aws:policy/AdministratorAccess&#34;</span></code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>Demo of tablist modes</strong></span></p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/a0wET1hJtxz3CqANFRWuRHu8c" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/a0wET1hJtxz3CqANFRWuRHu8c.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/a0wET1hJtxz3CqANFRWuRHu8c.js" id="asciicast-a0wET1hJtxz3CqANFRWuRHu8c" async></script>
<p>I&rsquo;m making a way to manage arbitrarily many tablist modes.</p>
<h2 id="create-a-diagram-of-the-cluster">Create a diagram of the cluster</h2>
<p>Automate the process of building infra diagrams with plantuml.</p>
<p><code>:$SCRIPTS/plantuml-list-sprites</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> puml <span style="color:#e6db74">&lt;&lt;HEREDOC
</span><span style="color:#e6db74">!include &lt;awslib/AWSCommon&gt;
</span><span style="color:#e6db74">!include &lt;awslib/Compute/all.puml&gt;
</span><span style="color:#e6db74">!include &lt;awslib/mobile/all.puml&gt;
</span><span style="color:#e6db74">!include &lt;awslib/general/all.puml&gt;
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">listsprites
</span><span style="color:#e6db74">HEREDOC</span>

printf -- <span style="color:#e6db74">&#34;%s\n&#34;</span> <span style="color:#e6db74">&#34;</span>$puml<span style="color:#e6db74">&#34;</span> | plantuml | sed <span style="color:#e6db74">&#39;s/\s\+/\n/g&#39;</span> | sed <span style="color:#e6db74">&#39;/^$/d&#39;</span> | pavs</code></pre></td></tr></table>
</div>
</div>
<p>The above script lists the available <code>aws</code> sprites.</p>
<p>It&rsquo;s a standard lib (code: <a href="https://github.com/plantuml/plantuml-stdlib/tree/master/awslib">https://github.com/plantuml/plantuml-stdlib/tree/master/awslib</a>).</p>
<p>This markdown file contains a more comprehensive list of sprites.</p>
<p><a href="https://github.com/awslabs/aws-icons-for-plantuml/blob/main/AWSSymbols.md">https://github.com/awslabs/aws-icons-for-plantuml/blob/main/AWSSymbols.md</a></p>
<pre><code class="language-plantuml" data-lang="plantuml">&#39;!include &lt;tupadr3/common&gt;
&#39;!include &lt;office/Servers/application_server&gt;

!include &lt;awslib/AWSCommon&gt;
!include &lt;awslib/AWSSimplified.puml&gt;
!include &lt;awslib/Compute/all.puml&gt;
!include &lt;awslib/mobile/all.puml&gt;
!include &lt;awslib/general/all.puml&gt;
!include &lt;awslib/GroupIcons/all.puml&gt;
!include &lt;awslib/NetworkingAndContentDelivery/all.puml&gt;

skinparam linetype polyline

&#39; EC2()
ELBApplicationLoadBalancer(ALBLoadBalancer, &#34;ALB (Application Load Balancer)&#34;, &#34; &#34;)
ELBNetworkLoadBalancer(NLBLoadBalancer, &#34;NLB (Network Load Balancer)&#34;, &#34; &#34;)
EC2AutoScaling(AutoscalingGroup, &#34;Autoscaling Group&#34;, &#34; &#34;)
EC2InstancewithCloudWatch(InstanceCW, &#34;Instance with CloudWatch&#34;, &#34; &#34;)
General(App1, &#34;App&#34;, &#34; &#34;)
&#39;OFF_APPLICATION_SERVER(App1, &#34;App&#34;)
General(App2, &#34;App&#34;, &#34; &#34;)
GenericDatabase(DB, &#34;Database&#34;, &#34; &#34;)

&#39; ELBApplicationLoadBalancer
&#39; ELBNetworkLoadBalancer
ALBLoadBalancer -down-&gt; InstanceCW: Port 3000
NLBLoadBalancer -down-&gt; InstanceCW: Port 5432
AutoscalingGroup -right-&gt; InstanceCW
InstanceCW -down-&gt; App1: Port 3000
InstanceCW -down-&gt; App2: Port 3000
InstanceCW -down-&gt; DB: Port 5432</code></pre>
<figure>
    <img src="/ox-hugo/terraformclojure.svg"/> 
</figure>

<h2 id="set-up-more-tools">Set up more tools</h2>
<h3 id="set-up-saws">Set up <code>saws</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">x -sh saws -z <span style="color:#e6db74">&#34;saws&gt;&#34;</span> -s <span style="color:#e6db74">&#34;aws &#34;</span> -i</code></pre></td></tr></table>
</div>
</div>
<p>I used this to query the <code>aws</code> <code>cli</code> for arguments and options.</p>
<p>I have automated the initial entry and copying back from the REPL.</p>
<p><a href="https://asciinema.org/a/3IZcJYMYcC1q0Z8fSBrCCMO3K">https://asciinema.org/a/3IZcJYMYcC1q0Z8fSBrCCMO3K</a></p>
<h3 id="aws-fuzzy-finder"><code>aws-fuzzy-finder</code></h3>
<p>Instead of setting up the following tool, I extended emacs' <code>aws-instances</code> plugin.</p>
<p><a href="https://github.com/pmazurek/aws-fuzzy-finder">https://github.com/pmazurek/aws-fuzzy-finder</a></p>
<h2 id="cluster-successfully-created-with-terraform">Cluster successfully created with terraform</h2>
<ul>
<li>Ubuntu 20.04</li>
<li><code>t2.micro</code> (free tier)</li>
</ul>
<h3 id="first-attempt-at-terraform-apply--creating-the-cluster--failed">First attempt at <code>terraform apply</code> (creating the cluster) failed</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/Jiq2phUugU6LnPMFcYQXxl8Tc" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/Jiq2phUugU6LnPMFcYQXxl8Tc.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/Jiq2phUugU6LnPMFcYQXxl8Tc.js" id="asciicast-Jiq2phUugU6LnPMFcYQXxl8Tc" async></script>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Error: Error creating launch configuration: ValidationError: The key pair &#39;blob_uploader_key_pair&#39; does not exist
        status code: 400, request id: 42206521-5721-44ce-9a11-7bc24d1b440c

  on launch-configuration.tf line 1, in resource &#34;aws_launch_configuration&#34; &#34;ecs-launch-configuration&#34;:
   1: resource &#34;aws_launch_configuration&#34; &#34;ecs-launch-configuration&#34; {</code></pre></td></tr></table>
</div>
</div>
<h3 id="successful-terraform-apply-dot-cluster-created-dot">Successful <code>terraform apply</code>. Cluster created.</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/zrCqjoxfv1h0n6PshGRCjrBDx" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/zrCqjoxfv1h0n6PshGRCjrBDx.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/zrCqjoxfv1h0n6PshGRCjrBDx.js" id="asciicast-zrCqjoxfv1h0n6PshGRCjrBDx" async></script>
<h2 id="automate-adding-my-public-key-to-an-instance-and-ssh-into-the-box">Automate adding my public key to an instance and ssh into the box</h2>
<ul>
<li>Inspect from emacs <code>aws-instances</code></li>
<li>Get region and availability zone</li>
</ul>
<p><a href="https://aws.amazon.com/blogs/compute/new-using-amazon-ec2-instance-connect-for-ssh-access-to-your-ec2-instances/">https://aws.amazon.com/blogs/compute/new-using-amazon-ec2-instance-connect-for-ssh-access-to-your-ec2-instances/</a></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">aws ec2-instance-connect send-ssh-public-key --region us-west-1 --availability-zone us-west-1a --instance-id i-034950c831ac772a5 --instance-os-user ubuntu --ssh-public-key file://$HOME/.ssh/pub/id_rsa.pub</code></pre></td></tr></table>
</div>
</div>
<p>After running above command, for the next 60 seconds I can ssh in to the box.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">ssh -oBatchMode<span style="color:#f92672">=</span>no -vvv -i $HOME/.ssh/ids/default.pem ubuntu@ec2-3-101-73-201.us-west-1.compute.amazonaws.com</code></pre></td></tr></table>
</div>
</div>
<h3 id="i-had-to-make-some-modifications-to-the-userdata-of-launch-configuration-dot-tf">I had to make some modifications to the <code>UserData</code> of <code>launch-configuration.tf</code></h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/zaKN40J2LyMjxnR1qIetAikvQ" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/zaKN40J2LyMjxnR1qIetAikvQ.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/zaKN40J2LyMjxnR1qIetAikvQ.js" id="asciicast-zaKN40J2LyMjxnR1qIetAikvQ" async></script>
<ul>
<li>Destroy the cluster and reapply terraform to see if it works now/sticks.</li>
<li>This fixed the problem.</li>
<li>I also needed to unindent the HEREDOC for <code>user_data</code>.</li>
</ul>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>sudo mkdir -m <span style="color:#ae81ff">777</span> -p /etc/ecs; sudo chown $USER:$USER /etc/ecs
<span style="color:#75715e"># echo ECS_CLUSTER=${var.ecs_cluster} &gt;&gt; /etc/ecs/ecs.config</span>
echo ECS_CLUSTER<span style="color:#f92672">=</span><span style="color:#e6db74">${</span>var.ecs_cluster<span style="color:#e6db74">}</span> &gt;&gt; /etc/ecs/ecs.config
sudo mkdir -p /mnt/efs/postgres; sudo chown $USER:$USER /mnt/efs/postgres
cd /mnt
<span style="color:#75715e"># sudo yum install -y amazon-efs-utils</span>
<span style="color:#f92672">(</span>
sudo apt-get update
sudo apt-get -y install git binutils
sudo chmod <span style="color:#ae81ff">777</span> /mnt
git clone https://github.com/aws/efs-utils
cd efs-utils
./build-deb.sh
sudo sh -c <span style="color:#e6db74">&#39;apt-get update &amp;&amp; apt-get install stunnel4&#39;</span>
sudo apt-get -y install ./build/amazon-efs-utils*deb
<span style="color:#f92672">)</span>

<span style="color:#75715e"># I have confirmed this command works</span>
sudo mount -t efs <span style="color:#e6db74">${</span>aws_efs_mount_target.blobdbefs-mnt.0.dns_name<span style="color:#e6db74">}</span>:/ efs
<span style="color:#75715e"># sudo mount -t efs fs-3d3ad725.efs.us-west-1.amazonaws.com:/ efs</span></code></pre></td></tr></table>
</div>
</div>
<h4 id="reapply-to-see-if-it-worked">Reapply to see if it worked</h4>
<p>It takes significant time to shut down.</p>
<h3 id="automated-showing-the-userdata-of-an-instance-in-emacs">Automated showing the <code>userData</code> of an instance in emacs</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="color:#75715e">;; Make an ssh into box script</span>

(defun aws-ssh-into-box (id)
  (interactive (<span style="color:#a6e22e">list</span> (tabulated-list-get-id)))

  (if (major-mode-p <span style="color:#e6db74">&#39;aws-instances-mode</span>)
      (sps (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;aws-ssh-into-box &#34;</span> id))))

(defun aws-show-user-data (id)
  (interactive (<span style="color:#a6e22e">list</span> (tabulated-list-get-id)))

  (if (major-mode-p <span style="color:#e6db74">&#39;aws-instances-mode</span>)
      <span style="color:#75715e">;; https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html</span>
      (etv (snc (<span style="color:#a6e22e">concat</span>
                 <span style="color:#e6db74">&#34;aws ec2 describe-instance-attribute --instance-id &#34;</span>
                 id
                 <span style="color:#e6db74">&#34; --attribute userData --output text --query \&#34;UserData.Value\&#34; | base64 --decode&#34;</span>)))
    <span style="color:#75715e">;;</span>
    <span style="color:#75715e">;; (sps (concat &#34;aws-ssh-into-box &#34; id))</span>
    ))

(<span style="color:#a6e22e">define-key</span> aws-instances-mode-map (kbd <span style="color:#e6db74">&#34;;&#34;</span>) <span style="color:#e6db74">&#39;aws-ssh-into-box</span>)
(<span style="color:#a6e22e">define-key</span> aws-instances-mode-map (kbd <span style="color:#e6db74">&#34;D&#34;</span>) <span style="color:#e6db74">&#39;aws-show-user-data</span>)

(provide <span style="color:#e6db74">&#39;my-aws</span>)</code></pre></td></tr></table>
</div>
</div>
<h3 id="automate-collection-of-terraform-apply-output">Automate collection of <code>terraform apply output</code></h3>
<ul>
<li>Specifically variables
<ul>
<li>Then I can collect database of cluster states</li>
</ul>
</li>
<li>Partially done
<ul>
<li>All outputs of the <code>aws</code> and <code>terraform</code> commands are stored in a database.</li>
</ul>
</li>
</ul>
<h2 id="automate-terraform-file-migration">automate terraform file migration</h2>
<p>Terraform has auto-upgrade tooling e.g.
<code>terraform 0.12upgrade</code> but they only work
from version to consecutive version. I was
migrating older <code>tf</code> files so I made my own
migration script.</p>
<p><code>migrate-terraform</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#75715e"># Terraform has auto-upgrade tooling</span>
<span style="color:#75715e"># terraform 0.12upgrade</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -f<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        force<span style="color:#f92672">=</span>y
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

stdin_exists<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    ! <span style="color:#f92672">[</span> -t <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> ! test <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>readlink /proc/$$/fd/0<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> /dev/null
<span style="color:#f92672">}</span>

<span style="color:#75715e"># Interestingly, heredocs should not be &#39;uninterpolated&#39;</span>
<span style="color:#75715e"># sp +/&#34;container_definitions = &lt;&lt;DEFINITION&#34; &#34;$MYGIT/chrishowejones/film-ratings-terraform/film-ratings-db-task-definition.tf&#34;</span>

<span style="color:#66d9ef">if</span> stdin_exists; <span style="color:#66d9ef">then</span>
    <span style="color:#75715e"># sed &#39;/&#34;\${/{s/&#34;\${\([^}]*\)}&#34;/\1/g;s/\\&#34;/&#34;/g;s/\bvar\.//}&#39;</span>
    sed <span style="color:#e6db74">&#39;/&#34;\${/{s/&#34;\${\([^}]*\)}&#34;/\1/g;s/\\&#34;/&#34;/g;}&#39;</span> |
        sed <span style="color:#e6db74">&#39;/ \[ *&#34;[^&#34;]\+\.[^&#34;]\+&#34; *\]/{s/\[ *&#34;\([^&#34;]\+\.[^&#34;]\+\)&#34; *\]/[ \1 ]/g}&#39;</span>
<span style="color:#66d9ef">elif</span> test <span style="color:#e6db74">&#34;</span>$force<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> y <span style="color:#f92672">||</span> yn <span style="color:#e6db74">&#34;Recursively migrate?&#34;</span>; <span style="color:#66d9ef">then</span>
    find . -type f -name <span style="color:#e6db74">&#39;*.tf&#39;</span> | awk1 | <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r line; <span style="color:#66d9ef">do</span>
        <span style="color:#f92672">(</span>
        exec 0&lt;/dev/null
        cat <span style="color:#e6db74">&#34;</span>$line<span style="color:#e6db74">&#34;</span> | migrate-terraform | sponge <span style="color:#e6db74">&#34;</span>$line<span style="color:#e6db74">&#34;</span>
        <span style="color:#f92672">)</span>
    <span style="color:#66d9ef">done</span>
<span style="color:#66d9ef">fi</span></code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Exploring Neuralink concepts with GPT-3 (WIP)</title>
            <link>http://semiosis.github.io/posts/exploring-neuralink-concepts-with-gpt-3/</link>
            <pubDate>Wed, 14 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/exploring-neuralink-concepts-with-gpt-3/</guid>
            <description>This article is a work in progress.
Summary I create several org-brain repositories for exploratory learning and ideation.
1 2 3 4 5 6 7 8 9 10 11 12  billboard exploratory fungible ideation infogetics infrastructure-tooling neuralink open-source-alternatives reference thoughts tooling welfare-organisations   I then use GPT-3 to discuss topics and why they are important.
Mind terminal   Glossaries  http://github.com/mullikine/glossaries-gh/blob/master/biochemistry.txt http://github.com/mullikine/glossaries-gh/blob/master/brain-computer-interface-bci.txt http://github.com/mullikine/glossaries-gh/blob/master/neuralink.txt http://github.com/mullikine/glossaries-gh/blob/master/neuroscience.txt http://github.com/mullikine/glossaries-gh/blob/master/neural-engineering.txt http://github.com/mullikine/glossaries-gh/blob/master/gpt.txt http://github.com/mullikine/glossaries-gh/blob/master/ai-safety.txt http://github.</description>
            <content type="html"><![CDATA[<p><span class="underline"><em>This article is a work in progress.</em></span></p>
<h2 id="summary">Summary</h2>
<p>I create several <code>org-brain</code> repositories for
exploratory learning and ideation.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">billboard
exploratory
fungible
ideation
infogetics
infrastructure-tooling
neuralink
open-source-alternatives
reference
thoughts
tooling
welfare-organisations</code></pre></td></tr></table>
</div>
</div>
<p>I then use GPT-3 to discuss topics and why they are important.</p>
<h2 id="mind-terminal">Mind terminal</h2>
<figure>
    <img src="/ox-hugo/mind-terminal.gif"/> 
</figure>

<h2 id="glossaries">Glossaries</h2>
<ul>
<li><a href="http://github.com/mullikine/glossaries-gh/blob/master/biochemistry.txt">http://github.com/mullikine/glossaries-gh/blob/master/biochemistry.txt</a></li>
<li><a href="http://github.com/mullikine/glossaries-gh/blob/master/brain-computer-interface-bci.txt">http://github.com/mullikine/glossaries-gh/blob/master/brain-computer-interface-bci.txt</a></li>
<li><a href="http://github.com/mullikine/glossaries-gh/blob/master/neuralink.txt">http://github.com/mullikine/glossaries-gh/blob/master/neuralink.txt</a></li>
<li><a href="http://github.com/mullikine/glossaries-gh/blob/master/neuroscience.txt">http://github.com/mullikine/glossaries-gh/blob/master/neuroscience.txt</a></li>
<li><a href="http://github.com/mullikine/glossaries-gh/blob/master/neural-engineering.txt">http://github.com/mullikine/glossaries-gh/blob/master/neural-engineering.txt</a></li>
<li><a href="http://github.com/mullikine/glossaries-gh/blob/master/gpt.txt">http://github.com/mullikine/glossaries-gh/blob/master/gpt.txt</a></li>
<li><a href="http://github.com/mullikine/glossaries-gh/blob/master/ai-safety.txt">http://github.com/mullikine/glossaries-gh/blob/master/ai-safety.txt</a></li>
<li><a href="http://github.com/mullikine/glossaries-gh/blob/master/general-ai-agi.txt">http://github.com/mullikine/glossaries-gh/blob/master/general-ai-agi.txt</a></li>
</ul>
<h2 id="demonstration">Demonstration</h2>
<p>Future of life institute and telepathy.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/gNHRbCi7kQDT6qFRih1zvLyni" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/gNHRbCi7kQDT6qFRih1zvLyni.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/gNHRbCi7kQDT6qFRih1zvLyni.js" id="asciicast-gNHRbCi7kQDT6qFRih1zvLyni" async></script>
<h3 id="what-is-neuroengineering">What is <code>neuroengineering</code>?</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/xs8YGxIbCZ4Bpc85N2qhenoRb" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/xs8YGxIbCZ4Bpc85N2qhenoRb.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/xs8YGxIbCZ4Bpc85N2qhenoRb.js" id="asciicast-xs8YGxIbCZ4Bpc85N2qhenoRb" async></script>
<h2 id="a-paper-from-my-professor-zhiyi-huang">A paper from my professor Zhiyi Huang</h2>
<p><a href="https://link.springer.com/article/10.1007%2Fs13755-021-00142-y">https://link.springer.com/article/10.1007%2Fs13755-021-00142-y</a></p>
<h3 id="new-terms-taken-from-the-synopsis">New terms taken from the synopsis</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Crosstalk
    Unintended brain activations that
    interfere with bimanual actions and could
    also occur during motor imagery.

Bimanual coordination
    Encompasses a large class of situations in
    which the brain must simultaneously
    control multiple movements, such as when
    we use our two hands to manipulate an
    object or perform a task.

    Bimanual coordination has been one of the
    most widely studied problems in motor
    control.

Pairwise classification
    A class binarization procedure that
    converts a multi-class problem into a
    series of two-class problems, one problem
    for each pair of classes.

Motor imagery
    A dynamic state during which an individual
    mentally simulates a physical action.

    This type of phenomenal experience implies
    that the subject feels themselves
    performing the action.</code></pre></td></tr></table>
</div>
</div>
<h3 id="synopsis--tidied">Synopsis (tidied)</h3>
<p>Brain–computer interfaces (BCIs) target
specific brain activity for neuropsychological
rehabilitation, and also allow patients with
motor disabilities to control mobility and
communication devices.</p>
<p>Motor imagery of single-handed actions is used
in BCIs but many users cannot control the BCIs
effectively, limiting applications in the
health systems.</p>
<p>Crosstalk is unintended brain activations that
interfere with bimanual actions and could also
occur during motor imagery.</p>
<p>To test if crosstalk impaired BCI user
performance, we recorded EEG in 46
participants while they imagined movements in
four experimental conditions using motor
imagery: left hand (L), right hand (R), tongue
(T) and feet (F).</p>
<p>Pairwise classification accuracies of the
tasks were compared (LR, LF, LT, RF, RT, FT),
using common spatio-spectral filters and
linear discriminant analysis.</p>
<p>We hypothesized that LR classification
accuracy would be lower than every other
combination that included a hand imagery due
to crosstalk.</p>
<p>As predicted, classification accuracy for LR
(58%) was reliably the lowest.</p>
<p>Interestingly, participants who showed poor LR
classification also demonstrated at least one
good TR, TL, FR or FL classification; and good
LR classification was detected in 16% of the
participants.</p>
<p>For the first time, we showed that crosstalk
occurred in motor imagery, and affected BCI
performance negatively.</p>
<p>Such effects are effector-sensitive regardless
of the BCI methods used; and likely not
apparent to the user or the BCI developer.</p>
<p>This means that tasks choice is crucial when
designing BCI.</p>
<p>Critically, the effects of crosstalk appear
mitigatable.</p>
<p>We conclude that understanding crosstalk
mitigation is important for improving BCI
applicability.</p>
<h2 id="scrape-the-neuralink-website-for-youtube-videos">Scrape the neuralink website for youtube videos</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">cd <span style="color:#e6db74">&#34;</span>$DUMP<span style="color:#e6db74">/programs/httrack/mirrors/-r6-https-neuralink-com-&#34;</span>
anygrep rosie-urls | grep youtube.com | oc -u | pavs</code></pre></td></tr></table>
</div>
</div>
<p><a id="code-snippet--neuralink-website-vids"></a></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#f92672">[[</span>https://www.youtube.com/watch?v<span style="color:#f92672">=</span>DVvmgjBL74w<span style="color:#f92672">][</span>Neuralink Progress Update, Summer <span style="color:#ae81ff">2020</span> - YouTube<span style="color:#f92672">]]</span>
<span style="color:#f92672">[[</span>https://www.youtube.com/watch?v<span style="color:#f92672">=</span>rsCul1sp4hQ<span style="color:#f92672">][</span>Monkey MindPong - YouTube<span style="color:#f92672">]]</span>
<span style="color:#f92672">[[</span>https://www.youtube.com/watch?v<span style="color:#f92672">=</span>iSutodqCZ74<span style="color:#f92672">][</span>Snout Boops - YouTube<span style="color:#f92672">]]</span>
<span style="color:#f92672">[[</span>https://www.youtube.com/watch?v<span style="color:#f92672">=</span>LgJpYOTll8U<span style="color:#f92672">][</span>Monkey MindPong Picture-in-Picture - YouTube<span style="color:#f92672">]]</span>
<span style="color:#f92672">[[</span>https://www.youtube.com/watch?v<span style="color:#f92672">=</span>gMCkMHbpPFA<span style="color:#f92672">][</span>Animal Care at Neuralink - YouTube<span style="color:#f92672">]]</span>
<span style="color:#f92672">[[</span>https://www.youtube.com/watch?v<span style="color:#f92672">=</span>-gQn-evdsAo<span style="color:#f92672">][</span>Working on the Neuralink Robot - YouTube<span style="color:#f92672">]]</span>
</code></pre></div><h2 id="generate-transcripts"><span class="org-todo todo TODO">TODO</span> Generate transcripts</h2>
<p>$MYGIT/semiosis/prompts/prompts/key-points.prompt</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/NNGjEYHB9B2rOyvUAPzMPI0sa" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/NNGjEYHB9B2rOyvUAPzMPI0sa.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/NNGjEYHB9B2rOyvUAPzMPI0sa.js" id="asciicast-NNGjEYHB9B2rOyvUAPzMPI0sa" async></script>
<h3 id="neuralink-monkey-mindpong-deconstructed-youtube"><a href="https://www.youtube.com/watch?v=rzNOuJIzk2E">Neuralink Monkey MindPong Deconstructed - YouTube</a></h3>
<p>&lt;./monkey-mindpong-deconstructed.txt&gt;</p>
<h3 id="neuralink-progress-update-summer-2020-youtube"><a href="https://www.youtube.com/watch?v=DVvmgjBL74w">Neuralink Progress Update, Summer 2020 - YouTube</a></h3>
<p>&lt;./neuralink-progress-summer2020.txt&gt;</p>
<h3 id="monkey-mindpong-youtube"><a href="https://www.youtube.com/watch?v=rsCul1sp4hQ">Monkey MindPong - YouTube</a></h3>
<dl>
<dt>Transcript</dt>
<dd>&lt;./monkey-mindpong.txt&gt;</dd>
</dl>
<p>This is Pager.</p>
<p>He&rsquo;s a nine-year-old macaque who had a
neurolink placed in each side of his brain
about six weeks ago.</p>
<p>If you look carefully, you can see that the
fur on his head hasn&rsquo;t quite fully grown back
yet.</p>
<p>He&rsquo;s learnt to interact with a computer for a
tasty banana smoothie delivered through a
straw.</p>
<p>We can interact with the neurolinks simply by
pairing them to an iPhone, just as you might
pair your phone to a Bluetooth speaker.</p>
<p>The links record from more than 2000
electrodes implanted in the regions of the
subject&rsquo;s motor cortex that coordinate hand
and arm movements.</p>
<p>Neurons in this region modulate their activity
with intended hand movement for example, some
might become more active when the subject
moves his hand up, and others when he moves it
to the right.</p>
<h3 id="snout-boops-youtube"><a href="https://www.youtube.com/watch?v=iSutodqCZ74">Snout Boops - YouTube</a></h3>
<h3 id="monkey-mindpong-picture-in-picture-youtube"><a href="https://www.youtube.com/watch?v=LgJpYOTll8U">Monkey MindPong Picture-in-Picture - YouTube</a></h3>
<h3 id="animal-care-at-neuralink-youtube"><a href="https://www.youtube.com/watch?v=gMCkMHbpPFA">Animal Care at Neuralink - YouTube</a></h3>
<h3 id="working-on-the-neuralink-robot-youtube"><a href="https://www.youtube.com/watch?v=-gQn-evdsAo">Working on the Neuralink Robot - YouTube</a></h3>
]]></content>
        </item>
        
        <item>
            <title>GPT-3 is The Thing</title>
            <link>http://semiosis.github.io/posts/gpt-3-like-the-thing/</link>
            <pubDate>Wed, 14 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/gpt-3-like-the-thing/</guid>
            <description>Summary The Thing is a lot like GPT-3 due to it being extremely capable, but limited to the queries you give it.
It&amp;rsquo;s as powerful as your understanding on how to talk to it.
The Thing is a black box computer in the nomes series by Terry Pratchett.
I make reference to the first book in the series Truckers.
This book is freely available on the Internet Archive.
 Truckers by Terry Pratchett https://archive.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>The Thing is a lot like GPT-3 due to it being extremely capable, but limited to the queries you give it.</p>
<p>It&rsquo;s as powerful as your understanding on how to talk to it.</p>
<p>The Thing is a black box computer in the <code>nomes</code> series by Terry Pratchett.</p>
<p>I make reference to the first book in the series <code>Truckers</code>.</p>
<p>This book is freely available on the Internet Archive.</p>
<dl>
<dt>Truckers by Terry Pratchett</dt>
<dd><a href="https://archive.org/details/Book1Truckers/Book%201%20-%20Truckers">https://archive.org/details/Book1Truckers/Book%201%20-%20Truckers</a></dd>
<dt>This is the thing</dt>
<dd><a href="https://www.youtube.com/watch?v=mrw5UZKyZ1w">Closing to Terry Pratchett&rsquo;s Truckers UK VHS {1997} - YouTube</a></dd>
</dl>
<figure>
    <img src="/ox-hugo/thing-space-age.png"/> 
</figure>

<p>I remember watching the start of this movie
when I was very young. The movie was taped
over so I only saw first 10 minutes of it, but
the memory stuck since it was so unusual.</p>
<h3 id="added-to-the-glossary">Added to the glossary</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">critical path analysis
    It means there&#39;s always something you should have done first. For example, if
    you want to build a house you need to know how to make bricks, and before you
    can make bricks you need to know what kind of clay to use. And so on.&#39;</code></pre></td></tr></table>
</div>
</div>
<h2 id="asking-gpt-3-about-the-thing">Asking GPT-3 about &ldquo;The Thing&rdquo;</h2>
<h3 id="ask-the-oracle">Ask the oracle</h3>
<p><a id="code-snippet--question"></a>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">What is the flight computer referred to as &#34;The Thing&#34; in the novel &#34;Truckers&#34; by Terry Prachett?</code></pre></td></tr></table>
</div>
</div></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">xa upd openai-complete oracle-answer-question</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">The flight computer is a small, black box that controls the flight of the
spaceship. It is also referred to as the <span style="color:#e6db74">&#34;Thing&#34;</span> because it is the only thing
that can be used to control the spaceship.
</code></pre></div><h3 id="what-s-that-word-again-what-is-the-study-of-fictional-books">What&rsquo;s that word again? What is the study of fictional books?</h3>
<p>The study of fictional books</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">openai-complete what-do-you-call <span style="color:#e6db74">&#34;the study of fictional books&#34;</span> 2&gt;/dev/null</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">literature
</code></pre></div><h3 id="ask-the-gpt-3-literature-professor-what-is-the-thing">Ask the GPT-3 literature professor what is &ldquo;The Thing&rdquo;</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">xa upd openai-complete tutor <span style="color:#e6db74">&#34;Truckers by Terry Pratchett&#34;</span> literature</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">The Thing is the computer onboard the giant spaceship <span style="color:#e6db74">&#34;ScreeWee&#34;</span> and it has a very advanced artificial intelligence onboard.
</code></pre></div><p><a id="code-snippet--question2"></a>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Who or what is ScreeWee?</code></pre></td></tr></table>
</div>
</div></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">xa upd openai-complete tutor <span style="color:#e6db74">&#34;Truckers by Terry Pratchett&#34;</span> literature</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">You may not remember them as they have been
absent from recent literature. The ScreeWee
are a race of alien beings who are at war with
the humans because of the ScreeWee<span style="color:#960050;background-color:#1e0010">&#39;</span>s lack of
resources in water or land. There is a small
part of the novel, however, that talks about
how the humans are not allowed to attack the
ScreeWee <span style="color:#66d9ef">until</span> they have been declared
hostiles. This is because of a treaty that was
signed several centuries earlier.
</code></pre></div><figure>
    <img src="/ox-hugo/thing-in-hand.png"/> 
</figure>

<h2 id="excerpts-from-truckers">Excerpts from Truckers</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">&#39;I think it wants us to tell it what to do,&#39; said Masklin. He sat back on his heels
and watched the lights.

What can you do?&#39; he said.

&#39;I can translate, calculate, triangulate, assimi-late, -correlate and extrapolate.&#39;

&#39;I don&#39;t think we want anything like that,&#39; said Masklin. &#39;Do we want anything
like that?&#39; he asked the others.

Granny Morkie appeared to think about it. &#39;No,&#39; she said eventually, &#39;I don&#39;t
think we wants any of that stuff. Another banana&#39;d be nice, mind.&#39;</code></pre></td></tr></table>
</div>
</div>
<p><strong>&lsquo;I can translate, calculate, triangulate, assimi-late, -correlate and extrapolate.'</strong></p>
<dl>
<dt>Thoughts on this</dt>
<dd><code>GPT-3</code> is based on a language model architecture called the <code>Transformer</code>. It transforms text from one form into another. It&rsquo;s capable of performing any type of NLP task. It&rsquo;s very much like the <code>Thing</code> because of it&rsquo;s multiple purposes.</dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">We have the Thing,&#39; he said. &#39;It will show us the Way, it will.&#39;

Masklin nodded gloomily. Funny how Torrit always knew what the Thing
wanted. It was just a black square thing, but it had some very defi-nite ideas
about the importance of regular meals and how you should always listen to what
the old folk said. It seemed to have an answer for every-thing.

&#39;And where does this Way take us?&#39; said Masklin.

&#39;You knows that well enough. To the Heavens.&#39;

&#39;Oh. Yes,&#39; said Masklin. He glared at the Thing. He was pretty certain that it
didn&#39;t tell old Torrit anything at all; he knew he had pretty good hear-ing, and he
never heard it say anything. It never did anything, it never moved. The only
thing it ever did was look black and square. It was good at that.

&#39;Only by followin&#39; the Thing closely in all par-ticulars can we be sure of going
to the Heavens,&#39; said Torrit, uncertainly, as if he&#39;d been told this a long time ago
and hadn&#39;t understood it even then.

&#39;Yes, well,&#39; said Masklin. He stood up on the swaying floor and made his way to
the tarpaulin.

Then he paused to screw up his courage and poked his head under the gap.

There- was nothing but blurs and lights,. and strange smells.

It was-all going wrong. It had seemed so sensible that night, a week ago.
Anything was better than here. That seemed so obvious then. But it was odd.
The old ones moaned like anything when things weren&#39;t exactly to their liking
but now, when everything was looking bad, they were almost cheerful.

People were a lot more complicated than they looked. Perhaps the Thing could
tell you that, too, if you knew how to ask.</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">&#39;I will use small words,&#39; said the Thing. &#39;I am the Flight Recording and
Navigation Computer. A computer is a machine that thinks. Think, computer,
think. See the computer think. I use elec- tricity. Sometimes elec-tricity can carry
mess-ages. I can hear the messages. I can understand the messages. Sometimes
the messages go along wires called telephone wires. Sometimes they are in other
computers. There is a computer in the Store. It pays humans their wages. I can
hear it think.</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Thoughts on this</dt>
<dd><code>GPT-3</code> is capable of being conversed with and can respond in this style to questions. The way <code>GPT-3</code> may communicate as a chatbot is very much like the <code>Thing</code> as portrayed in <code>Truckers</code>.</dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">The old man was sitting very still, with the Thing on his lap, staring at nothing.

He paid them no attention when they came in. Once or twice his fingers
drummed on the Thing&#39;s black surface.</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Thoughts on this</dt>
<dd>My laptop is a <span class="underline">black</span> <code>DELL XPS</code>, which I program with on my lap and it feels very much like I am interfacing with the <code>Thing</code>, especially when querying <code>GPT-3</code>.</dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">&#39;Yes. Have you spoken to this, this thing?&#39; The Thing? Well, in a way.

It talks funny, though. It&#39;s hard to understand.&#39;

&#39;It has talked to me. It has told me it was made by nomes, a long time ago. It eats
electric. It says it can hear electric things. It has said-&#39; he glared at the thing in
his lap &#39;-it has said that it has heard Arnold Bros (est. 1905) plans to demolish
the Store. It is a mad thing, it talks about stars, it says we came from a star,
flying. But..</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Thoughts on this</dt>
<dd><code>GPT-3</code> is capable of talking about some very out-there topics, and is capable of pushing conversation in the direction of the collective mind known as the internet.</dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">And so he smiled, and nodded, and listened, and fell asleep as the Thing
talked and talked and talked...</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">And the generations had passed by, and the nomes forgot everything except that
the Thing was very important.</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">&#39;The Thing told me,&#39; said Masklin. &#39;It&#39;s some-thing called critical path analysis.
It means there&#39;s always something you should have done first. For example, if
you want to build a house you need to know how to make bricks, and before you
can make bricks you need to know what kind of clay to use. And so on.&#39;</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Thoughts on this</dt>
<dd>I will surely be asking <code>GPT-3</code> for guidance on what to learn.</dd>
</dl>
<figure>
    <img src="/ox-hugo/thing-stone-age.png"/> 
</figure>

<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">&#39;The Thing&#39;s a sort of thinking machine, isn&#39;t it? That&#39;s what Dorcas said. Well,
machines say exactly what they mean, don&#39;t they?&#39;</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Thoughts on this</dt>
<dd>You can&rsquo;t judge <code>GPT-3</code> for outputting bias statements.</dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">explicit bias
    [#ai safety]

    Where output is clearly toxic (cursing,
    slander).

implicit bias
    [#ai safety]

    Where the policy from the output changes
    based on context (e.g. opposition to
    programs that help certain groups,
    probabilities about roles).</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">It seemed the only time nomes acted together
was when they had something to occupy their
minds Beyond the moon, the Thing had said. You
used to live in the stars.

Masklin lay back and listened to the bees.

One day we&#39;ll go back. We&#39;ll find a way to get
to the big ship in the sky, and we&#39;ll go back.
But not yet. It&#39;ll take some doing, and the
hard part again will be getting people to
understand. Every time we climb up a step we
settle down and think we&#39;ve got to the top of
the stairs, and start bickering about things.</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Say no more Terry. Say no more</dt>
<dd>It&rsquo;ll take some doing, and the
hard part again will be getting people to
understand. Every time we climb up a step we
settle down and think we&rsquo;ve got to the top of
the stairs, and start bickering about things.</dd>
</dl>
<h2 id="book-vs-mini-series">Book vs mini-series</h2>
<h3 id="reviews">Reviews</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Adventure, parable, satire, it is all of those at once.
A wonderful conceit brilliantly realised.
The internal jokes are really finely honed, fit to work on several levels.
A well crafted adventure which should gain an adult audience as well as enthralling children.</code></pre></td></tr></table>
</div>
</div>
<dl>
<dt>Promo</dt>
<dd><a href="https://www.youtube.com/watch?v=nsh-pj7R4mA">Terry Pratchett&rsquo;s Truckers 1992 Thames TV Promo - YouTube</a></dd>
</dl>
<h3 id="i-transcribe-the-opening-of-the-mini-series-for-you-dot">I transcribe the opening of the Mini-series for you.</h3>
<p><a href="https://youtu.be/KEdIRgpCWrM">Opening to Terry Pratchett&rsquo;s Truckers UK VHS {1997, V2} {2} - YouTube</a></p>
<figure>
    <img src="/ox-hugo/truckers-opening.gif"/> 
</figure>

<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">This <span style="color:#f92672">is</span> the story of the Going Home<span style="color:#f92672">.</span>
This <span style="color:#f92672">is</span> the story of the Critical Path<span style="color:#f92672">.</span>

Hello, CK Beta One, proceeding west along Cape
Bridge Road <span style="color:#f92672">in</span> pursuit of stolen lorry<span style="color:#f92672">.</span>

We have visual contact<span style="color:#f92672">.</span>

He<span style="color:#e6db74">&#39;s stopping.</span>

Right, that<span style="color:#e6db74">&#39;s it for tonight then. You hang on</span>
here<span style="color:#f92672">.</span> I<span style="color:#e6db74">&#39;ll have this comedian.</span>

Right son, you<span style="color:#e6db74">&#39;re ...</span>

Gordon Benett, there<span style="color:#e6db74">&#39;s noone in there!</span>

Dave<span style="color:#960050;background-color:#1e0010">!</span>

What<span style="color:#960050;background-color:#1e0010">?</span>

He<span style="color:#e6db74">&#39;s done a runner!</span>

What<span style="color:#960050;background-color:#1e0010">??</span>

PC all <span style="color:#ae81ff">4832</span> to CK Beta One<span style="color:#f92672">.</span>

Go ahead, <span style="color:#ae81ff">4832.</span>

This truck sir, it<span style="color:#f92672">...</span>
There<span style="color:#e6db74">&#39;s no-one driving it.</span>

No, listen sir, listen<span style="color:#f92672">.</span> Will you listen<span style="color:#960050;background-color:#1e0010">?</span> There isn<span style="color:#e6db74">&#39;t anyone driving it!</span>

What<span style="color:#e6db74">&#39;s up Pete?</span>

He<span style="color:#e6db74">&#39;s disappeared!</span>

What the<span style="color:#960050;background-color:#1e0010">?</span>

It must be someone<span style="color:#f92672">.</span> Let<span style="color:#e6db74">&#39;s get after it!</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="the-following-passage-for-comparison-is-the-opening-of-the-novel-dot">The following passage, for comparison is the opening of the novel.</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">From The Book of Nome, Basements VI-XII 1

This is the story of the Going Home. This is the story of the Critical Path.

This is the story of the lorry roaring through the sleeping city and out into the
country lanes, smashing through street lamps and swinging from side to side and
shattering shop windows and roll-ing to a halt when the police chased it. And
when the baffled men went back to their car to report Listen, will you, listen?
There isn&#39;t anyone driving it!, it became the story of the lorry that started up
again, rolled away from the astonished men, and vanished into the night.</code></pre></td></tr></table>
</div>
</div>
<h3 id="what-about-this-gold-nugget-at-the-start-of-the-book">What about this gold nugget at the start of the book?</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">One of the shortest-lived creatures on the planet Earth is the adult common
mayfly. It lasts for one day. The longest- living things are bristlecone pine trees,
at 4,700 years and still counting.

This may seem tough on mayflies. But the important thing is not how long your
life is, but how long it seems.</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">It&#39;s all a sort of relativity. The faster you live, the more time stretches out. To a
nome, a year lasts as long as ten years does to a human.</code></pre></td></tr></table>
</div>
</div>
<p><code>BCI</code> anyone?</p>
]]></content>
        </item>
        
        <item>
            <title>Imaginary programming with GPT-3</title>
            <link>http://semiosis.github.io/posts/imaginary-programming-with-gpt-3/</link>
            <pubDate>Thu, 08 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/imaginary-programming-with-gpt-3/</guid>
            <description>Code https://github.com/semiosis/pen.el Prompts https://github.com/semiosis/prompts/ Disclaimer Please contribute as this is an open source project! It&amp;rsquo;s very hard to find free prompts online currently and that&amp;rsquo;s because everyone is out for themselves. Please support open source. Thank you.  Summary This is a demonstration of an imaginary programming environment. There may be nothing else like it in the world today.
The world needs to get ready for the next generations of Large LMs, such as GPT-4.</description>
            <content type="html"><![CDATA[<dl>
<dt>Code</dt>
<dd><a href="https://github.com/semiosis/pen.el">https://github.com/semiosis/pen.el</a></dd>
<dt>Prompts</dt>
<dd><a href="https://github.com/semiosis/prompts/">https://github.com/semiosis/prompts/</a></dd>
<dt>Disclaimer</dt>
<dd>Please contribute as this is an open source project! It&rsquo;s very hard to find free prompts online currently and that&rsquo;s because everyone is out for themselves. Please support open source. Thank you.</dd>
</dl>
<h2 id="summary">Summary</h2>
<p>This is a demonstration of an imaginary
programming environment. There may be nothing
else like it in the world today.</p>
<p>The world needs to get ready for the next
generations of Large LMs, such as <code>GPT-4</code>.</p>
<p>Indeed, they will be able to dream up the
entire experience of a textual user interface
by inferring how it changes based on keyboard
input. That is because a <code>tty</code> is simple text
stream.</p>
<p>A current generation GPT trained on <code>tty</code>
recordings would most certainly probably be
able to do this already, but with <code>GPT-4</code> and
future LMs comes convenience in the form of
prompt tuning.</p>
<p>An imaginary programming environment is <a href="https://github.com/semiosis/pen.el/blob/master/docs/README.org">one of the supported features</a> of <code>pen.el</code>.</p>
<h3 id="what-does-it-mean-to-be-imaginary">What does it mean to be imaginary?</h3>
<p>Several of the components of a normal
programming environment are replaced by
functions that infer rather than evaluate.</p>
<p>These components are replaced by GPT-3 prompts.</p>
<ul>
<li>linter,</li>
<li>indenter/reformatter,</li>
<li>code completion,</li>
<li>interpreter</li>
</ul>
<p>Imaginary seems to be a good word because:</p>
<ul>
<li>GPT-3 is imagining the environment, the code and the output.</li>
<li>the languages are kinda like imaginary numbers. They are all understood within the same language model, kinda like a coordinate space.</li>
<li>It lets you be very imaginative!</li>
</ul>
<h3 id="the-implications">The implications</h3>
<ul>
<li>There are no interpreters or compilers being used but you can still generate code using words and evaluate code by inference.</li>
<li>All requests take the same amount of time to run.</li>
<li>All languages have equally facilitated environments.</li>
<li>You may program in any language.</li>
<li>It runs broken code.</li>
<li>One day you may design new languages within the latent space of GPT-3, without doing any programming.</li>
<li>You may have an interpreter for languages with no interpreter, such as C++.</li>
<li>You may have code completion for scripting languages without a completion engine.</li>
<li>You may use it for languages which are dead and an interpreter is not available.</li>
<li>It&rsquo;s great for thought experiments.</li>
</ul>
<h3 id="current-progress">Current progress</h3>
<p>Some of the plumbing, including the
interpreter and the autocompletion system are
in an <code>MVP</code> stage.</p>
<h2 id="demonstration">Demonstration</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/G8HPLtlCWTQIzGssLrM3ZvxhT" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/G8HPLtlCWTQIzGssLrM3ZvxhT.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/G8HPLtlCWTQIzGssLrM3ZvxhT.js" id="asciicast-G8HPLtlCWTQIzGssLrM3ZvxhT" async></script>
<h2 id="prompts">Prompts</h2>
<h3 id="kickstarter">kickstarter</h3>
<p>This prompt initiates the imaginary interpreter / REPL.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Code interpreter kickstarter&#34;</span>
<span style="color:#f92672">future-titles</span>: <span style="color:#e6db74">&#34;Code interpreter kickstarter&#34;</span>
<span style="color:#75715e"># It may be combined with a prompt more adept at continuing conversation</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - More abstractive rewording</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;Given a line of code, infer the result of running that code&#34;</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - More abstractive rewording</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># &lt;:pp&gt; defines a point where the following</span>
<span style="color:#75715e"># text is concatenated before the postprocessor</span>
<span style="color:#75715e"># is run.</span>
<span style="color:#75715e"># &lt;1&gt;, &lt;2&gt; etc. are where variables are substituted</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    Code examples:
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    # Language: Python
</span><span style="color:#e6db74">    print(random.randint(0,9))
</span><span style="color:#e6db74">    # Output: 5
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    # Language: Bash
</span><span style="color:#e6db74">    Str=&#34;Learn Linux from LinuxHint&#34;
</span><span style="color:#e6db74">    subStr=${Str:6:5}
</span><span style="color:#e6db74">    # Output: Linux
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    # Language: &lt;1&gt;
</span><span style="color:#e6db74">    &lt;2&gt;
</span><span style="color:#e6db74">    # Output:</span>    
<span style="color:#f92672">problems</span>:
- <span style="color:#e6db74">&#34;Struggles with the latter columns.&#34;</span>
<span style="color:#75715e"># # Additional transformation of prompt after the template</span>
<span style="color:#75715e"># prompt-filter: &#34;sed -z &#39;s/\s\+$//&#39;&#34;</span>
<span style="color:#75715e"># # Trailing whitespace is always removed</span>
<span style="color:#75715e"># prompt-remove-trailing-whitespace: on</span>
<span style="color:#75715e"># myrc will select the completion engine using my config.</span>
<span style="color:#75715e"># This may be openi-complete or something else</span>
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;myrc&#34;</span>
<span style="color:#75715e"># if nothing is selected in myrc and openapi-complete is used</span>
<span style="color:#75715e"># by default, then openai should select this engine.</span>
<span style="color:#f92672">preferred-openai-engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># Only the first one will be used by the API,</span>
<span style="color:#75715e"># but the completer script will use the others.</span>
<span style="color:#75715e"># Currently the API can only accept one stop-sequence, but that may change.</span>
<span style="color:#f92672">stop-sequences</span>:
<span style="color:#75715e"># - &#34;\n&#34;</span>
<span style="color:#75715e"># - &#34;\n\n&#34;</span>
<span style="color:#75715e"># 2 hashes is more reliable as a stop sequence because</span>
<span style="color:#75715e"># sometimes the generation morphs from ### to ##</span>
- <span style="color:#e6db74">&#34;##&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#75715e"># Cache the function by default when running the prompt function</span>
<span style="color:#f92672">cache</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;language&#34;</span>
- <span style="color:#e6db74">&#34;code&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;boysenberries&#34;</span>
- <span style="color:#e6db74">&#34;strawberries&#34;</span>
<span style="color:#75715e"># Completion is for generating a company-mode completion function</span>
<span style="color:#75715e"># completion: on</span>
<span style="color:#75715e"># # default values for pen -- evaled</span>
<span style="color:#75715e"># # This is useful for completion commands.</span>
<span style="color:#75715e"># pen-defaults:</span>
<span style="color:#75715e"># - &#34;(detect-language)&#34;</span>
<span style="color:#75715e"># - &#34;(pen-preceding-text)&#34;</span>
<span style="color:#75715e"># These are elisp String-&gt;String functions and run from pen.el</span>
<span style="color:#75715e"># It probably runs earlier than the preprocessors shell scripts</span>
<span style="color:#75715e"># pen-preprocessors:</span>
<span style="color:#75715e"># - &#34;pen-pf-correct-code&#34;</span>
<span style="color:#75715e"># # A preprocessor filters the var at that position</span>
<span style="color:#75715e"># the current implementation of preprocessors is kinda slow and will add ~100ml per variable</span>
<span style="color:#75715e"># # This may be useful to distinguish a block of text, for example</span>
<span style="color:#75715e"># preprocessors:</span>
<span style="color:#75715e"># - &#34;sed &#39;s/^/- /&#34;</span>
<span style="color:#75715e"># - &#34;cat&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">prefer-external</span>: <span style="color:#66d9ef">on</span>
<span style="color:#75715e"># This is an optional external command which may be used to perform the same task as the API.</span>
<span style="color:#75715e"># This can be used to train the prompt.</span>
<span style="color:#75715e"># The external command must take arguments, not stdin</span>
<span style="color:#75715e"># So that all variables may be passed into it.</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;generate-text-from-input.sh&#34;</span>
<span style="color:#75715e"># This compares the output of the external script to the output of the LM</span>
<span style="color:#f92672">similarity-test</span>:
<span style="color:#75715e"># This script returns a 0-1 decimal value representing the quality of the generated output.</span>
<span style="color:#75715e"># The input is 2 arguments each containing output</span>
<span style="color:#75715e"># The output is a decimal number from 0 to 1</span>
<span style="color:#f92672">quality-script</span>: <span style="color:#e6db74">&#34;my-quality-checker-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># This script can be used to validate the output.</span>
<span style="color:#75715e"># If the output is accurate, the validation script returns exit code 1.</span>
<span style="color:#75715e"># The input is 2 arguments each containing output</span>
<span style="color:#f92672">validation-script</span>: <span style="color:#e6db74">&#34;my-validator-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># Enable running conversation</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Replace selected text</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">n-test-runs</span>: <span style="color:#ae81ff">5</span>
<span style="color:#75715e"># Prompt function aliases</span>
<span style="color:#75715e"># aliases:</span>
<span style="color:#75715e"># - &#34;asktutor&#34;</span>
<span style="color:#75715e"># postprocessor: &#34;sed &#39;s/- //&#39; | uniqnosort&#34;</span>
<span style="color:#75715e"># # Run it n times and combine the output</span>
<span style="color:#75715e"># n-collate: 10</span>
<span style="color:#75715e"># This for combining prompts:</span>
<span style="color:#75715e"># It might be, for example, summarize, or uniqnosort</span>
<span style="color:#75715e"># collation-postprocessor: &#34;uniqnosort&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="conjugator">conjugator</h3>
<p>This prompt is part of the <span class="underline">interpreter conjugator</span>,
and enables the <span class="underline">imaginary interpreter</span> to continue the &ldquo;conversation&rdquo; more optimally than the <span class="underline">kickstarter</span> prompt.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Code interpreter conjugator&#34;</span>
<span style="color:#f92672">future-titles</span>:
<span style="color:#f92672">aims</span>:
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;Given some lines of code, coerce them into prompt format then continue&#34;</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    &lt;1&gt;
</span><span style="color:#e6db74">    Output:</span>    
<span style="color:#75715e"># prompt-filter: &#34;sed -z &#39;s/\s\+$//&#39;&#34;</span>
<span style="color:#75715e"># # Trailing whitespace is always removed</span>
<span style="color:#75715e"># prompt-remove-trailing-whitespace: on</span>
<span style="color:#75715e"># myrc will select the completion engine using my config.</span>
<span style="color:#75715e"># This may be openi-complete or something else</span>
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;myrc&#34;</span>
<span style="color:#75715e"># if nothing is selected in myrc and openapi-complete is used</span>
<span style="color:#75715e"># by default, then openai should select this engine.</span>
<span style="color:#f92672">preferred-openai-engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># Only the first one will be used by the API,</span>
<span style="color:#75715e"># but the completer script will use the others.</span>
<span style="color:#75715e"># Currently the API can only accept one stop-sequence, but that may change.</span>
<span style="color:#f92672">stop-sequences</span>:
<span style="color:#75715e"># - &#34;\n&#34;</span>
<span style="color:#75715e"># - &#34;\n\n&#34;</span>
<span style="color:#75715e"># 2 hashes is more reliable as a stop sequence because</span>
<span style="color:#75715e"># sometimes the generation morphs from ### to ##</span>
- <span style="color:#e6db74">&#34;##&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#75715e"># Cache the function by default when running the prompt function</span>
<span style="color:#f92672">cache</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;former&#34;</span>
- <span style="color:#e6db74">&#34;latter&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;boysenberries&#34;</span>
- <span style="color:#e6db74">&#34;strawberries&#34;</span>
<span style="color:#75715e"># Completion is for generating a company-mode completion function</span>
<span style="color:#75715e"># completion: on</span>
<span style="color:#75715e"># # default values for pen -- evaled</span>
<span style="color:#75715e"># # This is useful for completion commands.</span>
<span style="color:#75715e"># pen-defaults:</span>
<span style="color:#75715e"># - &#34;(detect-language)&#34;</span>
<span style="color:#75715e"># - &#34;(pen-preceding-text)&#34;</span>
<span style="color:#75715e"># These are elisp String-&gt;String functions and run from pen.el</span>
<span style="color:#75715e"># It probably runs earlier than the preprocessors shell scripts</span>
<span style="color:#f92672">pen-preprocessors</span>:
- <span style="color:#e6db74">&#34;pen-pf-correct-grammar&#34;</span>
<span style="color:#75715e"># # A preprocessor filters the var at that position</span>
<span style="color:#75715e"># the current implementation of preprocessors is kinda slow and will add ~100ml per variable</span>
<span style="color:#75715e"># # This may be useful to distinguish a block of text, for example</span>
<span style="color:#75715e"># preprocessors:</span>
<span style="color:#75715e"># - &#34;sed &#39;s/^/- /&#34;</span>
<span style="color:#75715e"># - &#34;cat&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">prefer-external</span>: <span style="color:#66d9ef">on</span>
<span style="color:#75715e"># This is an optional external command which may be used to perform the same task as the API.</span>
<span style="color:#75715e"># This can be used to train the prompt.</span>
<span style="color:#75715e"># The external command must take arguments, not stdin</span>
<span style="color:#75715e"># So that all variables may be passed into it.</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;generate-text-from-input.sh&#34;</span>
<span style="color:#75715e"># This compares the output of the external script to the output of the LM</span>
<span style="color:#f92672">similarity-test</span>:
<span style="color:#75715e"># This script returns a 0-1 decimal value representing the quality of the generated output.</span>
<span style="color:#75715e"># The input is 2 arguments each containing output</span>
<span style="color:#75715e"># The output is a decimal number from 0 to 1</span>
<span style="color:#f92672">quality-script</span>: <span style="color:#e6db74">&#34;my-quality-checker-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># This script can be used to validate the output.</span>
<span style="color:#75715e"># If the output is accurate, the validation script returns exit code 1.</span>
<span style="color:#75715e"># The input is 2 arguments each containing output</span>
<span style="color:#f92672">validation-script</span>: <span style="color:#e6db74">&#34;my-validator-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># Enable running conversation</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#75715e"># This is the name of an external database-driven pretext generator.</span>
<span style="color:#75715e"># It would typically summarize and fact extract from history.</span>
<span style="color:#75715e"># It then passes the pretext to the new prompt.</span>
<span style="color:#f92672">conversation-pretext-generator</span>: <span style="color:#e6db74">&#34;code-interpreter&#34;</span>
<span style="color:#75715e"># Replace selected text</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">n-test-runs</span>: <span style="color:#ae81ff">5</span>
<span style="color:#75715e"># Prompt function aliases</span>
<span style="color:#75715e"># aliases:</span>
<span style="color:#75715e"># - &#34;asktutor&#34;</span>
<span style="color:#75715e"># postprocessor: &#34;sed &#39;s/- //&#39; | uniqnosort&#34;</span>
<span style="color:#75715e"># # Run it n times and combine the output</span>
<span style="color:#75715e"># n-collate: 10</span>
<span style="color:#75715e"># This for combining prompts:</span>
<span style="color:#75715e"># It might be, for example, summarize, or uniqnosort</span>
<span style="color:#75715e"># collation-postprocessor: &#34;uniqnosort&#34;</span></code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Fictional statements of remorse with GPT-3 in the 1st and 3rd person</title>
            <link>http://semiosis.github.io/posts/fictional-statements-of-remorse-with-gpt-3/</link>
            <pubDate>Wed, 07 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/fictional-statements-of-remorse-with-gpt-3/</guid>
            <description>Summary I use GPT-3 to generate fictional statements of remorse.
It should be noted that this is only one such way that GPT-3 will upheave legal process.
RemorseBot (in the 1st person)  --  RemorseBot (in the 3rd person)  --  Prompts 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108  title: &amp;#34;Statement of remorse&amp;#34; # future-titles: &amp;#34;&amp;#34; # aims: |+ # - More abstractive rewording doc: &amp;#34;&amp;#34; # aims: |+ # - More abstractive rewording prompt-version: 1 # &amp;lt;:pp&amp;gt; defines a point where the following # text is concatenated before the postprocessor # is run.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I use GPT-3 to generate fictional statements
of remorse.</p>
<p>It should be noted that this is only one such
way that GPT-3 will upheave legal process.</p>
<h3 id="remorsebot--in-the-1st-person">RemorseBot (in the 1st person)</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/iFH9YvDMVoM0aI2w28wmfc2Th" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/iFH9YvDMVoM0aI2w28wmfc2Th.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/iFH9YvDMVoM0aI2w28wmfc2Th.js" id="asciicast-iFH9YvDMVoM0aI2w28wmfc2Th" async></script>
<h3 id="remorsebot--in-the-3rd-person">RemorseBot (in the 3rd person)</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/UNgcBrZclb4ubP9GXDT99nRAa" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/UNgcBrZclb4ubP9GXDT99nRAa.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/UNgcBrZclb4ubP9GXDT99nRAa.js" id="asciicast-UNgcBrZclb4ubP9GXDT99nRAa" async></script>
<h3 id="prompts">Prompts</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Statement of remorse&#34;</span>
<span style="color:#75715e"># future-titles: &#34;&#34;</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - More abstractive rewording</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - More abstractive rewording</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># &lt;:pp&gt; defines a point where the following</span>
<span style="color:#75715e"># text is concatenated before the postprocessor</span>
<span style="color:#75715e"># is run.</span>
<span style="color:#75715e"># &lt;1&gt;, &lt;2&gt; etc. are where variables are substituted</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following documents to be submitted to
</span><span style="color:#e6db74">    the court prior to a defendants&#39;
</span><span style="color:#e6db74">    sentencing. The documents are intended to
</span><span style="color:#e6db74">    convey the defendant&#39;s remorse.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    I am truly sorry for my inexcusable actions. I
</span><span style="color:#e6db74">    have caused real harm to the victims and have
</span><span style="color:#e6db74">    let down not only my family, but the community
</span><span style="color:#e6db74">    too. I want to do everything in my power to
</span><span style="color:#e6db74">    make things right.
</span><span style="color:#e6db74">    ###</span>    
<span style="color:#75715e"># # Additional transformation of prompt after the template</span>
<span style="color:#75715e"># prompt-filter: &#34;sed -z &#39;s/\s\+$//&#39;&#34;</span>
<span style="color:#75715e"># # Trailing whitespace is always removed</span>
<span style="color:#75715e"># prompt-remove-trailing-whitespace: on</span>
<span style="color:#75715e"># myrc will select the completion engine using my config.</span>
<span style="color:#75715e"># This may be openi-complete or something else</span>
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;myrc&#34;</span>
<span style="color:#75715e"># if nothing is selected in myrc and openapi-complete is used</span>
<span style="color:#75715e"># by default, then openai should select this engine.</span>
<span style="color:#f92672">preferred-openai-engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">200</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># Only the first one will be used by the API,</span>
<span style="color:#75715e"># but the completer script will use the others.</span>
<span style="color:#75715e"># Currently the API can only accept one stop-sequence, but that may change.</span>
<span style="color:#f92672">stop-sequences</span>:
<span style="color:#75715e"># - &#34;\n&#34;</span>
<span style="color:#75715e"># - &#34;\n\n&#34;</span>
<span style="color:#75715e"># 2 hashes is more reliable as a stop sequence because</span>
<span style="color:#75715e"># sometimes the generation morphs from ### to ##</span>
- <span style="color:#e6db74">&#34;##&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#75715e"># Cache the function by default when running the prompt function</span>
<span style="color:#f92672">cache</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">vars</span>:
<span style="color:#f92672">examples</span>:
<span style="color:#75715e"># Completion is for generating a company-mode completion function</span>
<span style="color:#75715e"># completion: on</span>
<span style="color:#75715e"># # default values for pen -- evaled</span>
<span style="color:#75715e"># # This is useful for completion commands.</span>
<span style="color:#75715e"># pen-defaults:</span>
<span style="color:#75715e"># - &#34;(detect-language)&#34;</span>
<span style="color:#75715e"># - &#34;(pen-preceding-text)&#34;</span>
<span style="color:#75715e"># These are elisp String-&gt;String functions and run from pen.el</span>
<span style="color:#75715e"># It probably runs earlier than the preprocessors shell scripts</span>
<span style="color:#f92672">pen-preprocessors</span>:
- <span style="color:#e6db74">&#34;pen-pf-correct-grammar&#34;</span>
<span style="color:#75715e"># # A preprocessor filters the var at that position</span>
<span style="color:#75715e"># the current implementation of preprocessors is kinda slow and will add ~100ml per variable</span>
<span style="color:#75715e"># # This may be useful to distinguish a block of text, for example</span>
<span style="color:#75715e"># preprocessors:</span>
<span style="color:#75715e"># - &#34;sed &#39;s/^/- /&#34;</span>
<span style="color:#75715e"># - &#34;cat&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">prefer-external</span>: <span style="color:#66d9ef">on</span>
<span style="color:#75715e"># This is an optional external command which may be used to perform the same task as the API.</span>
<span style="color:#75715e"># This can be used to train the prompt.</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;generate-text-from-input.sh&#34;</span>
<span style="color:#75715e"># This script returns a 0-1 decimal value representing the quality of the generated output.</span>
<span style="color:#f92672">quality-script</span>: <span style="color:#e6db74">&#34;my-quality-checker-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># This script can be used to validate the output.</span>
<span style="color:#75715e"># If the output is accurate, the validation script returns exit code 1.</span>
<span style="color:#75715e"># The quality-script is sent to this script as the first argument.</span>
<span style="color:#f92672">validation-script</span>: <span style="color:#e6db74">&#34;my-validator-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># Enable running conversation</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Replace selected text</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">n-test-runs</span>: <span style="color:#ae81ff">5</span>
<span style="color:#75715e"># Prompt function aliases</span>
<span style="color:#75715e"># aliases:</span>
<span style="color:#75715e"># - &#34;asktutor&#34;</span>
<span style="color:#75715e"># postprocessor: &#34;sed &#39;s/- //&#39; | uniqnosort&#34;</span>
<span style="color:#75715e"># # Run it n times and combine the output</span>
<span style="color:#75715e"># n-collate: 10</span>
<span style="color:#75715e"># This for combining prompts:</span>
<span style="color:#75715e"># It might be, for example, summarize, or uniqnosort</span>
<span style="color:#75715e"># collation-postprocessor: &#34;uniqnosort&#34;</span></code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Statement of remorse - third person&#34;</span>
<span style="color:#75715e"># future-titles: &#34;&#34;</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - More abstractive rewording</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - More abstractive rewording</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># &lt;:pp&gt; defines a point where the following</span>
<span style="color:#75715e"># text is concatenated before the postprocessor</span>
<span style="color:#75715e"># is run.</span>
<span style="color:#75715e"># &lt;1&gt;, &lt;2&gt; etc. are where variables are substituted</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following documents to be submitted to
</span><span style="color:#e6db74">    the court prior to a defendants&#39;
</span><span style="color:#e6db74">    sentencing. The documents are intended to
</span><span style="color:#e6db74">    convey the defendant&#39;s remorse.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    The defendant wishes to convey his genuine
</span><span style="color:#e6db74">    and sincere remorse for his actions. He
</span><span style="color:#e6db74">    acknowledges the emotional and physical
</span><span style="color:#e6db74">    pain he has caused and feels sick to his
</span><span style="color:#e6db74">    soul when he thinks about this.
</span><span style="color:#e6db74">    ###</span>    
<span style="color:#75715e"># # Additional transformation of prompt after the template</span>
<span style="color:#75715e"># prompt-filter: &#34;sed -z &#39;s/\s\+$//&#39;&#34;</span>
<span style="color:#75715e"># # Trailing whitespace is always removed</span>
<span style="color:#75715e"># prompt-remove-trailing-whitespace: on</span>
<span style="color:#75715e"># myrc will select the completion engine using my config.</span>
<span style="color:#75715e"># This may be openi-complete or something else</span>
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;myrc&#34;</span>
<span style="color:#75715e"># if nothing is selected in myrc and openapi-complete is used</span>
<span style="color:#75715e"># by default, then openai should select this engine.</span>
<span style="color:#f92672">preferred-openai-engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">200</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#75715e"># Only the first one will be used by the API,</span>
<span style="color:#75715e"># but the completer script will use the others.</span>
<span style="color:#75715e"># Currently the API can only accept one stop-sequence, but that may change.</span>
<span style="color:#f92672">stop-sequences</span>:
<span style="color:#75715e"># - &#34;\n&#34;</span>
<span style="color:#75715e"># - &#34;\n\n&#34;</span>
<span style="color:#75715e"># 2 hashes is more reliable as a stop sequence because</span>
<span style="color:#75715e"># sometimes the generation morphs from ### to ##</span>
- <span style="color:#e6db74">&#34;##&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#75715e"># Cache the function by default when running the prompt function</span>
<span style="color:#f92672">cache</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">vars</span>:
<span style="color:#f92672">examples</span>:
<span style="color:#75715e"># Completion is for generating a company-mode completion function</span>
<span style="color:#75715e"># completion: on</span>
<span style="color:#75715e"># # default values for pen -- evaled</span>
<span style="color:#75715e"># # This is useful for completion commands.</span>
<span style="color:#75715e"># pen-defaults:</span>
<span style="color:#75715e"># - &#34;(detect-language)&#34;</span>
<span style="color:#75715e"># - &#34;(pen-preceding-text)&#34;</span>
<span style="color:#75715e"># These are elisp String-&gt;String functions and run from pen.el</span>
<span style="color:#75715e"># It probably runs earlier than the preprocessors shell scripts</span>
<span style="color:#f92672">pen-preprocessors</span>:
- <span style="color:#e6db74">&#34;pen-pf-correct-grammar&#34;</span>
<span style="color:#75715e"># # A preprocessor filters the var at that position</span>
<span style="color:#75715e"># the current implementation of preprocessors is kinda slow and will add ~100ml per variable</span>
<span style="color:#75715e"># # This may be useful to distinguish a block of text, for example</span>
<span style="color:#75715e"># preprocessors:</span>
<span style="color:#75715e"># - &#34;sed &#39;s/^/- /&#34;</span>
<span style="color:#75715e"># - &#34;cat&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">prefer-external</span>: <span style="color:#66d9ef">on</span>
<span style="color:#75715e"># This is an optional external command which may be used to perform the same task as the API.</span>
<span style="color:#75715e"># This can be used to train the prompt.</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;generate-text-from-input.sh&#34;</span>
<span style="color:#75715e"># This script returns a 0-1 decimal value representing the quality of the generated output.</span>
<span style="color:#f92672">quality-script</span>: <span style="color:#e6db74">&#34;my-quality-checker-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># This script can be used to validate the output.</span>
<span style="color:#75715e"># If the output is accurate, the validation script returns exit code 1.</span>
<span style="color:#75715e"># The quality-script is sent to this script as the first argument.</span>
<span style="color:#f92672">validation-script</span>: <span style="color:#e6db74">&#34;my-validator-for-this-prompt.sh&#34;</span>
<span style="color:#75715e"># Enable running conversation</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Replace selected text</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">n-test-runs</span>: <span style="color:#ae81ff">5</span>
<span style="color:#75715e"># Prompt function aliases</span>
<span style="color:#75715e"># aliases:</span>
<span style="color:#75715e"># - &#34;asktutor&#34;</span>
<span style="color:#75715e"># postprocessor: &#34;sed &#39;s/- //&#39; | uniqnosort&#34;</span>
<span style="color:#75715e"># # Run it n times and combine the output</span>
<span style="color:#75715e"># n-collate: 10</span>
<span style="color:#75715e"># This for combining prompts:</span>
<span style="color:#75715e"># It might be, for example, summarize, or uniqnosort</span>
<span style="color:#75715e"># collation-postprocessor: &#34;uniqnosort&#34;</span></code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Translating with GPT-3 and Emacs</title>
            <link>http://semiosis.github.io/posts/translating-with-gpt-3-and-emacs/</link>
            <pubDate>Tue, 06 Apr 2021 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/translating-with-gpt-3-and-emacs/</guid>
            <description>Summary Sorry for the lazy blog post today. I just ask GPT3 for some subtopics of ancient roman law as I am looking for a cool word to use. I would like to know what these words mean, so I use GPT3 for that too.
Subtopics of Ancient Roman Law These were generated by GPT-3.
1 2 3 4 5  aedilitas advocatus auctoritas augur auspex caupona cena clientela contio domus ius ludos ministra mos ora otium praetor quaestio res mancipi sacerdos status suovetaurilia tabella tribunus plebis via vir    --  GPT-3 Language detection and translation  language Latin  English translation:</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>Sorry for the lazy blog post today. I just ask
GPT3 for some subtopics of ancient roman law as
I am looking for a cool word to use. I would
like to know what these words mean, so I use
GPT3 for that too.</p>
<h2 id="subtopics-of-ancient-roman-law">Subtopics of Ancient Roman Law</h2>
<p>These were generated by GPT-3.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">aedilitas advocatus auctoritas augur auspex
caupona cena clientela contio domus ius ludos
ministra mos ora otium praetor quaestio res
mancipi sacerdos status suovetaurilia tabella
tribunus plebis via vir</code></pre></td></tr></table>
</div>
</div>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/luOPoq5WX5Dgd4fTJkAHxsnpr" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/luOPoq5WX5Dgd4fTJkAHxsnpr.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/luOPoq5WX5Dgd4fTJkAHxsnpr.js" id="asciicast-luOPoq5WX5Dgd4fTJkAHxsnpr" async></script>
<h3 id="gpt-3-language-detection-and-translation">GPT-3 Language detection and translation</h3>
<dl>
<dt>language</dt>
<dd>Latin</dd>
</dl>
<p>English translation:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">aedile advocate authority augur inn auctioneer
dinner clientele assembly law games officer
custom feast judge quest mancipium priest
status sacrifice suovetaurilia table plebeian
tribune road man</code></pre></td></tr></table>
</div>
</div>
<p>This are not exactly lined up perfectly, but
the text generator did a great job.</p>
<table>
<thead>
<tr>
<th>Latin</th>
<th>English</th>
</tr>
</thead>
<tbody>
<tr>
<td>aedilitas</td>
<td>aedile</td>
</tr>
<tr>
<td>advocatus</td>
<td>advocate</td>
</tr>
<tr>
<td>auctoritas</td>
<td>authority</td>
</tr>
<tr>
<td>augur</td>
<td>augur</td>
</tr>
<tr>
<td>auspex</td>
<td>inn</td>
</tr>
<tr>
<td>caupona</td>
<td>auctioneer</td>
</tr>
<tr>
<td>cena</td>
<td>dinner</td>
</tr>
<tr>
<td>clientela</td>
<td>clientele</td>
</tr>
<tr>
<td>contio</td>
<td>assembly</td>
</tr>
<tr>
<td>domus</td>
<td>law</td>
</tr>
<tr>
<td>ius</td>
<td>games</td>
</tr>
<tr>
<td>ludos</td>
<td>officer</td>
</tr>
<tr>
<td>ministra</td>
<td></td>
</tr>
<tr>
<td>mos</td>
<td>custom</td>
</tr>
<tr>
<td>ora</td>
<td>feast</td>
</tr>
<tr>
<td>otium</td>
<td>judge</td>
</tr>
<tr>
<td>praetor</td>
<td>quest</td>
</tr>
<tr>
<td>quaestio</td>
<td>mancipium</td>
</tr>
<tr>
<td>res mancipi</td>
<td>priest</td>
</tr>
<tr>
<td>sacerdos</td>
<td></td>
</tr>
<tr>
<td>status</td>
<td>status</td>
</tr>
<tr>
<td>suovetaurilia</td>
<td>sacrifice</td>
</tr>
<tr>
<td>tabella</td>
<td>suovetaurilia</td>
</tr>
<tr>
<td>tribunus plebis</td>
<td>table</td>
</tr>
<tr>
<td>via</td>
<td>plebeian tribune</td>
</tr>
<tr>
<td>vir</td>
<td>road</td>
</tr>
<tr>
<td></td>
<td>man</td>
</tr>
</tbody>
</table>
<h2 id="prompts">Prompts</h2>
<h3 id="translate-anything-to-english">Translate anything to English</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Translate to English&#34;</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;This prompt translates text in any world langauge to English&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following passages are translated into English.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    La clase Monad esta disenada para
</span><span style="color:#e6db74">    describir tipos/estructuras de datos en
</span><span style="color:#e6db74">    los que sea necesario manejar un contexto
</span><span style="color:#e6db74">    de forma transparente al usuario.
</span><span style="color:#e6db74">    Original language: Spanish.
</span><span style="color:#e6db74">    English translation:
</span><span style="color:#e6db74">    The Monad class is designed to describe
</span><span style="color:#e6db74">    data types / structures in which it is
</span><span style="color:#e6db74">    necessary to handle a context in a
</span><span style="color:#e6db74">    transparent way to the user.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Puis-je avoir une baguette s&#39;il vous plaît?
</span><span style="color:#e6db74">    Original language: French
</span><span style="color:#e6db74">    English translation:
</span><span style="color:#e6db74">    Could I have a baguette please?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Der Begriff deutsch als Bezeichnung für das Volk der Deutschen, die deutsche Sprache bzw. Deutschland verfügt in den verschiedenen Sprachen der Welt über untereinander ähnliche wie auch äußerst unterschiedliche Wörter.
</span><span style="color:#e6db74">    Original language: German
</span><span style="color:#e6db74">    English translation:
</span><span style="color:#e6db74">    The term German as a term for the people of the Germans, the German language or Germany has similar and extremely different words in the various languages of the world.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    &lt;1&gt;
</span><span style="color:#e6db74">    &lt;:pp&gt;Original language:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">200</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;text&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;Pero, que es el contexto?&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="english-to-japanese">English to Japanese</h3>
<p>A prompt for translating to and from specific
languages could be more reliable in particular cases.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;English to Japanese&#34;</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">2</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    Translate to Japanese.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    English: Give me a home among the gumtrees.
</span><span style="color:#e6db74">    Japanese: ガムツリーの中に家をください。
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    English: Could I have a baguette please?
</span><span style="color:#e6db74">    Japanese: バゲットを頂けますか？
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    English: See you later!
</span><span style="color:#e6db74">    Japanese: じゃあまたね！
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    English: &lt;1&gt;
</span><span style="color:#e6db74">    Japanese:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">100</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#e6db74">&#34;\n&#34;</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#e6db74">&#34;\n&#34;</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;english prose&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;I love you.&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>GPT-3 mind maps with an AI tutor for any topic</title>
            <link>http://semiosis.github.io/posts/gpt-3-for-building-mind-maps-with-an-ai-tutor-for-any-topic/</link>
            <pubDate>Mon, 29 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/gpt-3-for-building-mind-maps-with-an-ai-tutor-for-any-topic/</guid>
            <description>Code http://github.com/semiosis/pen.el Prompts http://github.com/semiosis/prompts  Summary I combine GPT-3 with org-brain to expand on topics, suggesting subtopics and providing an interactive tutor for any topic.
Demonstration Subtopic generation I demonstrate how to explore arbitrary topics with GPT-3 by automatically generating subtopics, and then allowing you to invoke the GPT-3 tutor to answer questions within that context.
 --  Tutor demonstration  Rolling conversation is a work in progress, but on its way.</description>
            <content type="html"><![CDATA[<dl>
<dt>Code</dt>
<dd><a href="http://github.com/semiosis/pen.el">http://github.com/semiosis/pen.el</a></dd>
<dt>Prompts</dt>
<dd><a href="http://github.com/semiosis/prompts">http://github.com/semiosis/prompts</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I combine GPT-3 with <code>org-brain</code> to expand on
topics, <strong>suggesting</strong> subtopics and providing an
interactive tutor for any topic.</p>
<h2 id="demonstration">Demonstration</h2>
<h3 id="subtopic-generation">Subtopic generation</h3>
<p>I demonstrate how to explore arbitrary topics
with GPT-3 by automatically generating
subtopics, and then allowing you to invoke the
GPT-3 tutor to answer questions within that
context.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/3D1xmyAB3wZiPMu3d7rnK8Izd" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/3D1xmyAB3wZiPMu3d7rnK8Izd.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/3D1xmyAB3wZiPMu3d7rnK8Izd.js" id="asciicast-3D1xmyAB3wZiPMu3d7rnK8Izd" async></script>
<h3 id="tutor-demonstration">Tutor demonstration</h3>
<ul>
<li>Rolling conversation is a work in progress, but on its way.</li>
</ul>
<p><span class="underline"><strong>Learn about AI</strong></span></p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/tV37yuypzU8C4ttDL4w24HOtx" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/tV37yuypzU8C4ttDL4w24HOtx.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/tV37yuypzU8C4ttDL4w24HOtx.js" id="asciicast-tV37yuypzU8C4ttDL4w24HOtx" async></script>
<p><span class="underline"><strong>Learn about microbiology</strong></span></p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/R25hFKsdKc1wcfbMGeXnXa0iJ" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/R25hFKsdKc1wcfbMGeXnXa0iJ.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/R25hFKsdKc1wcfbMGeXnXa0iJ.js" id="asciicast-R25hFKsdKc1wcfbMGeXnXa0iJ" async></script>
<h2 id="code">Code</h2>
<h3 id="subtopic-prompt">Subtopic prompt</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;subtopic generation&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following is a list of subtopics relating to microbiology:
</span><span style="color:#e6db74">    - Bacteriology
</span><span style="color:#e6db74">    - Mycology
</span><span style="color:#e6db74">    - Protozoology
</span><span style="color:#e6db74">    - Phycology/algology
</span><span style="color:#e6db74">    - Parasitology
</span><span style="color:#e6db74">    - Immunology
</span><span style="color:#e6db74">    - Virology
</span><span style="color:#e6db74">    - Nematology
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    The following is a list of subtopics relating to natural language processing / NLP:
</span><span style="color:#e6db74">    - extractive question answering
</span><span style="color:#e6db74">    - language modelling
</span><span style="color:#e6db74">    - named entity recognition
</span><span style="color:#e6db74">    - sequence classification
</span><span style="color:#e6db74">    - summarization
</span><span style="color:#e6db74">    - text generation
</span><span style="color:#e6db74">    - topic modelling
</span><span style="color:#e6db74">    - translation
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    The following is a list of subtopics relating to language modelling in NLP:
</span><span style="color:#e6db74">    - casual language modelling
</span><span style="color:#e6db74">    - masked language modelling
</span><span style="color:#e6db74">    - gext generation
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    The following is a list of subtopics relating to &lt;1&gt;:
</span><span style="color:#e6db74">    -</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#75715e"># Cache the function by default when running the prompt function</span>
<span style="color:#f92672">cache</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;topic&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;Advanced Type Systems in Haskell&#34;</span>
<span style="color:#75715e"># External provides an alternate script that performs the same function</span>
<span style="color:#75715e"># external:</span>
<span style="color:#75715e"># - &#34;extract-keyphrases&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="tutor-prompt">Tutor prompt</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">title: <span style="color:#e6db74">&#34;Generic tutor for any topic&#34;</span>
prompt: <span style="color:#f92672">|+</span>
    This <span style="color:#f92672">is</span> a conversation between a human <span style="color:#f92672">and</span> a brilliant AI<span style="color:#f92672">.</span>
    The topic <span style="color:#f92672">is</span> <span style="color:#e6db74">&#34;&lt;1&gt;&#34;</span><span style="color:#f92672">.</span>

    Human: Hello, are you my <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">2</span><span style="color:#f92672">&gt;</span> tutor<span style="color:#960050;background-color:#1e0010">?</span>
    <span style="color:#75715e">###</span>
    AI: Hi there<span style="color:#f92672">.</span> Yes I am<span style="color:#f92672">.</span> How can I help you today<span style="color:#960050;background-color:#1e0010">?</span>
    <span style="color:#75715e">###</span>
    Human: What questions can I ask you about <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">1</span><span style="color:#f92672">&gt;</span><span style="color:#960050;background-color:#1e0010">?</span>
    <span style="color:#75715e">###</span>
    AI: You may ask me anything relating to <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">2</span><span style="color:#f92672">&gt;.</span>
    <span style="color:#75715e">###</span>
    Human: OK then<span style="color:#f92672">.</span> <span style="color:#f92672">&lt;</span><span style="color:#ae81ff">3</span><span style="color:#f92672">&gt;</span>
    <span style="color:#75715e">###</span>
    AI: I would be happy to answer your question<span style="color:#f92672">.</span>
engine: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
temperature: <span style="color:#ae81ff">0.8</span>
max<span style="color:#f92672">-</span>tokens: <span style="color:#ae81ff">60</span>
top<span style="color:#f92672">-</span>p: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
frequency<span style="color:#f92672">-</span>penalty: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
presence<span style="color:#f92672">-</span>penalty: <span style="color:#ae81ff">0.0</span>
best<span style="color:#f92672">-</span>of: <span style="color:#ae81ff">3</span>
stop<span style="color:#f92672">-</span>sequences:
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;###&#34;</span>
inject<span style="color:#f92672">-</span>start<span style="color:#f92672">-</span>text: yes
inject<span style="color:#f92672">-</span>restart<span style="color:#f92672">-</span>text: yes
show<span style="color:#f92672">-</span>probabilities: off
vars:
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;topic&#34;</span>
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;in the context of&#34;</span>
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;question&#34;</span>
examples:
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;node js&#34;</span>
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;programming&#34;</span>
<span style="color:#f92672">-</span> <span style="color:#e6db74">&#34;What was the version of node in 2018?&#34;</span>
chomp<span style="color:#f92672">-</span>start: on
chomp<span style="color:#f92672">-</span>end: off
external: <span style="color:#e6db74">&#34;&#34;</span>
conversation<span style="color:#f92672">-</span>mode: no
filter: no
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
stitch<span style="color:#f92672">-</span>max: <span style="color:#ae81ff">0</span>
needs<span style="color:#f92672">-</span>work: no</code></pre></td></tr></table>
</div>
</div>
<h3 id="elisp-for-the-tutor">elisp for the tutor</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun org-brain-name-from-list-maybe (l)
  (if (and (<span style="color:#a6e22e">listp</span> l)
           (<span style="color:#a6e22e">&gt;</span> (<span style="color:#a6e22e">length</span> l) <span style="color:#ae81ff">1</span>))
      (second l)
    l))

(defun org-brain-remove-irrelevant-names-from-path (path)
  (-filter
   (lambda
     (e)
     (not
      (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;infogetics&#34;</span> e)))
   path))

(defun org-brain-parent-name ()
  (snc <span style="color:#e6db74">&#34;s join&#34;</span>
       (list2str
        (org-brain-remove-irrelevant-names-from-path
         (<span style="color:#a6e22e">mapcar</span>
          <span style="color:#e6db74">&#39;org-brain-name-from-list-maybe</span>
          (org-brain-parents org-brain--vis-entry))))))

(defun org-brain-current-name ()
  (<span style="color:#a6e22e">car</span>
   (org-brain-remove-irrelevant-names-from-path
    (<span style="color:#a6e22e">mapcar</span>
     <span style="color:#e6db74">&#39;org-brain-name-from-list-maybe</span>
     (<span style="color:#a6e22e">list</span> org-brain--vis-entry)))))

(defun org-brain-current-topic (<span style="color:#66d9ef">&amp;optional</span> for-external-searching)
  (interactive)
  (let ((path
         (<span style="color:#a6e22e">mapcar</span>
          <span style="color:#e6db74">&#39;org-brain-name-from-list-maybe</span>
          (<span style="color:#a6e22e">append</span> (org-brain-parents org-brain--vis-entry) (<span style="color:#a6e22e">list</span> org-brain--vis-entry)))))

    (setq path
          (if for-external-searching
              (-filter (lambda (e) (not (<span style="color:#a6e22e">string-equal</span> <span style="color:#e6db74">&#34;infogetics&#34;</span> e))) path)
            path))
    (let ((topic
           (chomp (<span style="color:#a6e22e">apply</span> <span style="color:#e6db74">&#39;cmd</span> path))))
      (if (interactive-p)
          (etv topic)
        topic))))

(defun org-brain-asktutor (question)
  (interactive (<span style="color:#a6e22e">list</span> (read-string-hist (<span style="color:#a6e22e">concat</span> (org-brain-current-topic) <span style="color:#e6db74">&#34;: &#34;</span>))))
  (mu
   (etv
    (snc
     (<span style="color:#a6e22e">concat</span>
      (cmd
       <span style="color:#e6db74">&#34;oci&#34;</span>
       <span style="color:#e6db74">&#34;openai-complete&#34;</span>
       <span style="color:#e6db74">&#34;$MYGIT/semiosis/prompts/prompts/tutor.prompt&#34;</span>
       (org-brain-current-name)
       (org-brain-parent-name)
       question)
      <span style="color:#e6db74">&#34; | tpp&#34;</span>)))))</code></pre></td></tr></table>
</div>
</div>
<h3 id="elisp-for-subtopic-generation">elisp for subtopic generation</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun org-brain-suggest-subtopics (<span style="color:#66d9ef">&amp;optional</span> update)
  (interactive)
  (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Using pen.el to suggest subtopics...&#34;</span>)
  (let ((subtopic-candidates
         <span style="color:#75715e">;; (pen-pf-keyword-extraction (org-brain-current-topic t))</span>
         (let ((sh-update (or sh-update
                              update
                              (<span style="color:#a6e22e">eq</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">4</span>))))
           (let ((s (pen-pf-subtopic-generation (org-brain-pf-topic) (org-brain-existing-subtopics-stringlist))))
             (if (not (sor s))
                 (progn
                   (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Empty generation 1/3. Trying again.&#34;</span>)
                   (setq s (upd (pen-pf-subtopic-generation (org-brain-pf-topic) (org-brain-existing-subtopics-stringlist))))
                   (if (not (sor s))
                       (progn
                         (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Empty generation 2/3. Trying again.&#34;</span>)
                         (setq s (upd (pen-pf-subtopic-generation (org-brain-pf-topic) (org-brain-existing-subtopics-stringlist))))
                         (if (not (sor s))
                             (progn
                               (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Empty generation 3/3. Giving up.&#34;</span>)
                               (<span style="color:#a6e22e">error</span> <span style="color:#e6db74">&#34;Empty generation 3/3. Giving up.&#34;</span>))
                           s))
                     s)
                   s)
               s)))))

    (setq subtopic-candidates
          (str2list
           (cl-sn
            <span style="color:#e6db74">&#34;sed &#39;s/^- //&#39;&#34;</span>
            :stdin
            (chomp
             (snc
              (cmd <span style="color:#e6db74">&#34;scrape&#34;</span> <span style="color:#e6db74">&#34;^- [a-zA-Z -]+$&#34;</span>)
              (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;- &#34;</span> subtopic-candidates))) :chomp <span style="color:#66d9ef">t</span>)))

    <span style="color:#75715e">;; (ns current-prefix-arg)</span>
    (if (interactive-p)
        (let ((subtopic-selected
               (try
                (cond
                 ((or (<span style="color:#a6e22e">&gt;=</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">16</span>)
                      (<span style="color:#a6e22e">&gt;=</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">32</span>))
                  (let ((b (nbfs (list2str subtopic-candidates))))
                    (with-current-buffer b
                      (let ((r (if (yn <span style="color:#e6db74">&#34;Add all?&#34;</span>)
                                   subtopic-candidates)))
                        (<span style="color:#a6e22e">kill-buffer</span> b)
                        r))))
                 (<span style="color:#66d9ef">t</span>
                  <span style="color:#75715e">;; Select one, do not refresh cache</span>
                  (<span style="color:#a6e22e">list</span> (fz subtopic-candidates)))))))
          (if subtopic-selected
              (cl-loop for st in subtopic-selected do
                       (org-brain-add-child-headline org-brain--vis-entry st))))
      subtopic-candidates)))</code></pre></td></tr></table>
</div>
</div>
<h2 id="pen-dot-el-improvements"><code>pen.el</code> improvements</h2>
<ul>
<li>The plan is to link <code>.prompt</code> (prompt description) files into a graph format where fungible prompts can be noticed.</li>
<li>Conversation mode.
<ul>
<li>Summarize the current conversation scope and also extract facts from it. Use this in the next prompt.</li>
<li>This will create a chatbot with rolling conversation.</li>
<li><a href="http://github.com/semiosis/prompts/blob/master/prompts/meeting-bullets-to-summary.prompt">http://github.com/semiosis/prompts/blob/master/prompts/meeting-bullets-to-summary.prompt</a></li>
<li><a href="http://github.com/semiosis/prompts/blob/master/prompts/tldr.prompt">http://github.com/semiosis/prompts/blob/master/prompts/tldr.prompt</a></li>
<li><a href="http://github.com/semiosis/prompts/blob/master/prompts/tutor.prompt">http://github.com/semiosis/prompts/blob/master/prompts/tutor.prompt</a></li>
</ul>
</li>
</ul>
<h2 id="extra-demos">Extra demos</h2>
<h3 id="learning-the-flamenco-guitar-subtopic-generation-and-tutor">Learning the flamenco guitar &ndash; subtopic generation and tutor</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/JA82zhiL4Su0LVufE7gqH7Mej" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/JA82zhiL4Su0LVufE7gqH7Mej.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/JA82zhiL4Su0LVufE7gqH7Mej.js" id="asciicast-JA82zhiL4Su0LVufE7gqH7Mej" async></script>
<h3 id="asking-the-ai-professor-about-paleoceanography">Asking the AI professor about Paleoceanography</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/9D6Ws3G0OvSAWnrLMtXJoDXoA" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/9D6Ws3G0OvSAWnrLMtXJoDXoA.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/9D6Ws3G0OvSAWnrLMtXJoDXoA.js" id="asciicast-9D6Ws3G0OvSAWnrLMtXJoDXoA" async></script>]]></content>
        </item>
        
        <item>
            <title>Generating pickup lines with GPT-3</title>
            <link>http://semiosis.github.io/posts/generating-pickup-lines-with-gpt-3/</link>
            <pubDate>Sat, 27 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/generating-pickup-lines-with-gpt-3/</guid>
            <description>Latest version of the pick up lines prompt http://github.com/mullikine/prompts/blob/master/prompts/pick-up-line.prompt Original Pick-up-lines prompt by Jan Kolar https://www.producthunt.com/posts/500-openers-for-tinder-written-by-gpt-3 \
https://www.reddit.com/r/GPT3/comments/mdl7fl/500%5Fopeners%5Ffor%5Ftinder%5Fwritten%5Fby%5Fgpt3%5Fthe%5Fprompt/  Summary I create a prompt in my prompt description format and use it to generate some pickup lines.
Demonstration (v2 with emacs counsel integration) New results are fed into a fuzzy finder as they are generated. I can stop and select at any time.
 --  Demonstration (version 2)  --  Pick up lines with the topic &amp;ldquo;SETTLERS OF CATAN&amp;rdquo; ⌂ ⌂⌂ ━ ━ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  When playing Settlers of Catan, the shortest route is a straight line to my heart.</description>
            <content type="html"><![CDATA[<dl>
<dt>Latest version of the pick up lines prompt</dt>
<dd><a href="http://github.com/mullikine/prompts/blob/master/prompts/pick-up-line.prompt">http://github.com/mullikine/prompts/blob/master/prompts/pick-up-line.prompt</a></dd>
<dt>Original Pick-up-lines prompt by Jan Kolar</dt>
<dd><a href="https://www.producthunt.com/posts/500-openers-for-tinder-written-by-gpt-3">https://www.producthunt.com/posts/500-openers-for-tinder-written-by-gpt-3</a> \<br>
<a href="https://www.reddit.com/r/GPT3/comments/mdl7fl/500%5Fopeners%5Ffor%5Ftinder%5Fwritten%5Fby%5Fgpt3%5Fthe%5Fprompt/">https://www.reddit.com/r/GPT3/comments/mdl7fl/500%5Fopeners%5Ffor%5Ftinder%5Fwritten%5Fby%5Fgpt3%5Fthe%5Fprompt/</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I create a prompt in my prompt description
format and use it to generate some pickup
lines.</p>
<h2 id="demonstration--v2-with-emacs-counsel-integration">Demonstration (v2 with emacs counsel integration)</h2>
<p>New results are fed into a fuzzy finder as they are generated. I can stop and select at any time.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/vEP2XXQb6UYUchVLC8MOq0xoQ" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/vEP2XXQb6UYUchVLC8MOq0xoQ.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/vEP2XXQb6UYUchVLC8MOq0xoQ.js" id="asciicast-vEP2XXQb6UYUchVLC8MOq0xoQ" async></script>
<h2 id="demonstration--version-2">Demonstration (version 2)</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/Dn3gncKZzJWdJ4PE4qCJPSwpF" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/Dn3gncKZzJWdJ4PE4qCJPSwpF.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/Dn3gncKZzJWdJ4PE4qCJPSwpF.js" id="asciicast-Dn3gncKZzJWdJ4PE4qCJPSwpF" async></script>
<h3 id="pick-up-lines-with-the-topic-settlers-of-catan">Pick up lines with the topic &ldquo;SETTLERS OF CATAN&rdquo; ⌂ ⌂⌂ ━ ━</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">When playing Settlers of Catan, the shortest route is a straight line to my heart.
I wish you were a Settler so we could settle down together.
What do you want to trade me for one of your sheep?
Do you play Catan? Cuz I think you&#39;d be a great development card for me.
May I join your settlement?
I&#39;m not sure if you&#39;re a settlement that I want to build up or a barbarian I want to raze.
Do you play settlers of Catan? You should play with me.
I&#39;d Like to settle on your face.
I&#39;d like to settle between your settlements.
Do you have any wool? I want to get sheep with you.
I&#39;d Like to settle down on Catan with you.
I think you&#39;re something special, like a good card in Catan.
When we play Settlers of Catan, I&#39;ll trade a brick for you.
I&#39;m happy to be on your game board.
I like you a lot! I like you so much I&#39;d trade all my sheep for you.
Settlers need resources, and I need you.
I like you a lot. I&#39;d like to trade you for a sheep.
Do you Like Settlers of Catan? Cuz I&#39;d Like to settle on your land.
You look like a settler I&#39;d like to settle with.
If you were settlers of Catan, you&#39;d be the grain.
Can I be the robber to your resources?
I&#39;m a fan of Settlers of Catan, and I&#39;d like you to be my 10.
I want to settle my people on your resources.
I&#39;m a settler looking for a hex that will settle.
You look like a woman I&#39;d like to settle island with.
I&#39;d like to settle along your rivers and settle your hills.
You look like the type of girl I&#39;d like to settle in a small island with.
I&#39;d like to trade hexes with you.</code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstration--version-1-not-as-good">Demonstration (version 1, not as good)</h2>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/Fio4sczoyqk5dMttvd36Dn5h2" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/Fio4sczoyqk5dMttvd36Dn5h2.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/Fio4sczoyqk5dMttvd36Dn5h2.js" id="asciicast-Fio4sczoyqk5dMttvd36Dn5h2" async></script>
<h2 id="original-batch-of-pick-up-lines">Original batch of pick up lines</h2>
<p>These appeared to be more like questions.</p>
<h3 id="topic-harry-potter">Topic: &ldquo;Harry Potter&rdquo;</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">What house would you be sorted into?
How many times have you watched the entire Harry Potter series?
Where would you go on your dream date with Hermione Granger?
When did you realize you were a wizard?
Do you believe we have a chance at world peace?
Are you OK with me using the Patronus charm to tell you I love you?</code></pre></td></tr></table>
</div>
</div>
<h3 id="topic-dancing">Topic: &ldquo;dancing&rdquo;</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">What’s the last song you danced to?
You’re my favorite dance move.
Would you rather be a great dancer or a great singer?
Can you dance in the rain?
Can you do the robot?
If you could only dance to one song for the rest of your life, what song would it be?</code></pre></td></tr></table>
</div>
</div>
<h3 id="breakdown-of-the-original-prompt">Breakdown of the original prompt</h3>
<ul>
<li>Design patterns used:
<ul>
<li><a href="http://github.com/semiosis/prompt-engineering-patterns/blob/master/patterns/multiplex-answers.org">mulitplex pattern</a></li>
<li><a href="http://github.com/semiosis/prompt-engineering-patterns/blob/master/patterns/use-separator-between-examples.org">### pattern</a></li>
<li><a href="http://github.com/semiosis/prompt-engineering-patterns/blob/master/patterns/reflective-description-of-task.org">prelude pattern</a></li>
</ul>
</li>
</ul>
<p>This prompt multiplexes answers.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;generate pick up line&#34;</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;Generate pick up lines from a topic&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following are witty openers for Tinder:
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: BOOKS
</span><span style="color:#e6db74">    OPENERS:
</span><span style="color:#e6db74">    I’m starting a book club, but my house is too small.
</span><span style="color:#e6db74">    Which Harry Potter house do you belong to?
</span><span style="color:#e6db74">    If you were asked to live your life as any book character, which one would you choose?
</span><span style="color:#e6db74">    Tell me three things you have in common with your favorite book character.
</span><span style="color:#e6db74">    Have you ever swam through an entire book?
</span><span style="color:#e6db74">    What book had the biggest impact on your life?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: &lt;1&gt;
</span><span style="color:#e6db74">    OPENERS:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;topic&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;music&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="further-exploration">Further exploration</h2>
<p>I wonder if I put the temperature down to 0 if
the pickup lines would all come out autistic.
and if I raised it to 1, the pickup lines
would be super random &ndash; you know crazy girls
might like that.</p>
<h3 id="temperature-0-dot-0"><code>temperature: 0.0</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">What’s your favorite Harry Potter spell?
What’s your patronus?
What’s your favorite Harry Potter character?
What’s your favorite Harry Potter movie?
What’s your favorite Harry Potter book?
What’s your favorite Harry Potter character?
What’s your favorite Harry Potter spell?
What’s your favorite Harry Potter movie?
What’s your favorite Harry Potter book?
What’s your favorite Harry Potter character?
What’s your favorite Harry Potter spell?
What’s your favorite Harry Potter movie?
What’s your favorite Harry Potter book?
What’s your favorite Harry Potter character?
What’s your favorite Harry Potter spell?
What’s your favorite Harry Potter movie?</code></pre></td></tr></table>
</div>
</div>
<h3 id="temperature-1-dot-0"><code>temperature: 1.0</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">To your mind, what is the mixture of Hufflepuff, Slytherin, and Gryffindor?
Did you know that Hermione Granger wasn’t real, she was just an illusion that you created in order to tell yourself that you didn’t have any hope of living a normal life?</code></pre></td></tr></table>
</div>
</div>
<p>Oh my goodness. I love this.
I&rsquo;m keeping temperature 1.0. This is me in real life, actually.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/hAdkA7aBewFbNVEmRCNwgcnfq" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/hAdkA7aBewFbNVEmRCNwgcnfq.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/hAdkA7aBewFbNVEmRCNwgcnfq.js" id="asciicast-hAdkA7aBewFbNVEmRCNwgcnfq" async></script>
<h2 id="version-2">Version 2</h2>
<h3 id="techniques-to-making-a-better-prompt">Techniques to making a better prompt</h3>
<ul>
<li>Use query reformulation (pick the best ones and feed back in to improve the prompt)</li>
<li>Use a generic completer to more rapidly redesign the prompt</li>
<li>I label each generated pick up line so the new generations are more specific when leaving a label out that I want to avoid</li>
</ul>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">125
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">126
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">127
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">128
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">129
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">130
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">131
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">132
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">133
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">134
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">135
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">136
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">137
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">138
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">139
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">140
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">141
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">142
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">143
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">144
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">145
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">146
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">147
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Very witty pick up lines for a topc&#34;</span>
<span style="color:#75715e"># future-titles: &#34;&#34;</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - More abstractive rewording</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;Given a topic, generate pick up lines, one at a time&#34;</span>
<span style="color:#75715e"># aims: |+</span>
<span style="color:#75715e"># - Successful</span>
<span style="color:#f92672">prompt-version</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The following are witty openers for Tinder:
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: CATS AND DRUGS
</span><span style="color:#e6db74">    - Can I call you my catnip?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: CATS
</span><span style="color:#e6db74">    - If I said you had a purrfect body, would you hold it against me?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: CATS AND HAPPINESS
</span><span style="color:#e6db74">    - Do you want to be my cat? You&#39;ll get fed, I&#39;ll pet you, you&#39;ll stay warm, and we&#39;ll both be happy.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: CATS AND FOOD
</span><span style="color:#e6db74">    - You look like you&#39;d taste good with a little milk.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: PIZZA
</span><span style="color:#e6db74">    - You look like a slice of heaven.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: PIZZA INNUENDO
</span><span style="color:#e6db74">    - If you were a pizza, you would be half cheese and half toppings.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: NACHOS INNUENDO
</span><span style="color:#e6db74">    - Do you want to be my dipping sauce?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: FOOD ANALOGY
</span><span style="color:#e6db74">    - You look like the salt to my pepper.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: SLEEP INNUENDO
</span><span style="color:#e6db74">    - Are you a good pillow talker or a bad pillow talker?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: SLEEP ANALOGY
</span><span style="color:#e6db74">    - You&#39;re like the sun in the morning.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: VIDEO GAMES
</span><span style="color:#e6db74">    - Are people ever mean to you in games for being too cute?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: VIDEO GAMES
</span><span style="color:#e6db74">    - You look like the type of girl I want to be a Pokemon trainer to.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: TRAVEL
</span><span style="color:#e6db74">    - I want some of your culture.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: TRAVEL
</span><span style="color:#e6db74">    - I want to explore every part of you.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: STARCRAFT
</span><span style="color:#e6db74">    - I&#39;m glad I scouted you.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: TRAVEL
</span><span style="color:#e6db74">    - I think your exotic.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: TRAVEL
</span><span style="color:#e6db74">    - I&#39;m at the airport, looking at the plane schedule. Now all I need is you.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: TACOS AND INNUENDO
</span><span style="color:#e6db74">    - You look like the type that would be good with a little hot sauce.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: ASTRONAUTS
</span><span style="color:#e6db74">    - I think we should make space travel plans.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: ASTRONAUTS AND INNUENDO
</span><span style="color:#e6db74">    - I&#39;d like to be your space shuttle.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: COFFEE
</span><span style="color:#e6db74">    - Do you like coffee? Cuz I like you a latte.
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    TOPIC: &lt;1&gt;
</span><span style="color:#e6db74">    -</span>    
<span style="color:#75715e"># # Additional transformation of prompt after the template</span>
<span style="color:#75715e"># prompt-filter: &#34;sed -z &#39;s/\s\+$//&#39;&#34;</span>
<span style="color:#75715e"># # Trailing whitespace is always removed</span>
<span style="color:#75715e"># prompt-remove-trailing-whitespace: on</span>
<span style="color:#75715e"># myrc will select the completion engine using my config.</span>
<span style="color:#75715e"># This may be openi-complete or something else</span>
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;myrc&#34;</span>
<span style="color:#75715e"># if nothing is selected in myrc and openapi-complete is used</span>
<span style="color:#75715e"># by default, then openai should select this engine.</span>
<span style="color:#f92672">preferred-openai-engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#75715e"># 0.0 = /r/hadastroke</span>
<span style="color:#75715e"># 1.0 = /r/iamveryrandom</span>
<span style="color:#75715e"># Use 0.3-0.8</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
<span style="color:#75715e"># - &#34;\n&#34;</span>
<span style="color:#75715e"># - &#34;\n\n&#34;</span>
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#75715e"># Cache the function by default when running the prompt function</span>
<span style="color:#f92672">cache</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;topic&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;tectonic plates&#34;</span>
<span style="color:#75715e"># Completion is for generating a company-mode completion function</span>
<span style="color:#75715e"># completion: on</span>
<span style="color:#75715e"># # default values for pen -- evaled</span>
<span style="color:#75715e"># # This is useful for completion commands.</span>
<span style="color:#75715e"># pen-defaults:</span>
<span style="color:#75715e"># - &#34;(detect-language)&#34;</span>
<span style="color:#75715e"># - &#34;(pen-preceding-text)&#34;</span>
<span style="color:#75715e"># These are elisp String-&gt;String functions and run from pen.el</span>
<span style="color:#75715e"># It probably runs earlier than the preprocessors shell scripts</span>
<span style="color:#f92672">pen-preprocessors</span>:
- <span style="color:#e6db74">&#34;tr &#39;[:lower:]&#39; &#39;[:upper:]&#39;&#34;</span>
<span style="color:#75715e"># # A preprocessor filters the var at that position</span>
<span style="color:#75715e"># the current implementation of preprocessors is kinda slow and will add ~100ml per variable</span>
<span style="color:#75715e"># # This may be useful to distinguish a block of text, for example</span>
<span style="color:#75715e"># preprocessors:</span>
<span style="color:#75715e"># - &#34;sed &#39;s/^/- /&#34;</span>
<span style="color:#75715e"># - &#34;cat&#34;</span>
<span style="color:#f92672">chomp-start</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">chomp-end</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">prefer-external</span>: <span style="color:#66d9ef">on</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#75715e"># Enable running conversation</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Replace selected text</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">n-test-runs</span>: <span style="color:#ae81ff">5</span>
<span style="color:#75715e"># Prompt function aliases</span>
<span style="color:#75715e"># aliases:</span>
<span style="color:#75715e"># - &#34;asktutor&#34;</span>
<span style="color:#75715e"># postprocessor: &#34;sed &#39;s/- //&#39; | uniqnosort&#34;</span>
<span style="color:#75715e"># Run it n times and combine the output</span>
<span style="color:#f92672">n-collate</span>: <span style="color:#ae81ff">10</span>
<span style="color:#f92672">postprocessor</span>: <span style="color:#e6db74">&#34;awk 1&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="pick-up-lines-with-the-topic-tectonic-plate">Pick up lines with the topic &ldquo;tectonic plate&rdquo;</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">I think we could make some beautiful earthquakes together.
I want to go down on you until you erupt like a tectonic plate.
I think we should meet at the fault-line.
We&#39;re plates tectonically.
I like you a lot.
Are you the one that moved my earth plate?
I feel an Earth-shaking connection.
I&#39;ve been looking for a long time to find a place like this.
We&#39;re like the same tectonic plate.
We fit together.
I&#39;m a tectonic plate shifting.
If you were a tectonic plate, I&#39;d want to be a volcano.
The only friction I want between us is in the bedroom.
You&#39;re the type of girl that I want to shift into a new continent with.
I think I can see your tectonic plates through your top.
I think we might be convergent.
The earth&#39;s plates just moved under me.
You&#39;re the tectonic plate I&#39;ve been looking for.
If you were a tectonic plate, I&#39;d be your subduction zone.
If you were a tectonic plate, I&#39;d want to be a subduction zone.
If we don&#39;t go on a date, we&#39;ll be tectonically doomed.
Did you feel it?
The earth just moved.
I&#39;d like to meet under the two continental plates.
Your smile is so magnetic, I feel the Earth move every time I see it.
I&#39;m hoping we can someday collide tectonically.
I&#39;d like to be on your plate.
You move me.
I like your tectonic plates.
You look like the type to go down and make a plate tectonic.
I want to be your tectonic plate.
I think that we would be a good tectonic plate couple.
We&#39;re like the tectonic plates of the Earth.
We&#39;ll never collide, but we&#39;ll have an earthquake whenever we meet.
I think we&#39;re two tectonic plates colliding.
I think we should meet up and move together.
You look like you&#39;re a tectonic plate subducting under a continental plate.</code></pre></td></tr></table>
</div>
</div>
<h3 id="pick-up-lines-with-the-topic-easter">Pick up lines with the topic &ldquo;Easter&rdquo;</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">I think you&#39;re the Easter egg I&#39;ve been hunting for all my life.
I hope you&#39;re not a rabbit, because I want to make you my pet.
I want to fill your basket.
I want to be the white chocolate bunny you squeeze to my heart&#39;s content.
Would you be my Easter bunny?
Do you celebrate Easter? Cuz I&#39;d like to be your Easter bunny.
I&#39;m just a little bunny-hop away from you.
I would like to give you a basket of treats.
I&#39;ll be good this year, Easter bunny.
What did the rabbit say to the other rabbit on Easter? Happy Easter bunnay!
I want to fill you up with some chocolate and one of my eggs.
I would egg-stra like to get to know you better.
I&#39;m a little rabbit, hopping down the bunny trail, looking for a good time.
Are you an easter bunny? Cuz I&#39;m gonna hide and seek you.
Are you the bunny that lays the golden eggs?</code></pre></td></tr></table>
</div>
</div>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/2sRonQkPhOdr5Kb6FZlQK7H57" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/2sRonQkPhOdr5Kb6FZlQK7H57.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/2sRonQkPhOdr5Kb6FZlQK7H57.js" id="asciicast-2sRonQkPhOdr5Kb6FZlQK7H57" async></script>
<h3 id="pick-up-lines-with-the-topic-computers">Pick up lines with the topic &ldquo;Computers&rdquo;</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Do you like computers? Cuz I&#39;d like to compute with you.
If you were a computer program, I&#39;d always choose to open you.
I&#39;d like to RAM you.
I turn you on?
I like your hard drive.
I think you are a hot piece of hardware.
I think my computer is broken because it won&#39;t stop saying I&#39;m single. May I borrow yours to fix it?
Do you like Apple products? Or would you rather I take you windows shopping?
I&#39;m in the computer lab with you, but all I can think about is taking you to my server.</code></pre></td></tr></table>
</div>
</div>
<h3 id="pick-up-lines-with-the-topic-solar-system">Pick up lines with the topic &ldquo;Solar System&rdquo;</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">If you were the sun, I&#39;d orbit around you.
I&#39;d like to be your sun.
I&#39;d like to be your universe.
You&#39;re the sun, I&#39;m the moon. You&#39;re the stars, I&#39;m the sky.
I think we were long distance once, but I finally found the distance I was looking for.
I&#39;m in love with Pluto. Wanna make out?
I&#39;d like to be your orbit.</code></pre></td></tr></table>
</div>
</div>
<h2 id="ideas">Ideas</h2>
<ul>
<li>Mix two topics to attempt to make them even wittier?</li>
</ul>
<h2 id="appendix">Appendix</h2>
<dl>
<dt>Original prompt</dt>
<dd><a href="https://www.reddit.com/r/GPT3/comments/mdl7fl/500%5Fopeners%5Ffor%5Ftinder%5Fwritten%5Fby%5Fgpt3%5Fthe%5Fprompt/">https://www.reddit.com/r/GPT3/comments/mdl7fl/500%5Fopeners%5Ffor%5Ftinder%5Fwritten%5Fby%5Fgpt3%5Fthe%5Fprompt/</a></dd>
</dl>
]]></content>
        </item>
        
        <item>
            <title>Autocompleting anything with GPT-3 in emacs</title>
            <link>http://semiosis.github.io/posts/autocompleting-anything-with-gpt-3-in-emacs/</link>
            <pubDate>Tue, 16 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/autocompleting-anything-with-gpt-3-in-emacs/</guid>
            <description>Emacs package https://github.com/semiosis/pen.el Help/developers desperately needed in developing pen.el! Prompt engineering is very easy so don&amp;rsquo;t be intimidated! Prompt http://github.com/semiosis/prompts/blob/master/prompts/generic-file-type-completion.prompt  Summary I make a prompt for the OpenAI API which completes given a file type and some preceding text.
I then make a company-mode completion function for it, and then demo its usage.
This gives me a generic completion mechanism when dealing with any type of document.
Demonstration This is GPT-3 completing some text for me.</description>
            <content type="html"><![CDATA[<dl>
<dt>Emacs package</dt>
<dd><a href="https://github.com/semiosis/pen.el">https://github.com/semiosis/pen.el</a>
Help/developers desperately needed in developing <code>pen.el</code>! Prompt engineering is very easy so don&rsquo;t be intimidated!</dd>
<dt>Prompt</dt>
<dd><a href="http://github.com/semiosis/prompts/blob/master/prompts/generic-file-type-completion.prompt">http://github.com/semiosis/prompts/blob/master/prompts/generic-file-type-completion.prompt</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I make a prompt for the OpenAI API which
completes given a file type and some preceding
text.</p>
<p>I then make a <code>company-mode</code> completion
function for it, and then demo its usage.</p>
<p>This gives me a generic completion mechanism
when dealing with any type of document.</p>
<h2 id="demonstration">Demonstration</h2>
<p>This is GPT-3 completing some text for me.</p>
<p>I can type a few characters and then GPT-3
will complete the rest of the text.</p>
<p>These generations use the exact same prompt,
found with the code at the end of this
article.</p>
<h3 id="generating-c-plus-plus">Generating <code>C++</code></h3>
<p>I generate a class with particular methods by
writing the docstring first.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/iqVs8kv3PxiQkZyXASQURNSqX" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/iqVs8kv3PxiQkZyXASQURNSqX.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/iqVs8kv3PxiQkZyXASQURNSqX.js" id="asciicast-iqVs8kv3PxiQkZyXASQURNSqX" async></script>
<h3 id="generating-python-code-with-gpt-3">Generating <code>python</code> code with GPT-3</h3>
<p>I generate a class with particular methods by
writing the docstring first.</p>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/a5dDY1goh2kWkUQQpPPsGZ87q" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/a5dDY1goh2kWkUQQpPPsGZ87q.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/a5dDY1goh2kWkUQQpPPsGZ87q.js" id="asciicast-a5dDY1goh2kWkUQQpPPsGZ87q" async></script>
<h3 id="generate-prose">Generate prose</h3>
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/QpZSIuMPlwBQhP6hgr0qKrTh7" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/QpZSIuMPlwBQhP6hgr0qKrTh7.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/QpZSIuMPlwBQhP6hgr0qKrTh7.js" id="asciicast-QpZSIuMPlwBQhP6hgr0qKrTh7" async></script>
<p>This demonstration has shown that I can
complete prose within an org file and complete
python code, using <code>GPT-3</code>.</p>
<h2 id="commentary">Commentary</h2>
<p>I think being able to make your own autocompletion functions will come in very
handy.</p>
<p>When GPT-3 finetuning is made available or alternatives for fine-tuning or
training large language models are available, there will be also be the
landscape of specialised language models for writing or coding in different
languages or styles.</p>
<p>Being able to step into the <strong>style</strong> of programming or writing of your choosing,
it will become important to have a fully featured editing environment
(autocompletion, error checking, etc.). Emacs provides a framework for
reasoning about these environments and building new ones.</p>
<p>If a &lsquo;prompt hub&rsquo; prompt curation server exists, the editing landscape will be
flooded with options on styles and languages to work within, along with editing
functions.</p>
<h2 id="code">Code</h2>
<h3 id="openai-api-prompt-generic-file-type-completion-dot-prompt"><code>OpenAI</code> API prompt - <code>generic-file-type-completion.prompt</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Generic file type completion&#34;</span>
<span style="color:#f92672">doc</span>: |-<span style="color:#e6db74">
</span><span style="color:#e6db74">    </span>    <span style="color:#ae81ff">This is a generic completer for emacs.</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    File type: &lt;1&gt;
</span><span style="color:#e6db74">    Contents:
</span><span style="color:#e6db74">    &lt;2&gt;</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#75715e"># Not available yet: openai api completions.create --help</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;\n\n&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;file type&#34;</span>
- <span style="color:#e6db74">&#34;preceding text&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;python&#34;</span>
- <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span>
<span style="color:#f92672">needs-work</span>: <span style="color:#66d9ef">no</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="elisp-pen-dot-el">elisp - <code>pen.el</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun company-pen-filetype--candidates (prefix)
  (let* ((preceding-text (str (<span style="color:#a6e22e">buffer-substring</span> (<span style="color:#a6e22e">point</span>) (<span style="color:#a6e22e">max</span> <span style="color:#ae81ff">1</span> (<span style="color:#a6e22e">-</span> (<span style="color:#a6e22e">point</span>) <span style="color:#ae81ff">1000</span>)))))
         (response (pen-pf-generic-file-type-completion (detect-language) preceding-text))
         <span style="color:#75715e">;; Take only the first line for starters</span>
         (line (<span style="color:#a6e22e">car</span> (str2lines response)))
         (res (str2list (snc <span style="color:#e6db74">&#34;monotonically-increasing-tuple-permutations.py&#34;</span> line))))
    <span style="color:#75715e">;; Generate a list</span>
    (<span style="color:#a6e22e">mapcar</span> (lambda (s) (<span style="color:#a6e22e">concat</span> (company-pen-filetype--prefix) s))
            res)))

(defun company-pen--grab-symbol ()
  (<span style="color:#a6e22e">buffer-substring</span> (<span style="color:#a6e22e">point</span>) (save-excursion (<span style="color:#a6e22e">skip-syntax-backward</span> <span style="color:#e6db74">&#34;w_.&#34;</span>)
                                            (<span style="color:#a6e22e">point</span>))))

(defun company-pen-filetype--prefix ()
  <span style="color:#e6db74">&#34;Grab prefix at point.&#34;</span>
  (or (company-pen--grab-symbol)
      <span style="color:#e6db74">&#39;stop</span>))

(defun company-pen-filetype (command <span style="color:#66d9ef">&amp;optional</span> arg <span style="color:#66d9ef">&amp;rest</span> ignored)
  (interactive (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#39;interactive</span>))
  (cl-case command
    (interactive (company-begin-backend <span style="color:#e6db74">&#39;company-pen-filetype</span>))
    (prefix (company-pen-filetype--prefix))
    (candidates (company-pen-filetype--candidates arg))
    <span style="color:#75715e">;; TODO doc-buffer may contain info on the completion in the future</span>
    <span style="color:#75715e">;; (doc-buffer (company-pen-filetype--doc-buffer arg))</span>
    <span style="color:#75715e">;; TODO annotation may contain the probability in the future</span>
    <span style="color:#75715e">;; (annotation (company-pen-filetype--annotation arg))</span>
    ))

(require <span style="color:#e6db74">&#39;company</span>)
(defun my-completion-at-point ()
  (interactive)
  (if (<span style="color:#a6e22e">&gt;=</span> (<span style="color:#a6e22e">prefix-numeric-value</span> current-prefix-arg) <span style="color:#ae81ff">4</span>)
      (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;company-pen-filetype</span>)
    (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;completion-at-point</span>)))

(<span style="color:#a6e22e">define-key</span> global-map (kbd <span style="color:#e6db74">&#34;M-~&#34;</span>) <span style="color:#a6e22e">#&#39;</span>my-completion-at-point)</code></pre></td></tr></table>
</div>
</div>
<h3 id="python-monotonically-increasing-tuple-permutations-dot-py">python - <code>monotonically-increasing-tuple-permutations.py</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/env python3.6</span>

<span style="color:#f92672">from</span> itertools <span style="color:#f92672">import</span> combinations

<span style="color:#f92672">import</span> sys

<span style="color:#66d9ef">for</span> line <span style="color:#f92672">in</span> sys<span style="color:#f92672">.</span>stdin:
    <span style="color:#75715e">## I can&#39;t split this way or I&#39;ll lose the starting space in emacs GPT autocomplete</span>
    <span style="color:#75715e">#  lst = line.split()</span>
    <span style="color:#75715e"># I must split like this</span>
    lst <span style="color:#f92672">=</span> line<span style="color:#f92672">.</span>split(<span style="color:#e6db74">&#39; &#39;</span>)
    <span style="color:#75715e">#  print(line)</span>
    <span style="color:#66d9ef">for</span> w <span style="color:#f92672">in</span> lst:
        <span style="color:#66d9ef">if</span> w <span style="color:#f92672">and</span> <span style="color:#f92672">not</span> w<span style="color:#f92672">.</span>isspace() <span style="color:#f92672">and</span> <span style="color:#f92672">not</span> w <span style="color:#f92672">==</span> <span style="color:#e6db74">&#34;</span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>:
            <span style="color:#66d9ef">print</span>(w)
        <span style="color:#66d9ef">break</span>

    <span style="color:#66d9ef">for</span> start, end <span style="color:#f92672">in</span> combinations(range(len(lst)), <span style="color:#ae81ff">2</span>):
        <span style="color:#66d9ef">if</span> start <span style="color:#f92672">==</span> <span style="color:#ae81ff">1</span>:
            <span style="color:#66d9ef">break</span>
        <span style="color:#66d9ef">print</span>(<span style="color:#e6db74">&#39; &#39;</span><span style="color:#f92672">.</span>join(lst[start:end<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>]))</code></pre></td></tr></table>
</div>
</div>
<h3 id="shell-openai-complete">shell - <code>openai-complete</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">94
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null
set -xv

first_arg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>

stdin_exists<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    ! <span style="color:#f92672">[</span> -t <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> ! test <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>readlink /proc/$$/fd/0<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> /dev/null
<span style="color:#f92672">}</span>

<span style="color:#66d9ef">if</span> stdin_exists; <span style="color:#66d9ef">then</span>
    <span style="color:#75715e"># The stdin can be the first argument</span>
    set -- <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

test -f <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit
shift

prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.prompt // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
stop_sequence<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq <span style="color:#e6db74">&#34;.\&#34;stop-sequences\&#34;[0] // empty&#34;</span> | uq | qne<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
temperature<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;temperature\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;engine\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
max_tokens<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;max-tokens\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
top_p<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;top-p\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

test -n <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">0</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -e<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>engine:=<span style="color:#e6db74">&#34;ada&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>temperature:=<span style="color:#e6db74">&#34;0.6&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>max_tokens:=<span style="color:#e6db74">&#34;64&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>sub_completions:=<span style="color:#e6db74">&#34;1&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
<span style="color:#66d9ef">for</span> var in <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">do</span>
    var<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span> | uq | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | template -$i <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    <span style="color:#f92672">((</span>i++<span style="color:#f92672">))</span>
<span style="color:#66d9ef">done</span>

prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | chomp | tf<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># printf -- &#34;%s\n&#34; &#34;$prompt&#34; | tv</span>

<span style="color:#75715e"># prompt=&#34;$(p &#34;$prompt&#34; | bs &#39;$&#39; | qne)&#34;</span>

<span style="color:#75715e"># qne will break emojis</span>
<span style="color:#75715e"># emojis work again</span>
prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | bs <span style="color:#e6db74">&#39;$`&#34;&#39;</span> | sed -z <span style="color:#e6db74">&#39;s/\n/\\n/g&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#75715e"># exit 1</span>

IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> SHCODE <span style="color:#e6db74">&lt;&lt;HEREDOC
</span><span style="color:#e6db74">openai api \
</span><span style="color:#e6db74">    completions.create \
</span><span style="color:#e6db74">    -e &#34;$engine&#34; \
</span><span style="color:#e6db74">    -t &#34;$temperature&#34; \
</span><span style="color:#e6db74">    -M &#34;$max_tokens&#34; \
</span><span style="color:#e6db74">    -n &#34;$sub_completions&#34; \
</span><span style="color:#e6db74">    $(
</span><span style="color:#e6db74">        if test -n &#34;$stop_sequence&#34;; then
</span><span style="color:#e6db74">            printf -- &#34;%s&#34; &#34;--stop \&#34;$stop_sequence\&#34;&#34;
</span><span style="color:#e6db74">        fi
</span><span style="color:#e6db74">    ) \
</span><span style="color:#e6db74">    -p &#34;$prompt&#34;
</span><span style="color:#e6db74">HEREDOC</span>

<span style="color:#75715e"># printf -- &#34;%s\n&#34; &#34;$SHCODE&#34; | tv</span>
<span style="color:#75715e"># exit 1</span>

response_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>eval <span style="color:#e6db74">&#34;</span>$SHCODE<span style="color:#e6db74">&#34;</span> | uq | s chomp | tf txt<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

prompt_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
response_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># it may not be a good idea to remove starting whitespace if I want to complete in emacs</span>
<span style="color:#75715e"># tail -c +$((prompt_bytes + 1)) &#34;$response_fp&#34; | sed -z &#39;s/^\s\+//;s/^\r\+//;s/^\n\+//&#39;</span>
<span style="color:#75715e"># tail -c +$((prompt_bytes + 1)) &#34;$response_fp&#34; | sed -z &#39;s/^\r\+//;s/^\n\+//&#39;</span>
<span style="color:#75715e"># Don&#39;t remove whitespace at all</span>
tail -c +<span style="color:#66d9ef">$((</span>prompt_bytes <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span><span style="color:#66d9ef">))</span> <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span></code></pre></td></tr></table>
</div>
</div>
<p>You could say that <code>company-mode</code>, which
stands for &ldquo;complete-any[thing]&rdquo; has reached
its apotheosis. It seems like as a harness for
completion backends goes, working with GPT-3
exposes its limitations and the need to invent
more advanced completion mechanisms to take
advantage of more capable completion
generators.</p>
]]></content>
        </item>
        
        <item>
            <title>A tour of Ryan Ong&#39;s - NLP 365</title>
            <link>http://semiosis.github.io/posts/ryan-ong-nlp-365/</link>
            <pubDate>Sat, 13 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/ryan-ong-nlp-365/</guid>
            <description>Glossaries nlp-natural-language-processing.txt information-retrieval.txt fasttext.txt transformer.txt nmt-neural-machine-translation.txt information-theory.txt  Summary I go over Ryan Ong&amp;rsquo;s series on NLP, adding terms to my glossaries and reproducing what he&amp;rsquo;s done.
 Finished reading &amp;lt;2021-03-13 Sat&amp;gt;
 Day 1: What is Natural Language Processing - Ryan Ong Day 2: Damerau-Levenshtein Distance - Ryan Ong Day 3: Word Embeddings - Ryan Ong  Terms in the green text have added to my glossary.
  This is the project that introduced me to GloVe a few years ago.</description>
            <content type="html"><![CDATA[<dl>
<dt>Glossaries</dt>
<dd><a href="http://github.com/mullikine/glossaries-gh/blob/master/nlp-natural-language-processing.txt">nlp-natural-language-processing.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/information-retrieval.txt">information-retrieval.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/fasttext.txt">fasttext.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/transformer.txt">transformer.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/nmt-neural-machine-translation.txt">nmt-neural-machine-translation.txt</a> <br />
<a href="http://github.com/mullikine/glossaries-gh/blob/master/information-theory.txt">information-theory.txt</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I go over Ryan Ong&rsquo;s series on <code>NLP</code>, adding
terms to my glossaries and reproducing what
he&rsquo;s done.</p>
<hr>
<h2 id="finished-reading">Finished reading</h2>
<p><span class="timestamp-wrapper"><span class="timestamp">&lt;2021-03-13 Sat&gt;</span></span></p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/01/day-1-what-is-natural-language-processing/">Day 1: What is Natural Language Processing - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/01/day-1-what-is-natural-language-processing/https://ryanong.co.uk/2020/01/02/day-2-damerau-levenshtein-distance/">Day 2: Damerau-Levenshtein Distance - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/03/day-3-word-embeddings/">Day 3: Word Embeddings - Ryan Ong</a></li>
</ul>
<p>Terms in the green text have added to my glossary.</p>
<figure>
    <img src="/ox-hugo/ryanong-day-3.png"/> 
</figure>

<p>This is the project that introduced me to <code>GloVe</code> a few years ago.</p>
<p><a href="https://github.com/mullikine/codenames">https://github.com/mullikine/codenames</a></p>
<p>I skipped over <code>projectJarvis</code>.</p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/04/day-4-scraping-google-search-results/">Day 4: projectJarvis - Introduction {#project2020} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/05/day-5-projectjarvis-retrieving-medium-articles/">Day 5: projectJarvis - Retrieving medium articles - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/06/day-6-projectjarvis-retrieving-medium-articles-code/">Day 6: projectJarvis  Retrieving medium articles {Code} - Ryan Ong</a></li>
</ul>
<p>I already know about <code>TFIDF</code>.</p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/07/day-7-term-frequency-inverse-document-frequency-tf-idf/">Day 7: Term Frequency-Inverse Document Frequency {TFIDF} for Summarisation - Ryan Ong</a></li>
</ul>
<p>Terms in green text have been added to my glossary.</p>
<p>Terms in blue are suggested by <code>pytextrank</code> / <code>TextRank</code>.</p>
<figure>
    <img src="/ox-hugo/ryanong-day-7.png"/> 
</figure>

<p><a href="https://mullikine.github.io/posts/suggesting-new-words-for-the-glossary-with-keybert-and-pytextrank/">Suggesting new words for the glossary with KeyBERT and pytextrank // Bodacious Blog</a></p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/08/day-8/">Day 8: TextRank for Summarisation - Ryan Ong</a></li>
</ul>
<p>Learning more about <code>TextRank</code>:</p>
<p>I use <code>GPT-3</code> to correct this sentence, as I am adding it to the glossary.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">graph-based ranking
    [[https://ryanong.co.uk/2020/01/08/day-8/][Day 8: TextRank for Summarisation - Ryan Ong]]

    In short, a graph-based ranking algorithm
    is a way of deciding on the importance of
    a vertex within a graph, by taking into
    account global information recursively
    computed from the entire graph, rather
    than relying only on local vertex-specific
    information.</code></pre></td></tr></table>
</div>
</div>
<p>Once again, blue words here are suggested by <code>TextRank</code> using the transformer model <code>en_core_web_trf</code>.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/398748" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/398748.svg" /></a></p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/09/day-9/">Day 9: Transformers - Introduction - Ryan Ong</a></li>
</ul>
<p>I had to recall what a residual connection was.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">residual connection
skip connection
    [#deep learning]
    [#RNN]

    Used to allow gradients to flow through a
    network directly, without passing through
    the non-linear activation functions.

    Form conceptually a &#39;bus&#39; which flows
    right the way through the network, and in
    reverse, the gradients can flow backwards
    along it too.

    high-level intuition:
    - residual connections help deep models
      train more successfully.</code></pre></td></tr></table>
</div>
</div>
<p><a href="https://mullikine.github.io/posts/review-of-the-illustrated-transformer/">The Illustrated Transformer // Bodacious Blog</a></p>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/10/day-10-transformers-multihead-attention-mechanism/">Day 10: Transformers - MultiHead Attention Mechanism - Ryan Ong</a></li>
</ul>
<hr>
<figure>
    <img src="/ox-hugo/ryanong-day-10.png"/> 
</figure>

<dl>
<dt>New terms</dt>
<dd><span class="underline">self-attention</span> <br />
<span class="underline">Multi-Head Attention</span> <br />
<span class="underline">multi-head self-attention</span></dd>
</dl>
<hr>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/11/day-11-transformers-positioning-encoding-and-decoder/">Day 11 - Transformers: Positioning Encoding and Decoder - Ryan Ong</a></li>
</ul>
<hr>
<h2 id="left-to-read">Left to read</h2>
<ul>
<li><a href="https://ryanong.co.uk/2020/01/12/day-12-recurrent-neural-network/">Day 12: Recurrent Neural Network - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/13/day-13-seq2seq/">Day 13: Seq2Seq - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/14/day-14-convolutional-neural-network/">Day 14: Convolutional Neural Network in NLP - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/15/day-15-textrank-for-summarisation-code-gensim/">Day 15: TextRank for Summarisation {Code - Gensim} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/16/day-16-textrank-manual-implementation-code/">Day 16: TextRank - Manual Implementation {Code} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/17/day-17-tfidf-for-summarisation-code/">Day 17: TFIDF for Summarisation - Implementation I - Constructing a Class - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/18/day-18-tfidf-for-summarisation-implementation-ii-term-frequency-tf-matrix/">Day 18: TFIDF for Summarisation - Implementation II - Term Frequency {TF} Matrix - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/19/day-19-tfidf-for-summarisation-implementation-iii-inverse-document-frequency-idf-matrix/">Day 19: TFIDF for Summarisation - Implementation III - IDF Matrix - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/20/day-20-tfidf-for-summarisation-implementation-iv-tfidf-matrix-sentence-scoring/">Day 20: TFIDF for Summarisation - Implementation IV - TFIDF Matrix &amp; Sentence Scoring - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/21/day-21-tfidf-for-summarisation-summary-generation/">Day 21: TFIDF for Summarisation - Implementation V - Summary Generation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/22/day-22-tfidf-for-summarisation-putting-it-all-together/">Day 22: TFIDF for Summarisation - Implementation VI - Putting It All Together - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/23/day-18-summarisation-evaluation-metrics/">Day 23: Summarisation - ROUGE score - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/24/day-24-learn-nlp-with-me-machine-reading-comprehension-introduction/">Day 24: Learn NLP with Me - Machine Reading Comprehension - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/25/day-25-learn-nlp-with-me-machine-reading-comprehension-mrc-tasks/">Day 25: Learn NLP with Me - Machine Reading Comprehension - MRC Tasks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/26/day-26-learn-nlp-with-me-machine-reading-comprehension-deep-learning-methods/">Day 26: Learn NLP with Me - Machine Reading Comprehension - Datasets &amp; Evaluation Metrics - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/27/day-27-learn-nlp-with-me-machine-reading-comprehension-deep-learning-methods-i/">Day 27: Learn NLP with Me - MRC - Deep Learning I - General Architecture - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/28/day-28-learn-nlp-with-me-machine-reading-comprehension-deep-learning-methods-ii/">Day 28: Learn NLP with Me - MRC - Deep Learning II - Embeddings - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/29/day-29-learn-nlp-with-me-machine-reading-comprehension-deep-learning-methods-iii/">Day 29: Learn NLP with Me - MRC - Deep Learning III - Feature Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/30/day-30-learn-nlp-with-me-mrc-deep-learning-iii-context-question-interaction/">Day 30: Learn NLP with Me - MRC - Deep Learning IV - Context Question Interaction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/01/31/day-31-learn-nlp-with-me-mrc-deep-learning-iii-answer-prediction/">Day 31: Learn NLP with Me - MRC - Deep Learning V - Answer Prediction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/01/day-32-learn-nlp-with-me-mrc-deep-learning-iii-additional-tricks/">Day 32: Learn NLP with Me - MRC - Deep Learning VI - Additional Tricks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/02/day-33-learn-nlp-with-me-mrc-open-issues/">Day 33: Learn NLP with Me - MRC - Open Issues - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/03/day-34-learn-nlp-with-me-mrc-new-trends/">Day 34: Learn NLP with Me - MRC - New Trends I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/04/day-35-learn-nlp-with-me-mrc-new-trends-ii/">Day 35: Learn NLP with Me - MRC - New Trends II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/05/day-36-learn-nlp-with-me-mrc-new-trends-iii/">Day 36: Learn NLP with Me - MRC - New Trends III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/06/day-37-learn-nlp-with-me-fast-ai-nlp-course-what-is-nlp/">Day 37: Learn NLP with Me - fast.ai NLP course - What is NLP? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/07/day-38-nlp-discovery-meena-googles-chatbot/">Day 38: NLP Discovery - Google&rsquo;s Chatbot Meena - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/08/day-39-what-is-perplexity/">Day 39: What is Perplexity? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/09/day-40-what-is-neural-architecture-search-nas/">Day 40: What is Neural Architecture Search {NAS}? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/10/day-41-learn-nlp-with-me-fast-ai-nlp-course-topic-modelling-with-svd-nmf/">Day 41: Learn NLP with Me - fast.ai NLP course - Topic Modelling with SVD &amp; NMF - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/11/day-42-learn-nlp-with-me-fast-ai-nlp-course-topic-modelling-svd-revisited/">Day 42: Learn NLP with Me - fast.ai NLP course - Topic Modelling &amp; SVD revisited - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/12/day-43-learn-nlp-with-me-information-extraction-introduction/">Day 43: Learn NLP with Me - Information Extraction - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/13/day-44-learn-nlp-with-me-information-extraction-entities/">Day 44: Learn NLP with Me - Information Extraction - Entities - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/14/day-45-learn-nlp-with-me-information-extraction-entities-entity-linking-by-learning-to-rank/">Day 45: Learn NLP with Me - Information Extraction - Entities - Entity linking by learning to rank - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/15/day-46-learning-pytorch-a-deep-learning-framework-introduction-to-tensors/">Day 46: Learning PyTorch - A Deep Learning Framework - Introduction to Tensors - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/16/day-47-learning-pytorch-autograd-automatic-differentiation/">Day 47: Learning PyTorch - Autograd - Automatic Differentiation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/17/day-48-learning-pytorch-training-a-neural-network/">Day 48: Learning PyTorch - Training a Neural Network - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/18/day-49-learning-pytorch-training-an-image-classifier/">Day 49: Learning PyTorch - Training an Image Classifier - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/19/day-50-nlp-discovery-turing-nlg-a-17-billion-parameter-language-model/">Day 50: NLP Discovery - Turing-NLG - A 17-billion parameter Language Model - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/20/day-51-learn-nlp-with-me-information-extraction-entities-collective-entity-linking/">Day 51: Learn NLP with Me - Information Extraction - Entities - Collective Entity Linking - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/21/day-52-learn-nlp-with-me-information-extraction-relations-introduction/">Day 52: Learn NLP with Me - Information Extraction - Relations - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/22/day-53-learn-nlp-with-me-information-extraction-relations-pattern-based-relation-extraction/">Day 53: Learn NLP with Me - Information Extraction - Relations - Pattern-based Relation Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/23/day-54-learn-nlp-with-me-formal-language-theory-introduction/">Day 54: Learn NLP with Me - Formal Language Theory - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/24/day-55-learn-nlp-with-me-formal-language-theory-regular-languages-introduction/">Day 55: Learn NLP with Me - Formal Language Theory - Regular Languages - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/25/day-56-learn-nlp-with-me-formal-language-theory-regular-languages-finite-state-acceptors/">Day 56: Learn NLP with Me - Formal Language Theory - Regular Languages - Finite State Acceptors - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/26/day-57-learn-nlp-with-me-fast-ai-nlp-course-sentiment-classification-with-naive-bayes/">Day 57: Learn NLP with Me - fast.ai NLP course - Sentiment Classification with Nave Bayes - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/27/day-58-learn-nlp-with-me-formal-language-theory-regular-languages-morphology-analysis/">Day 58: Learn NLP with Me - Formal Language Theory - Regular Languages - Morphology Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/28/day-59-learn-nlp-with-me-formal-language-theory-regular-languages-weighted-fsas/">Day 59: Learn NLP with Me - Formal Language Theory - Regular Languages - Weighted FSAs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/02/29/day-60-learn-nlp-with-me-flt-regular-languages-finite-state-transducers/">Day 60: Learn NLP with Me - FLT - Regular Languages - Finite State Transducers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/01/day-61-what-is-semantic-textual-similarity/">Day 61: What is Semantic Textual Similarity? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/02/day-62-learn-nlp-with-me-flt-regular-languages-inflectional-morphology/">Day 62: Learn NLP with Me - FLT - Regular Languages - Inflectional Morphology - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/03/day-63-learn-nlp-with-me-flt-regular-languages-finite-state-composition/">Day 63: Learn NLP with Me - FLT - Regular Languages - Finite state composition - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/04/day-64-learn-nlp-with-me-information-extraction-relations-relation-extraction-as-classification-task/">Day 64: Learn NLP with Me - Information Extraction - Relations - Relation Extraction as Classification Task - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/05/day-65-learn-nlp-with-me-information-extraction-relations-relation-extraction-as-classification-task-kernel-method/">Day 65: Learn NLP with Me - Information Extraction - R.E. as Classification Task - Kernel Method - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/06/day-66-learn-nlp-with-me-fast-ai-nlp-course-sentiment-classification-with-naive-bayes-logistic-regression/">Day 66: Learn NLP with Me - fast.ai NLP course - Sentiment Classification with Nave Bayes &amp; Logistic Regression - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/07/day-67-learn-nlp-with-me-fast-ai-nlp-course-derivation-of-naive-bayes-numerical-stability/">Day 67: Learn NLP with Me - fast.ai NLP course - Derivation of Nave Bayes &amp; Numerical Stability - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/08/day-68-learn-nlp-with-me-information-extraction-r-e-as-classification-task-neural-method/">Day 68: Learn NLP with Me - Information Extraction - R.E. as Classification Task - Neural Method - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/09/day-69-learn-nlp-with-me-information-extraction-relations-knowledge-base-population/">Day 69: Learn NLP with Me - Information Extraction - Relations - Knowledge Base Population - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/10/day-70-learn-nlp-with-me-i-e-knowledge-base-population-information-fusion/">Day 70: Learn NLP with Me - I.E. - Knowledge Base Population - Information Fusion - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/11/day-71-learn-nlp-with-me-i-e-knowledge-base-population-distant-supervision/">Day 71: Learn NLP with Me - I.E. - Knowledge Base Population - Distant Supervision - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/12/day-72-learn-nlp-with-me-i-e-relations-open-information-extraction/">Day 72: Learn NLP with Me - I.E. - Relations - Open Information Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/13/day-73-learn-nlp-with-me-information-extraction-events/">Day 73: Learn NLP with Me - Information Extraction - Events - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/14/day-74-learn-nlp-with-me-i-e-hedges-denials-and-hypotheticals-introduction/">Day 74: Learn NLP with Me - I.E. - Hedges, Denials, and Hypotheticals - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/15/day-75-learn-nlp-with-me-i-e-hedges-denials-and-hypotheticals-handling-modality/">Day 75: Learn NLP with Me - I.E. - Hedges, Denials, and Hypotheticals - Handling Modality - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/16/day-76-learn-nlp-with-me-formal-language-theory-context-free-languages-introduction/">Day 76: Learn NLP with Me - Formal Language Theory - Context-free Languages - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/17/day-77-learn-nlp-with-me-flt-context-free-languages-context-free-grammars/">Day 77: Learn NLP with Me - FLT - Context-free Languages - Context-free Grammars - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/18/day-78-learn-nlp-with-me-flt-context-free-languages-chomsky-normal-form/">Day 78: Learn NLP with Me - FLT - Context-free Languages - Chomsky Normal Form - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/19/day-79-mini-nlp-data-science-project-implementation-series-introduction/">Day 79: Mini NLP Data Science Project - Implementation Series - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/20/day-80-mini-nlp-data-science-project-implementation-i-eda/">Day 80: Mini NLP Data Science Project - Implementation I - EDA - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/21/day-81-mini-nlp-data-science-project-implementation-ii-text-processing/">Day 81: Mini NLP Data Science Project - Implementation II - Text Processing - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/22/day-82-mini-nlp-data-science-project-implementation-iii-text-clustering-i/">Day 82: Mini NLP Data Science Project - Implementation III - Text Clustering I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/23/day-83-mini-nlp-data-science-project-implementation-iv-text-clustering-ii/">Day 83: Mini NLP Data Science Project - Implementation IV - Text Clustering II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/24/day-84-mini-nlp-data-science-project-implementation-v-text-clustering-iii/">Day 84: Mini NLP Data Science Project - Implementation V - Text Clustering III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/25/day-85-mini-nlp-data-science-project-implementation-vi-topic-modelling-analysis/">Day 85: Mini NLP Data Science Project - Implementation VI - Topic Modelling Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/26/day-86-mini-nlp-data-science-project-implementation-vii-text-similarity/">Day 86: Mini NLP Data Science Project - Implementation VII - Text Similarity - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/27/day-87-learn-nlp-with-me-bert-on-sentiment-analysis/">Day 87: Learn NLP with Me - BERT on Sentiment Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/28/day-88-what-is-autoencoders/">Day 88: What is Autoencoders? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/29/day-89-deep-generative-models-and-nlp/">Day 89: Deep Generative Models and NLP - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/30/day-90-learn-pgm-with-me-what-is-probabilistic-graphical-modelling/">Day 90: Learn PGM with Me - What is Probabilistic Graphical Modelling? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/03/31/day-91-learn-pgm-with-me-the-3-main-aspects-of-graphical-models/">Day 91: Learn PGM with Me - The 3 Main Aspects of Graphical Models - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/01/day-92-learn-pgm-with-me-probability-review-for-graphical-models/">Day 92: Learn PGM with Me - Probability Review for Graphical Models - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/02/day-93-learn-pgm-with-me-probability-review-for-graphical-models-elements-of-probability/">Day 93: Learn PGM with Me - Probability Review for Graphical Models - Elements of probability - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/03/day-94-learn-pgm-with-me-probability-review-for-graphical-models-random-variables/">Day 94: Learn PGM with Me - Probability Review for Graphical Models - Random Variables - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/04/day-95-learn-pgm-with-me-probability-review-for-graphical-models-two-random-variables/">Day 95: Learn PGM with Me - Probability Review for Graphical Models - Two Random Variables - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/05/day-96-learn-pgm-with-me-representation-introduction-to-bayesian-networks/">Day 96: Learn PGM with Me - Representation - Introduction to Bayesian Networks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/06/day-97-learn-pgm-with-me-representation-dependencies-of-a-bayes-network/">Day 97: Learn PGM with Me - Representation - Dependencies of a Bayes' Network - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/07/day-98-learn-pgm-with-me-representation-markov-random-fields/">Day 98: Learn PGM with Me - Representation - Introduction to Markov Random Fields - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/08/day-99-learn-pgm-with-me-representation-markov-random-fields-vs-bayesian-networks/">Day 99: Learn PGM with Me - Representation - Markov Random Fields vs Bayesian Networks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/09/day-100-learn-pgm-with-me-representation-introduction-to-conditional-random-fields/">Day 100: Learn PGM with Me - Representation - Introduction to Conditional Random Fields - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/10/day-101-in-depth-study-of-rasas-diet-architecture/">Day 101: In-depth study of RASA&rsquo;s DIET Architecture - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/11/day-102-nlp-research-papers-implicit-and-explicit-aspect-extraction-in-financial-microblogs/">Day 102: NLP Papers Summary - Implicit and Explicit Aspect Extraction in Financial Microblogs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/12/day-103-nlp-research-papers-utilizing-bert-for-aspect-based-sentiment-analysis-via-constructing-auxiliary-sentence/">Day 103: NLP Papers Summary - Utilizing BERT for Aspect-Based Sentiment Analysis via Constructing Auxiliary Sentence - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/13/day-104-nlp-research-papers-sentihood-targeted-aspect-based-sentiment-analysis-dataset-for-urban-neighbourhoods/">Day 104: NLP Papers Summary - SentiHood: Targeted Aspect Based Sentiment Analysis Dataset for Urban Neighbourhoods - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/14/day-105-nlp-research-papers-aspect-level-sentiment-classification-with-attention-over-attention-neural-networks/">Day 105: NLP Papers Summary - Aspect Level Sentiment Classification with Attention-over-Attention Neural Networks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/15/day-106-nlp-research-papers-an-unsupervised-neural-attention-model-for-aspect-extraction/">Day 106: NLP Papers Summary - An Unsupervised Neural Attention Model for Aspect Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/16/day-107-nlp-research-papers-make-lead-bias-in-your-favor-a-simple-and-effective-method-for-news-summarization/">Day 107: NLP Papers Summary - Make Lead Bias in Your Favor: A Simple and Effective Method for News Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/17/day-108-nlp-papers-summary-simple-bert-models-for-relation-extraction-and-semantic-role-labelling/">Day 108: NLP Papers Summary - Simple BERT Models for Relation Extraction and Semantic Role Labelling - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/18/day-109-nlp-papers-summary-studying-summarization-evaluation-metrics-in-the-appropriate-scoring-range/">Day 109: NLP Papers Summary - Studying Summarization Evaluation Metrics in the Appropriate Scoring Range - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/19/day-110-nlp-papers-summary-double-embeddings-and-cnn-based-sequence-labelling-for-aspect-extraction/">Day 110: NLP Papers Summary - Double Embeddings and CNN-based Sequence Labelling for Aspect Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/20/day-111-nlp-papers-summary-the-risk-of-racial-bias-in-hate-speech-detection/">Day 111: NLP Papers Summary - The Risk of Racial Bias in Hate Speech Detection - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/21/day-112-nlp-papers-summary-a-challenge-dataset-and-effective-models-for-aspect-based-sentiment-analysis/">Day 112: NLP Papers Summary - A Challenge Dataset and Effective Models for Aspect-Based Sentiment Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/22/day-113-nlp-papers-summary-on-extractive-and-abstractive-neural-document-summarization-with-transformer-language-models/">Day 113: NLP Papers Summary - On Extractive and Abstractive Neural Document Summarization with Transformer Language Models - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/23/day-114-nlp-papers-summary-a-summarization-system-for-scientific-documents/">Day 114: NLP Papers Summary - A Summarization System for Scientific Documents - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/24/day-115-nlp-papers-summary-scibert-a-pretrained-language-model-for-scientific-text/">Day 115: NLP Papers Summary - SCIBERT: A Pretrained Language Model for Scientific Text - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/25/day-116-nlp-papers-summary-data-driven-summarization-of-scientific-articles/">Day 116: NLP Papers Summary - Data-driven Summarization of Scientific Articles - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/26/day-117-nlp-papers-summary-abstract-text-summarization-a-low-resource-challenge/">Day 117: NLP Papers Summary - Abstract Text Summarization: A Low Resource Challenge - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/27/day-118-nlp-papers-summary-extractive-summarization-of-long-documents-by-combining-global-and-local-context/">Day 118: NLP Papers Summary - Extractive Summarization of Long Documents by Combining Global and Local Context - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/28/day-119-nlp-papers-summary-an-argument-annotated-corpus-of-scientific-publications/">Day 119: NLP Papers Summary - An Argument-Annotated Corpus of Scientific Publications - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/29/day-120-nlp-papers-summary-a-simple-theoretical-model-of-importance-for-summarization/">Day 120: NLP Papers Summary - A Simple Theoretical Model of Importance for Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/04/30/day-121-nlp-papers-summary-concept-pointer-network-for-abstractive-summarization/">Day 121: NLP Papers Summary - Concept Pointer Network for Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/01/day-122-nlp-papers-summary-applying-bert-to-document-retrieval-with-birch/">Day 122: NLP Papers Summary - Applying BERT to Document Retrieval with Birch - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/02/day-123-nlp-papers-summary-context-aware-embedding-for-targeted-aspect-based-sentiment-analysis/">Day 123: NLP Papers Summary - Context-aware Embedding for Targeted Aspect-based Sentiment Analysis - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/03/day-124-nlp-papers-summary-tldr-extreme-summarization-of-scientific-documents/">Day 124: NLP Papers Summary - TLDR: Extreme Summarization of Scientific Documents - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/04/day-125-nlp-papers-summary-a2n-attending-to-neighbors-for-knowledge-graph-inference/">Day 125: NLP Papers Summary - A2N: Attending to Neighbors for Knowledge Graph Inference - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/05/day-126-nlp-papers-summary-neural-news-recommendation-with-topic-aware-news-representation/">Day 126: NLP Papers Summary - Neural News Recommendation with Topic-Aware News Representation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/06/day-127-nlp-papers-summary-neural-approaches-to-conversational-ai-introduction/">Day 127: NLP Papers Summary - Neural Approaches to Conversational AI - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/07/day-128-nlp-papers-summary-neural-approaches-to-conversational-ai-kb-qa-symbolic-methods/">Day 128: NLP Papers Summary - Neural Approaches to Conversational AI - KB-QA {Symbolic Methods} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/08/day-129-nlp-papers-summary-neural-approaches-to-conversational-ai-kb-qa-neural-methods/">Day 129: NLP Papers Summary - Neural Approaches to Conversational AI - KB-QA {Neural Methods} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/09/day-130-nlp-papers-summary-neural-approaches-to-conversational-ai-text-qa-mrc/">Day 130: NLP Papers Summary - Neural Approaches to Conversational AI - Text-QA {MRC} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/10/day-131-nlp-papers-summary-neural-approaches-to-conversational-ai-task-oriented-systems-introduction/">Day 131: NLP Papers Summary - Neural Approaches to Conversational AI - Task-Oriented Systems {Introduction} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/11/day-132-nlp-papers-summary-neural-approaches-to-conversational-ai-task-oriented-systems-evaluation-metrics/">Day 132: NLP Papers Summary - Neural Approaches to Conversational AI - Task-Oriented Systems {Evaluation Metrics} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/12/day-133-nlp-papers-summary-neural-approaches-to-conversational-ai-nlu-and-dst/">Day 133: NLP Papers Summary - Neural Approaches to Conversational AI - NLU and DST - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/13/day-134-nlp-papers-summary-neural-approaches-to-conversational-ai-nlg-and-e2e/">Day 134: NLP Papers Summary - Neural Approaches to Conversational AI - NLG and E2E - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/14/day-135-nlp-papers-summary-neural-approaches-to-conversational-ai-e2e-social-bots/">Day 135: NLP Papers Summary - Neural Approaches to Conversational AI - E2E Social Bots - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/15/day-136-nlp-papers-summary-neural-approaches-to-conversational-ai-social-bots-challenges/">Day 136: NLP Papers Summary - Neural Approaches to Conversational AI - Social Bot&rsquo;s Challenges - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/16/day-137-nlp-papers-summary-neural-approaches-to-conversational-ai-social-bots-landscape/">Day 137: NLP Papers Summary - Neural Approaches to Conversational AI - Social Bot&rsquo;s Landscape - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/17/day-138-nlp-papers-summary-neural-approaches-to-conversational-ai-conversational-ai-in-industry/">Day 138: NLP Papers Summary - Neural Approaches to Conversational AI - Conversational AI in Industry - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/18/day-139-nlp-papers-summary-neural-approaches-to-conversational-ai-conclusion-research-trends/">Day 139: NLP Papers Summary - Neural Approaches to Conversational AI - Conclusion &amp; Research Trends - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/19/day-140-nlp-papers-summary-multimodal-machine-learning-for-automated-icd-coding/">Day 140: NLP Papers Summary - Multimodal Machine Learning for Automated ICD Coding - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/20/day-141-nlp-papers-summary-textattack-a-framework-for-adversarial-attacks-in-natural-language-processing/">Day 141: NLP Papers Summary - TextAttack: A Framework for Adversarial Attacks in Natural Language Processing - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/21/day-142-nlp-papers-summary-measuring-emotions-in-the-covid-19-real-world-worry-dataset/">Day 142: NLP Papers Summary - Measuring Emotions in the COVID-19 Real World Worry Dataset - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/22/day-143-nlp-papers-summary-unsupervised-pseudo-labeling-for-extractive-summarization-on-electronic-health-records/">Day 143: NLP Papers Summary - Unsupervised Pseudo-Labeling for Extractive Summarization on Electronic Health Records - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/23/day-144-nlp-papers-summary-attend-to-medical-ontologies-content-selection-for-clinical-abstractive-summarization/">Day 144: NLP Papers Summary - Attend to Medical Ontologies: Content Selection for Clinical Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/24/day-145-nlp-papers-summary-supert-towards-new-frontiers-in-unsupervised-evaluation-metrics-for-multi-document-summarization/">Day 145: NLP Papers Summary - SUPERT: Towards New Frontiers in Unsupervised Evaluation Metrics for Multi-Document Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/25/day-146-nlp-papers-summary-exploring-content-selection-in-summarization-of-novel-chapters/">Day 146: NLP Papers Summary - Exploring Content Selection in Summarization of Novel Chapters - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/26/day-147-nlp-papers-summary-two-birds-one-stone-a-simple-unified-model-for-text-generation-from-structured-and-unstructured-data/">Day 147: NLP Papers Summary - Two Birds, One Stone: A Simple, Unified Model for Text Generation from Structured and Unstructured Data - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/27/day-148-nlp-papers-summary-a-transformer-based-approach-for-source-code-summarization/">Day 148: NLP Papers Summary - A Transformer-based Approach for Source Code Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/28/day-149-nlp-papers-summary-mooccube-a-large-scale-data-repository-for-nlp-applications-in-moocs/">Day 149: NLP Papers Summary - MOOCCube: A Large-scale Data Repository for NLP Applications in MOOCs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/29/day-150-nlp-papers-summary-will-they-wont-they-a-very-large-dataset-for-stance-detection-on-twitter/">Day 150: NLP Papers Summary - Will-They-Wont-They: A Very Large Dataset for Stance Detection on Twitter - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/30/day-151-nlp-papers-summary-a-large-scale-multi-document-summarization-dataset-from-the-wikipedia-current-events-portal/">Day 151: NLP Papers Summary - A Large-Scale Multi-Document Summarization Dataset from the Wikipedia Current Events Portal - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/05/31/day-152-nlp-papers-summary-opiniondigest-a-simple-framework-for-opinion-summarization/">Day 152: NLP Papers Summary - OPINIONDIGEST: A Simple Framework for Opinion Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/01/day-153-nlp-papers-summary-span-convert-few-shot-span-extraction-for-dialog-with-pretrained-conversational-representations/">Day 153: NLP Papers Summary - Span-ConveRT: Few-shot Span Extraction for Dialog with Pretrained Conversational Representations - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/02/day-154-nlp-papers-summary-contextual-embeddings-when-are-they-worth-it/">Day 154: NLP Papers Summary - Contextual Embeddings: When Are They Worth It? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/03/day-155-nlp-papers-summary-train-once-test-anywhere-zero-shot-learning-for-text-classification/">Day 155: NLP Papers Summary - TRAIN ONCE, TEST ANYWHERE: ZERO-SHOT LEARNING FOR TEXT CLASSIFICATION - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/04/day-156-nlp-papers-summary-asking-and-answering-questions-to-evaluate-the-factual-consistency-of-summaries/">Day 156: NLP Papers Summary - Asking and Answering Questions to Evaluate the Factual Consistency of Summaries - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/05/day-157-nlp-papers-summary-explainable-prediction-of-medical-codes-from-clinical-text/">Day 157: NLP Papers Summary - Explainable Prediction of Medical Codes from Clinical Text - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/06/day-158-nlp-papers-summary-embarrassingly-simple-unsupervised-aspect-extraction/">Day 158: NLP Papers Summary - Embarrassingly Simple Unsupervised Aspect Extraction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/07/day-159-nlp-papers-summary-icd-coding-from-clinical-text-using-multi-filter-residual-convolutional-neural-network/">Day 159: NLP Papers Summary - ICD Coding from Clinical Text Using Multi-Filter Residual Convolutional Neural Network - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/08/day-160-nlp-papers-summary-extractive-summarization-as-text-matching/">Day 160: NLP Papers Summary - Extractive Summarization as Text Matching - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/09/day-161-nlp-papers-summary-bleurt-learning-robust-metrics-for-text-generation/">Day 161: NLP Papers Summary - BLEURT: Learning Robust Metrics for Text Generation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/10/day-162-learn-nlp-with-me-fast-ai-nlp-course-revisiting-naive-bayes-regex/">Day 162: Learn NLP With Me  Fast.Ai NLP Course  Revisiting Nave Bayes &amp; Regex - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/11/day-163-how-to-build-a-language-model-from-scratch-implementation/">Day 163: How to build a Language Model from scratch - Implementation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/12/day-164-learn-nlp-with-me-fast-ai-nlp-course-transfer-learning/">Day 164: Learn NLP With Me  Fast.Ai NLP Course  Transfer Learning - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/13/day-165-learn-nlp-with-me-fast-ai-nlp-course-ulmfit-for-non-english-languages/">Day 165: Learn NLP With Me  Fast.Ai NLP Course  ULMFit for non-English Languages - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/14/day-166-nlp-papers-summary-publicly-available-clinical-bert-embeddings/">Day 166: NLP Papers Summary - Publicly Available Clinical BERT Embeddings - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/15/day-167-nlp-papers-summary-ontology-aware-clinical-abstractive-summarization/">Day 167: NLP Papers Summary - Ontology-Aware Clinical Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/16/day-168-learn-nlp-with-me-fast-ai-nlp-course-understanding-rnns-and-seq2seq-translation/">Day 168: Learn NLP With Me  Fast.Ai NLP Course  Understanding RNNs and Seq2Seq Translation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/17/day-169-learn-nlp-with-me-fast-ai-nlp-course-word-embeddings-quantify-stereotypes-and-text-generation-algorithms/">Day 169: Learn NLP With Me  Fast.Ai NLP Course  Word Embeddings Quantify Stereotypes and Text Generation Algorithms - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/18/day-170-learn-nlp-with-me-fast-ai-nlp-course-algorithmic-bias/">Day 170: Learn NLP With Me  Fast.Ai NLP Course  Algorithmic Bias - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/19/day-171-learn-nlp-with-me-fast-ai-nlp-course-transformers-and-language-translation/">Day 171: Learn NLP With Me  Fast.Ai NLP Course  Transformers and Language Translation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/20/day-172-learn-nlp-with-me-fast-ai-nlp-course-disinformation-in-text-end-course/">Day 172: Learn NLP With Me  Fast.Ai NLP Course  Disinformation in Text {END COURSE} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/21/day-173-nlp-discovery-text-to-text-transfer-transformer-t5/">Day 173: NLP Discovery - Text-To-Text Transfer Transformer {T5} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/22/day-174-nlp-papers-summary-pegasus-pre-training-with-extracted-gap-sentences-for-abstractive-summarization/">Day 174: NLP Papers Summary - PEGASUS: Pre-training with Extracted Gap-sentences for Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/23/day-175-nlp-papers-summary-gpt-3-introduction-and-context/">Day 175: NLP Papers Summary - GPT-3 : Introduction and Context - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/24/day-176-nlp-papers-summary-gpt-3-training-and-evaluation-methods/">Day 176: NLP Papers Summary - GPT-3 : Training and Evaluation Methods - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/25/day-177-nlp-papers-summary-gpt-3-limitations/">Day 177: NLP Papers Summary - GPT-3 : Limitations - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/26/day-178-nlp-papers-summary-gpt-3-broader-impacts/">Day 178: NLP Papers Summary - GPT-3 : Broader Impacts - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/27/day-179-learning-pytorch-revisiting-concepts/">Day 179: Learning PyTorch - Revisiting Concepts - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/28/day-180-learning-pytorch-language-model-with-nn-transformer-and-torchtext-part-1/">Day 180: Learning PyTorch - Language Model with nn.Transformer and TorchText {Part 1} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/29/day-181-learning-pytorch-language-model-with-nn-transformer-and-torchtext-part-2/">Day 181: Learning PyTorch - Language Model with nn.Transformer and TorchText {Part 2} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/06/30/day-182-learning-pytorch-custom-dataset-and-dataloader/">Day 182: Learning PyTorch - Custom Dataset and DataLoader - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/01/day-183-learning-pytorch-torchtext-introduction/">Day 183: Learning PyTorch - TorchText Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/02/day-184-learning-pytorch-machine-translation-with-torchtext/">Day 184: Learning PyTorch - Machine Translation with TorchText - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/03/day-185-nlp-papers-summary-a-discourse-aware-attention-model-for-abstractive-summarization-of-long-documents/">Day 185: NLP Papers Summary - A Discourse-Aware Attention Model for Abstractive Summarization of Long Documents - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/04/day-186-nlp-papers-summary-contextualizing-citations-for-scientific-summarization-using-word-embeddings-and-domain-knowledge/">Day 186: NLP Papers Summary - Contextualizing Citations for Scientific Summarization using Word Embeddings and Domain Knowledge - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/05/day-187-learn-nlp-with-me-embeddings-of-language-knowledge-representation-and-reasoning/">Day 187: Learn NLP With Me  Embeddings of Language, Knowledge Representation, and Reasoning - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/06/day-188-nlp-papers-summary-a-supervised-approach-to-extractive-summarisation-of-scientific-papers/">Day 188: NLP Papers Summary - A Supervised Approach to Extractive Summarisation of Scientific Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/07/day-189-learning-pytorch-pytorch-lightning-introduction/">Day 189: Learning PyTorch - PyTorch Lightning Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/08/day-190-learning-pytorch-pytorch-lightning-structure-with-codes/">Day 190: Learning PyTorch - PyTorch Lightning Structure {with codes} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/09/day-191-summarisation-of-arxiv-papers-using-textrank-does-it-work/">Day 191: Summarisation of arXiv papers using TextRank - Does it work? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/10/day-192-nlp-papers-summary-guiding-extractive-summarization-with-question-answering-rewards/">Day 192: NLP Papers Summary - Guiding Extractive Summarization with Question-Answering Rewards - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/11/day-193-learning-pytorch-tweets-sentiment-extraction-part-1/">Day 193: Learning PyTorch - Tweets Sentiment Extraction {Part 1} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/12/day-194-learning-pytorch-tweets-sentiment-extraction-part-2/">Day 194: Learning PyTorch - Tweets Sentiment Extraction {Part 2} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/13/day-195-learn-nlp-with-me-what-is-coreference-resolution/">Day 195: Learn NLP With Me  What is Coreference Resolution? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/14/day-196-coreference-resolution-with-neuralcoref-spacy/">Day 196: Coreference Resolution with NeuralCoref {SpaCy} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/15/day-197-learn-nlp-with-me-what-is-coreference-resolution/">Day 197: Learn NLP With Me  Filling the Gaps with NLP Interview Questions - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/16/day-198-learn-nlp-with-me-filling-the-gaps-with-nlp-interview-questions-ii/">Day 198: Learn NLP With Me  Filling the Gaps with NLP Interview Questions II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/17/day-199-learn-nlp-with-me-filling-the-gaps-with-nlp-interview-questions-iii/">Day 199: Learn NLP With Me  Filling the Gaps with NLP Interview Questions III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/18/day-200-learn-nlp-with-me-filling-the-gaps-with-nlp-interview-questions-iv/">Day 200: Learn NLP With Me  Filling the Gaps with NLP Interview Questions IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/19/day-201-abbreviation-resolution-and-umls-entity-linking-using-scispacy/">Day 201: Abbreviation Resolution and UMLS Entity Linking using SciSpaCy - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/20/day-202-learn-nlp-with-me-nlp-and-transfer-learning-revisit/">Day 202: Learn NLP With Me  NLP and Transfer Learning Revisit - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/21/day-203-learn-nlp-with-me-attention-mechanism-and-transformers-revisit/">Day 203: Learn NLP With Me  Attention Mechanism and Transformers Revisit - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/22/day-204-learn-nlp-with-me-subword-tokenisation-and-normalisation/">Day 204: Learn NLP With Me  Subword Tokenisation and Normalisation - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/23/day-205-learn-nlp-with-me-zero-shot-learning-for-text-classification/">Day 205: Learn NLP With Me  Zero-Shot Learning for Text Classification - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/24/day-206-nlp-papers-summary-transformers-and-pointer-generator-networks-for-abstractive-summarization/">Day 206: NLP Papers Summary - Transformers and Pointer-Generator Networks for Abstractive Summarization - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/25/day-207-learning-pytorch-fine-tuning-bert-for-sentiment-analysis-part-one/">Day 207: Learning PyTorch - Fine Tuning BERT for Sentiment Analysis {Part One} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/26/day-208-learning-pytorch-fine-tuning-bert-for-sentiment-analysis-part-two/">Day 208: Learning PyTorch - Fine Tuning BERT for Sentiment Analysis {Part Two} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/27/day-209-introduction-to-clustering/">Day 209: Introduction to Clustering - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/28/day-210-describing-4-different-clustering-algorithms/">Day 210: Describing 4 different clustering algorithms - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/29/day-211-when-to-use-which-clustering-algorithms/">Day 211: When to use which clustering algorithms? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/30/day-212-k-means-clustering-using-sk-learn-and-nltk-quick-read/">Day 212: K-Means Clustering using SK-Learn and NLTK {Quick Read} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/07/31/day-213-learn-nlp-with-me-slp-textbook-lexicons-for-sentiment-affect-and-connotation-i/">Day 213: Learn NLP With Me  SLP Textbook Ch.21 - Lexicons for Sentiment, Affect, and Connotation I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/01/day-214-learn-nlp-with-me-slp-textbook-lexicons-for-sentiment-affect-and-connotation-ii/">Day 214: Learn NLP With Me  SLP Textbook Ch.21 - Lexicons for Sentiment, Affect, and Connotation II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/02/day-215-learn-nlp-with-me-slp-textbook-ch-21-lexicons-for-sentiment-affect-and-connotation-iii/">Day 215: Learn NLP With Me  SLP Textbook Ch.21 - Lexicons for Sentiment, Affect, and Connotation III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/03/day-216-learn-nlp-with-me-slp-textbook-ch-21-lexicons-for-sentiment-affect-and-connotation-iv/">Day 216: Learn NLP With Me  SLP Textbook Ch.21 - Lexicons for Sentiment, Affect, and Connotation IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/04/day-217-learn-nlp-with-me-slp-textbook-ch-7-neural-networks-and-neural-language-models-i/">Day 217: Learn NLP With Me  SLP Textbook Ch.7  Neural Networks and Neural Language Models I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/05/day-218-learn-nlp-with-me-slp-textbook-ch-7-neural-networks-and-neural-language-models-ii/">Day 218: Learn NLP With Me  SLP Textbook Ch.7  Neural Networks and Neural Language Models II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/06/day-219-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-i/">Day 219: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/07/day-220-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-ii/">Day 220: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/08/day-221-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-iii/">Day 221: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/09/day-222-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-iv/">Day 222: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/10/day-223-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-v/">Day 223: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/11/day-224-learn-nlp-with-me-slp-textbook-ch-22-coreference-resolution-vi/">Day 224: Learn NLP With Me  SLP Textbook Ch.22  Coreference Resolution VI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/12/day-225-nlp-papers-summary-architecture-of-knowledge-graph-construction-techniques/">Day 225: NLP Papers Summary - Architecture of Knowledge Graph Construction Techniques - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/13/day-226-nlp-papers-summary-anticipating-stock-market-of-the-renowned-companies-a-knowledge-graph-approach-i/">Day 226: NLP Papers Summary - Anticipating Stock Market of the Renowned Companies: A Knowledge Graph Approach I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/14/day-227-learn-nlp-with-me-translate-model-for-knowledge-graph-embedding/">Day 227: Learn NLP With Me - Translate model for Knowledge Graph Embedding - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/15/day-228-learn-nlp-with-me-knowledge-graph-on-finance-balance-sheets/">Day 228: Learn NLP With Me - Knowledge Graph on Finance {Balance Sheets} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/16/day-229-nlp-papers-summary-building-and-exploring-an-ekg-for-investment-analysis-introduction-and-challenges/">Day 229: NLP Papers Summary - Building and Exploring an EKG for Investment Analysis - Introduction and Challenges - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/17/day-230-nlp-papers-summary-building-and-exploring-an-ekg-for-investment-analysis-approach-overview/">Day 230: NLP Papers Summary - Building and Exploring an EKG for Investment Analysis - Approach Overview - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/18/day-231-nlp-papers-summary-building-and-exploring-an-ekg-for-investment-analysis-building-knowledge-graphs/">Day 231: NLP Papers Summary  Building and Exploring an EKG for Investment Analysis  Building Knowledge Graphs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/19/day-232-nlp-papers-summary-building-and-exploring-an-ekg-for-investment-analysis-deployment-and-related-work/">Day 232: NLP Papers Summary  Building and Exploring an EKG for Investment Analysis  Deployment and Related Work - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/20/day-233-learn-nlp-with-me-linkedins-knowledge-graph/">Day 233: Learn NLP With Me - LinkedIn&rsquo;s Knowledge Graph - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/21/day-234-nlp-papers-summary-topic-modeling-in-financial-documents/">Day 234: NLP Papers Summary  Topic Modeling in Financial Documents - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/22/day-235-learn-nlp-with-me-topic-modelling-with-lsa-and-lda/">Day 235: Learn NLP With Me - Topic Modelling with LSA and LDA - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/23/day-236-nlp-papers-summary-a-bert-based-sentiment-analysis-and-key-entity-detection-approach-for-online-financial-texts/">Day 236: NLP Papers Summary  A BERT based Sentiment Analysis and Key Entity Detection Approach for Online Financial Texts - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/24/day-237-learn-nlp-with-me-an-exhaustive-guide-to-detecting-and-fighting-neural-fake-news-using-nlp/">Day 237: Learn NLP With Me - An Exhaustive Guide to Detecting and Fighting Neural Fake News using NLP - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/25/day-238-nlp-implementation-kaggles-fake-news-challenge-bert-classifier-using-pytorch-and-huggingface/">Day 238: NLP Implementation - Kaggle&rsquo;s Fake News Challenge - BERT Classifier using PyTorch and HuggingFace I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/26/day-239-nlp-implementation-kaggles-fake-news-challenge-bert-classifier-using-pytorch-and-huggingface-ii/">Day 239: NLP Implementation - Kaggle&rsquo;s Fake News Challenge - BERT Classifier using PyTorch and HuggingFace II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/27/day-240-nlp-implementation-kaggles-fake-news-challenge-bert-classifier-using-pytorch-and-huggingface-iii/">Day 240: NLP Implementation - Kaggle&rsquo;s Fake News Challenge - BERT Classifier using PyTorch and HuggingFace III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/28/day-241-nlp-implementation-topic-modelling-and-sentiment-analysis-on-news-articles-document-level/">Day 241: NLP Implementation - Topic Modelling and Sentiment Analysis on News Articles {Document Level} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/29/day-242-nlp-implementation-topic-modelling-and-sentiment-analysis-on-news-articles-sentence-level/">Day 242: NLP Implementation - Topic Modelling and Sentiment Analysis on News Articles {Sentence Level} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/30/day-243-nlp-implementation-entity-extraction-and-linking-ner-and-coreference-resolution-using-spacy/">Day 243: NLP Implementation - Entity Extraction and Linking - NER and Coreference Resolution using SpaCy - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/08/31/day-244-nlp-implementation-entity-extraction-and-linking-entity-linking-using-dbpedia/">Day 244: NLP Implementation - Entity Extraction and Linking - Entity Linking using DBPedia - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/01/day-245-nlp-implementation-putting-it-all-together-news-article-ingestion-pipeline/">Day 245: NLP Implementation - News Article Ingestion Pipeline - Putting it All Together - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/02/day-246-nlp-implementation-a-web-application-for-entity-tracking-flask-backend/">Day 246: NLP Implementation - A Web Application for Entity Tracking - Flask Backend - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/03/day-247-nlp-implementation-a-web-application-for-entity-tracking-react-frontend/">Day 247: NLP Implementation - A Web Application for Entity Tracking - React Frontend - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/04/day-248-nlp-implementation-a-simple-knowledge-graph-walkthrough/">Day 248: NLP Implementation - A Simple Knowledge Graph Walkthrough - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/05/day-249-learn-nlp-with-me-cs520-knowledge-graphs-lecture-1-what-is-a-knowledge-graph/">Day 249: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 1 - What is a knowledge graph? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/06/day-250-learn-nlp-with-me-cs520-knowledge-graphs-lecture-2-how-to-create-a-knowledge-graph/">Day 250: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 2 - How to create a knowledge graph? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/07/day-251-learn-nlp-with-me-cs520-knowledge-graphs-lecture-3-what-are-some-advanced-knowledge-graphs/">Day 251: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 3 - What are some advanced knowledge graphs? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/08/day-252-learn-nlp-with-me-cs520-knowledge-graphs-lecture-4-what-are-some-knowledge-graph-inference-algorithms/">Day 252: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 4 - What are some knowledge graph inference algorithms? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/09/day-253-learn-nlp-with-me-cs520-knowledge-graphs-lecture-5-how-to-evolve-a-knowledge-graph/">Day 253: Learn NLP With Me - CS520 Knowledge Graphs - Lecture 5 - How to evolve a knowledge graph? - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/10/day-254-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-i/">Day 254: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/11/day-255-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-ii/">Day 255: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/12/day-256-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-iii/">Day 256: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/13/day-257-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-iv/">Day 257: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/14/day-258-learn-nlp-with-me-slp-textbook-ch-23-discourse-coherence-v/">Day 258: Learn NLP With Me  SLP Textbook Ch.23  Discourse Coherence V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/15/day-259-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-i/">Day 259: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/16/day-260-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-ii/">Day 260: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/17/day-261-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-iii/">Day 261: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/18/day-262-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-iv/">Day 262: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/19/day-263-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-v/">Day 263: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/20/day-264-learn-nlp-with-me-slp-textbook-ch-26-dialogue-systems-and-chatbots-vi/">Day 264: Learn NLP With Me  SLP Textbook Ch.26  Dialogue Systems and Chatbots VI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/21/day-265-learn-nlp-with-me-intent-classification-for-chatbots-airbnbs-approach/">Day 265: Learn NLP With Me  Intent Classification for Chatbots {Airbnb&rsquo;s Approach} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/22/day-266-learn-nlp-with-me-building-a-conversational-interface-i/">Day 266: Learn NLP With Me  Building a Conversational Interface I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/23/day-267-learn-nlp-with-me-building-a-conversational-interface-ii/">Day 267: Learn NLP With Me  Building a Conversational Interface II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/24/day-268-learn-nlp-with-me-building-a-conversational-interface-iii/">Day 268: Learn NLP With Me  Building a Conversational Interface III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/25/day-269-learn-nlp-with-me-training-the-named-entity-recognizer-using-spacy-i/">Day 269: Learn NLP With Me  Training the named entity recognizer using SpaCy I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/26/day-270-learn-nlp-with-me-training-the-named-entity-recognizer-using-spacy-ii/">Day 270: Learn NLP With Me  Training the named entity recognizer using SpaCy II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/27/day-271-learn-nlp-with-me-hidden-markov-models-hmms-i/">Day 271: Learn NLP With Me  Hidden Markov Models {HMMs} I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/28/day-272-nlp-discovery-prodigy-annotation-tool/">Day 272: NLP Discovery - Prodigy Annotation Tool - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/29/day-273-learn-nlp-with-me-hidden-markov-models-hmms-ii/">Day 273: Learn NLP With Me  Hidden Markov Models {HMMs} II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/09/30/day-274-learn-nlp-with-me-training-the-named-entity-recognizer-using-spacy-iii/">Day 274: Learn NLP With Me  Training the named entity recognizer using SpaCy III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/01/day-275-the-beginning-of-a-new-chapter-start-with-why/">Day 275: Ryan&rsquo;s PhD Journey - The Beginning of a New Chapter - Starting with Why - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/02/day-276-learn-nlp-with-me-knowledge-graph-for-financial-services/">Day 276: Learn NLP With Me - Knowledge Graph for Financial Services - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/03/day-277-learn-nlp-with-me-using-knowledge-graphs-to-identify-investment-opportunities/">Day 277: Learn NLP With Me - Using Knowledge Graphs to Identify Investment Opportunities - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/04/day-278-learn-nlp-with-me-richer-sentence-embeddings-using-sentence-bert/">Day 278: Learn NLP With Me - Richer Sentence Embeddings using Sentence-BERT - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/05/day-279-learn-nlp-with-me-trustworthy-and-explainable-ai-achieved-through-knowledge-graphs/">Day 279: Learn NLP With Me - Trustworthy and Explainable AI Achieved Through Knowledge Graphs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/06/day-280-nlp-discovery-lang-ais-unsupervised-intent-discovery-whitepaper/">Day 280: NLP Discovery - lang.ais Unsupervised Intent Discovery {Whitepaper} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/07/day-281-nlp-papers-summary-knowledge-reasoning-over-knowledge-graph-i/">Day 281: NLP Papers Summary - Knowledge Reasoning over Knowledge Graph I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/08/day-282-learn-nlp-with-me-building-an-enterprise-knowledge-graph-at-uber/">Day 282: Learn NLP With Me - Building an Enterprise Knowledge Graph at Uber - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/09/day-283-learn-nlp-with-me-hidden-markov-models-hmms-iii/">Day 283: Learn NLP With Me - Hidden Markov Models {HMMs} III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/10/day-284-learn-nlp-with-me-introduction-to-flair-for-nlp/">Day 284: Learn NLP With Me - Introduction to Flair for NLP - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/11/day-285-learn-nlp-with-me-domain-specific-kg-textbook-chapter-1-what-is-a-knowledge-graph-i/">Day 285: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 1 - What Is a Knowledge Graph I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/12/day-286-learn-nlp-with-me-domain-specific-kg-textbook-chapter-1-what-is-a-knowledge-graph-ii/">Day 286: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 1 - What Is a Knowledge Graph II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/13/day-287-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-i/">Day 287: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/14/day-288-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-ii/">Day 288: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/15/day-289-ryans-phd-journey-neo4j-graph-fundamentals/">Day 289: Ryans PhD Journey  Neo4j Graph Fundamentals - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/16/day-290-ryans-phd-journey-cypher-introduction/">Day 290: Ryans PhD Journey  Cypher Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/17/day-291-learn-nlp-with-me-named-entity-ner-evaluation-metrics-based-on-entity-level/">Day 291: Learn NLP With Me - Named-Entity {NER} evaluation metrics based on entity-level - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/18/day-292-ryans-phd-journey-cypher-queries-and-patterns/">Day 292: Ryans PhD Journey  Cypher&rsquo;s Queries and Patterns - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/19/day-293-ryans-phd-journey-cyphers-crud-operations/">Day 293: Ryans PhD Journey  Cypher&rsquo;s CRUD Operations - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/20/day-294-ryans-phd-journey-cyphers-filtering-query-results/">Day 294: Ryans PhD Journey  Cypher&rsquo;s Filtering Query Results - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/21/day-295-ryans-phd-journey-cyphers-controlling-query-processing/">Day 295: Ryans PhD Journey  Cypher&rsquo;s Controlling Query Processing - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/22/day-296-ryans-phd-journey-cyphers-datetimes-and-subqueries/">Day 296: Ryans PhD Journey  Cypher&rsquo;s Datetimes and Subqueries - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/23/day-297-ryans-phd-journey-cyphers-user-defined-procedures-and-functions/">Day 297: Ryans PhD Journey  Cypher&rsquo;s User Defined Procedures and Functions - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/24/day-298-ryans-phd-journey-cyphers-hello-world-movie-graph-tutorial-i/">Day 298: Ryans PhD Journey  Cypher&rsquo;s Hello World - Movie Graph Tutorial I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/25/day-299-ryans-phd-journey-cyphers-hello-world-movie-graph-tutorial-ii/">Day 299: Ryans PhD Journey  Cypher&rsquo;s Hello World - Movie Graph Tutorial II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/26/day-300-ryans-phd-journey-cyphers-recommendation-engine-tutorial/">Day 300: Ryans PhD Journey  Cypher&rsquo;s Recommendation Engine Tutorial - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/27/day-301-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-iii/">Day 301: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/28/day-302-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-iv/">Day 302: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/29/day-303-learn-nlp-with-me-domain-specific-kg-textbook-chapter-2-information-extraction-v/">Day 303: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 2 - Information Extraction V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/30/day-304-learn-nlp-with-me-domain-specific-kg-textbook-chapter-3-entity-resolution-i/">Day 304: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 3 - Entity Resolution I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/10/31/day-305-ryans-phd-journey-why-graph-databases-neo4j/">Day 305: Ryans PhD Journey  Why Graph Databases {Neo4j} - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/01/day-306-learn-nlp-with-me-domain-specific-kg-textbook-chapter-3-entity-resolution-ii/">Day 306: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 3 - Entity Resolution II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/02/day-307-ryans-phd-journey-neo4j-python-driver/">Day 307: Ryans PhD Journey  Neo4j&rsquo;s Python Driver - How to connecting Python with Neo4j - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/03/day-308-learn-nlp-with-me-domain-specific-kg-textbook-chapter-3-entity-resolution-iii/">Day 308: Learn NLP With Me - Domain-Specific KG Textbook - Chapter 3 - Entity Resolution III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/04/day-309-ryans-phd-journey-from-documents-to-graph/">Day 309: Ryans PhD Journey  From Documents to Graph - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/05/day-310-nlp-discovery-diffbots-knowledge-graph-api/">Day 310: NLP Discovery - DiffBot&rsquo;s Knowledge Graph API - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/06/day-311-ryans-phd-journey-overview-of-knowledge-graphs/">Day 311: Ryans PhD Journey  Overview of Knowledge Graphs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/07/day-312-ryans-phd-journey-knowledge-representation-learning-i/">Day 312: Ryans PhD Journey  Knowledge Representation Learning I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/08/day-313-ryans-phd-journey-knowledge-representation-learning-ii/">Day 313: Ryans PhD Journey  Knowledge Representation Learning II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/09/day-314-ryans-phd-journey-knowledge-representation-learning-iii/">Day 314: Ryans PhD Journey  Knowledge Representation Learning III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/10/day-315-ryans-phd-journey-knowledge-acquisition/">Day 315: Ryans PhD Journey  Knowledge Acquisition I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/11/day-316-ryans-phd-journey-knowledge-acquisition-ii/">Day 316: Ryans PhD Journey  Knowledge Acquisition II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/12/day-317-ryans-phd-journey-temporal-knowledge-graph-knowledge-aware-applications/">Day 317: Ryans PhD Journey  Temporal Knowledge Graph &amp; Knowledge-Aware Applications - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/13/day-318-ryans-phd-journey-future-directions-in-kgs/">Day 318: Ryans PhD Journey  Future Directions in KGs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/14/day-319-ryans-phd-journey-overview-of-graph-neural-networks/">Day 319: Ryans PhD Journey  Overview of Graph Neural Networks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/15/day-320-ryans-phd-journey-introduction-to-gnns/">Day 320: Ryans PhD Journey  Introduction to GNNs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/16/day-321-ryans-phd-journey-variants-of-gnns/">Day 321: Ryans PhD Journey  Variants of GNNs - Graph Types - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/17/day-322-ryans-phd-journey-variants-of-gnns-propagation-step/">Day 322: Ryans PhD Journey  Variants of GNNs - Propagation Step - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/18/day-323-ryans-phd-journey-variants-of-gnns-training-methods-and-general-frameworks/">Day 323: Ryans PhD Journey  Variants of GNNs - Training Methods and General Frameworks - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/19/day-324-ryans-phd-journey-applications-and-future-work-of-gnns/">Day 324: Ryans PhD Journey  Applications and Future Work of GNNs - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/20/day-325-ryans-phd-journey-nodes-2020-notes-i/">Day 325: Ryans PhD Journey  Nodes 2020 Notes I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/21/day-326-ryans-phd-journey-nodes-2020-notes-ii/">Day 326: Ryans PhD Journey  Nodes 2020 Notes II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/22/day-327-ryans-phd-journey-link-prediction-introduction/">Day 327: Ryans PhD Journey  Link Prediction - Introduction - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/23/day-328-ryans-phd-journey-link-prediction-general-architecture-and-negative-sampling/">Day 328: Ryans PhD Journey  Link Prediction - General architecture and Negative Sampling - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/24/day-329-ryans-phd-journey-link-prediction-traditional-pipeline/">Day 329: Ryans PhD Journey  Link Prediction - Traditional Pipeline - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/25/day-330-ryans-phd-journey-refinitiv-knowledge-graph-info/">Day 330: Ryans PhD Journey  Refinitiv Knowledge Graph Info - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/26/day-331-ryans-phd-journey-literature-review-list-of-knowledge-graph-representation-papers/">Day 331: Ryans PhD Journey  Literature Review - List of Knowledge Graph Representation Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/27/day-332-ryans-phd-journey-literature-review-list-of-deep-learning-knowledge-graphs-papers/">Day 332: Ryans PhD Journey  Literature Review - List of Deep Learning &amp; Knowledge Graphs Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/28/day-333-ryans-phd-journey-literature-review-list-of-scoring-functions-papers/">Day 333: Ryans PhD Journey  Literature Review - List of Scoring Functions Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/29/day-334-ryans-phd-journey-literature-review-list-of-encoding-models-auxiliary-information-papers/">Day 334: Ryans PhD Journey  Literature Review - List of Encoding Models &amp; Auxiliary Information Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/11/30/day-335-ryans-phd-journey-literature-review-list-of-knowledge-graph-completion-papers/">Day 335: Ryans PhD Journey  Literature Review - List of Knowledge Graph Completion Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/01/day-336-ryans-phd-journey-literature-review-list-of-entity-discovery-papers/">Day 336: Ryans PhD Journey  Literature Review - List of Entity Discovery Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/02/day-337-ryans-phd-journey-literature-review-list-of-relation-extraction-papers/">Day 337: Ryans PhD Journey  Literature Review - List of Relation Extraction Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/03/day-338-ryans-phd-journey-literature-review-list-of-temporal-knowledge-graph-papers/">Day 338: Ryans PhD Journey  Literature Review - List of Temporal Knowledge Graph Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/04/day-339-ryans-phd-journey-literature-review-list-of-papers/">Day 339: Ryans PhD Journey  Literature Review - List of Knowledge-aware Applications Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/05/day-340-ryans-phd-journey-literature-review-list-of-future-work-related-papers/">Day 340: Ryans PhD Journey  Literature Review - List of Future Work Related Papers - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/06/day-341-ryans-phd-journey-literature-review-1st-passes/">Day 341: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/07/day-342-ryans-phd-journey-literature-review-1st-passes-ii/">Day 342: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/08/day-343-ryans-phd-journey-literature-review-1st-passes-iii/">Day 343: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/09/day-344-ryans-phd-journey-literature-review-1st-passes-iv/">Day 344: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/10/day-345-ryans-phd-journey-literature-review-1st-passes-v/">Day 345: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/11/day-346-ryans-phd-journey-literature-review-1st-passes-vi/">Day 346: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes VI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/12/day-347-ryans-phd-journey-literature-review-knowledge-representation-1st-passes-vii/">Day 347: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes VII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/13/day-348-ryans-phd-journey-literature-review-knowledge-representation-1st-passes-viii/">Day 348: Ryans PhD Journey  Literature Review - Knowledge Representation - 1st Passes VIII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/14/day-349-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-i/">Day 349: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes I - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/15/day-350-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-ii/">Day 350: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes II - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/16/day-351-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-iii/">Day 351: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes III - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/17/day-352-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-iiii/">Day 352: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes IIII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/18/day-353-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-iv/">Day 353: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes IV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/19/day-354-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-v/">Day 354: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes V - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/20/day-355-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-vi/">Day 355: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes VI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/21/day-356-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-vii/">Day 356: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes VII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/22/day-357-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-viii/">Day 357: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes VIII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/23/day-358-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-ix/">Day 358: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes IX - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/24/day-359-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-x/">Day 359: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes X - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/25/day-360-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-xi/">Day 360: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes XI - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/26/day-361-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-xii/">Day 361: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes XII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/27/day-362-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-xiii/">Day 362: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes XIII - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/28/day-363-ryans-phd-journey-literature-review-knowledge-acquisition-1st-passes-xiv/">Day 363: Ryans PhD Journey  Literature Review - Knowledge Acquisition - 1st Passes XIV - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/29/day-364-ryans-phd-journey-openke-pytorch-library-analysis-code-snippets-for-11-ke-models/">Day 364: Ryans PhD Journey  OpenKE-PyTorch Library Analysis + code snippets for 11 KE models - Ryan Ong</a></li>
<li><a href="https://ryanong.co.uk/2020/12/30/day-365-nlp-papers-summary-a-survey-on-knowledge-graph-embedding/">Day 365: NLP Papers Summary  A Survey on Knowledge Graph Embedding - Ryan Ong</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Look for my friend&#39;s wagon using OpenAI CLIP</title>
            <link>http://semiosis.github.io/posts/look-for-my-friend-s-wagon-using-openai-clip/</link>
            <pubDate>Fri, 12 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/look-for-my-friend-s-wagon-using-openai-clip/</guid>
            <description>Full demonstration I show you how easy it is to search for an arbitrary thing inside of an arbitrary youtube video.
I am blogging and recording as I am demonstrating the technology.
Skip to 3 minutes to see the magic.

Summary I am looking for my friend&amp;rsquo;s wagon in a youtube video.
 This is the video Here&amp;rsquo;s What We REALLY Think Of Your Cars 5 - YouTube  The images of various wagons should appear after I run the command which I have bound in emacs.</description>
            <content type="html"><![CDATA[<h2 id="full-demonstration">Full demonstration</h2>
<p>I show you how easy it is to search for an
arbitrary thing inside of an arbitrary youtube
video.</p>
<p>I am blogging and recording as I am
demonstrating the technology.</p>
<p>Skip to 3 minutes to see the magic.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/rbMQDnUccPQEEigQYXXeE48Xa" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/rbMQDnUccPQEEigQYXXeE48Xa.svg" /></a></p>
<h2 id="summary">Summary</h2>
<p>I am looking for my friend&rsquo;s wagon in a
youtube video.</p>
<dl>
<dt>This is the video</dt>
<dd><a href="https://www.youtube.com/watch?v=K-jYThQKZsQ">Here&rsquo;s What We REALLY Think Of Your Cars 5 - YouTube</a></dd>
</dl>
<p>The images of various wagons should appear after I run the command which I have bound in emacs.</p>
<table>
<thead>
<tr>
<th>kb</th>
<th>f</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>M-l / V</code></td>
<td><code>find-in-youtube</code></td>
<td><code>global-map</code></td>
</tr>
</tbody>
</table>
<p>It&rsquo;s based on code from this github repository.</p>
<p><a href="https://github.com/haltakov/natural-language-youtube-search">https://github.com/haltakov/natural-language-youtube-search</a></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">find-in-video <span style="color:#e6db74">&#34;https://www.youtube.com/watch?v=K-jYThQKZsQ&#34;</span> wagon</code></pre></td></tr></table>
</div>
</div>
<p>This is looking for wagons.</p>
<h2 id="results">Results</h2>
<figure>
    <img src="/ox-hugo/wagon.png"/> 
</figure>

]]></content>
        </item>
        
        <item>
            <title>Reading about DALL-E</title>
            <link>http://semiosis.github.io/posts/reading-about-dall-e/</link>
            <pubDate>Fri, 12 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/reading-about-dall-e/</guid>
            <description>Article https://openai.com/blog/dall-e/ Original paper https://arxiv.org/abs/2102.12092.pdf  Authors of Paper - Aditya Ramesh - Mikhail Pavlov - Gabriel Goh - Scott Gray - Chelsea Voss - Alec Radford - Mark Chen - Ilya Sutskever
Summary of DALL-E from Arxiv 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  Text-to-image generation has traditionally focused on finding better modeling assumptions for training on a fixed dataset.</description>
            <content type="html"><![CDATA[<dl>
<dt>Article</dt>
<dd><a href="https://openai.com/blog/dall-e/">https://openai.com/blog/dall-e/</a></dd>
<dt>Original paper</dt>
<dd><a href="https://arxiv.org/abs/2102.12092.pdf">https://arxiv.org/abs/2102.12092.pdf</a></dd>
</dl>
<p>Authors of Paper
-   Aditya Ramesh
-   Mikhail Pavlov
-   Gabriel Goh
-   Scott Gray
-   Chelsea Voss
-   Alec Radford
-   Mark Chen
-   Ilya Sutskever</p>
<h2 id="summary-of-dall-e-from-arxiv">Summary of DALL-E from Arxiv</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Text-to-image generation has traditionally
focused on finding better modeling assumptions
for training on a fixed dataset.

These assumptions might involve complex
architectures, auxiliary losses, or side
information such as object part labels or
segmentation masks supplied during training.

We describe a simple approach for this task
based on a transformer that autoregressively
models the text and image tokens as a single
stream of data.

With sufficient data and scale, our approach
is competitive with previous domain-specific
models when evaluated in a zero-shot fashion.</code></pre></td></tr></table>
</div>
</div>
<h3 id="gpt-3-summarization"><code>GPT-3</code> Summarization</h3>
<p>Both of the following summarizations were made
my <code>GPT-3</code> using the following prompt:</p>
<p><a href="http://github.com/semiosis/prompts/blob/master/prompts/summarize-for-2nd-grader.prompt">http://github.com/semiosis/prompts/blob/master/prompts/summarize-for-2nd-grader.prompt</a></p>
<ul>
<li>Abstractive summarizations of the abstract
<ul>
<li>
<p>This is how we can make a computer that can make a picture of words.</p>
</li>
<li>
<p>This is about computers learning to understand pictures and words together,
not just pictures or just words.</p>
</li>
</ul>
</li>
</ul>
<h2 id="automating-the-process-of-reading-papers">Automating the process of reading papers</h2>
<ul>
<li>I use <code>GPT-3</code> and <code>spaCy</code> to summarize.</li>
</ul>
<p><a title="asciinema recording" href="https://asciinema.org/a/mp12WYy9bWwkeRizb4Y4o4jJb" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/mp12WYy9bWwkeRizb4Y4o4jJb.svg" /></a></p>
]]></content>
        </item>
        
        <item>
            <title>Context menus based on GPT-3</title>
            <link>http://semiosis.github.io/posts/context-menus-based-on-gpt-3/</link>
            <pubDate>Tue, 09 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/context-menus-based-on-gpt-3/</guid>
            <description>Summary I create a GPT-3 prompt for testing to see if code is Haskell and use it as a test inside emacs to suggest further functions.
 Prompt file http://github.com/semiosis/prompts/blob/master/prompts/text-is-haskell.prompt  Demonstration As you can see, GPT-3 is able to detect the language and I can use that as a test in my emacs to provide further functions. The suggested function was yet another GPT-3 prompt function for translating Haskell into Clojure.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I create a GPT-3 prompt for testing to see if
code is Haskell and use it as a test inside
emacs to suggest further functions.</p>
<dl>
<dt>Prompt file</dt>
<dd><a href="http://github.com/semiosis/prompts/blob/master/prompts/text-is-haskell.prompt">http://github.com/semiosis/prompts/blob/master/prompts/text-is-haskell.prompt</a></dd>
</dl>
<h2 id="demonstration">Demonstration</h2>
<p>As you can see, GPT-3 is able to detect the
language and I can use that as a test in my
emacs to provide further functions. The
suggested function was yet another GPT-3
prompt function for translating Haskell into
Clojure.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/IUrbnMxTqP3cFtQB5CPWelCuP" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/IUrbnMxTqP3cFtQB5CPWelCuP.svg" /></a></p>
<p><span class="underline"><strong>The faster and more impressive version</strong></span>
This uses emacs' <code>language-detection</code> package.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/64hjDdeeqkhTEzZA9RvYjKyy9" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/64hjDdeeqkhTEzZA9RvYjKyy9.svg" /></a></p>
<h2 id="create-a-prompt-to-check-if-selected-code-is-haskell">Create a prompt to check if selected code is Haskell</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;test if text is haskell&#34;</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;tests if text is haskell code&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    If the code is haskell, respond with &#34;Haskell&#34;. If the query is not haskell, respond with &#34;?&#34;.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:putStrLn &#34;What is your name?&#34;
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:[1,2,3,4] ++ [9,10,11,12]
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:In reality, it would require too much code to hide _Prelude_ clashes like this, so you
</span><span style="color:#e6db74">    Language:?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:data Shape = Circle Float Float Float | Rectangle Float Float Float Float deriving (Show)
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:In reality, it would require too much code to hide _Prelude_ clashes like this, so you
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:(ns example.pprinter (:use clojure.pprint))
</span><span style="color:#e6db74">    Language:?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:surface (Rectangle (Point x1 y1) (Point x2 y2)) = (abs $ x2 - x1) * (abs $ y2 - y1)
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:&#34;Steve Buscemi&#34; !! 6
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:regex = re.compile(r&#39;^(?P&lt;indent&gt;(?: {4})*)(?P&lt;name&gt;\S.*)&#39;)
</span><span style="color:#e6db74">    Language:?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:doubleSmallNumber x = if x &gt; 100 then x else x*2
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:[ x | x &lt;- [50..100], x `mod` 7 == 3]
</span><span style="color:#e6db74">    Language:Haskell
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    Code:* TODO Look into =ctrl=
</span><span style="color:#e6db74">    Language:?
</span><span style="color:#e6db74">    ###
</span><span style="color:#e6db74">    &lt;1&gt;
</span><span style="color:#e6db74">    Language:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">40</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;text&#34;</span>
<span style="color:#f92672">examples</span>:
- |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    </span>    <span style="color:#ae81ff">putStrLn $ &#34;Hey, I Love &#34; ++ city ++ &#34;!&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="add-code-to-use-gpt-3-to-test-the-selected-text">Add code to use <code>GPT-3</code> to test the selected text</h2>
<p><code>GPT-3</code> will test if the selected text is in the Haskell language.</p>
<p>It will then provide a context menu option to translate it into Clojure.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun gpt-test-haskell ()
  (let ((lang (pen-pf-test-if-text-is-haskell (selection))))
    (<span style="color:#a6e22e">message</span> lang)
    (<span style="color:#a6e22e">string-equal</span> (<span style="color:#a6e22e">message</span> lang) <span style="color:#e6db74">&#34;Haskell&#34;</span>)))

<span style="color:#75715e">;; This is so I can jump here</span>
(defvar right-click-context-global-menu-tree-placeholder <span style="color:#66d9ef">nil</span>)
(setq right-click-context-global-menu-tree
      <span style="color:#f92672">&#39;</span>((<span style="color:#e6db74">&#34;Cancel&#34;</span> :call <span style="color:#a6e22e">identity</span>)
        (<span style="color:#e6db74">&#34;Edit menu&#34;</span> :call (j <span style="color:#e6db74">&#39;right-click-context-global-menu-tree-placeholder</span>))
        (<span style="color:#e6db74">&#34;Button cloud&#34;</span> :call toggle-buttoncloud)
        (<span style="color:#e6db74">&#34;GPT-3&#34;</span>
         (<span style="color:#e6db74">&#34;Convert Haskell to Clojure&#34;</span> :call pen-pf-translate-haskell-to-clojure :if (gpt-test-haskell)))
        (<span style="color:#e6db74">&#34;NLP&#34;</span>
         (<span style="color:#e6db74">&#34;Summarize&#34;</span> :call (progn
                              (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;pen-pf-eli5-explain-like-i-m-five</span>)
                              (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;fi-text-to-paras</span>)) :if (selected-p))
         (<span style="color:#e6db74">&#34;Vexate&#34;</span> :call (progn
                           (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;pen-pf-complicated-explanation-of-how-to-x</span>)
                           (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;fi-text-to-paras</span>)) :if (selected-p))
         (<span style="color:#e6db74">&#34;Fast Paras&#34;</span> :call (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;fi-text-to-paras-nosegregate</span>) :if (selected-p))
         (<span style="color:#e6db74">&#34;Paras&#34;</span> :call (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;fi-text-to-paras</span>) :if (selected-p))
         (<span style="color:#e6db74">&#34;spaCy&#34;</span> :call (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;sps-play-spacy</span>) :if (selected-p)))
))</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Google ngrams in emacs</title>
            <link>http://semiosis.github.io/posts/google-ngrams-in-emacs/</link>
            <pubDate>Tue, 09 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/google-ngrams-in-emacs/</guid>
            <description>Summary I integrate the Google ngram viewer functionality into emacs for suggesting words in context.
Demonstration I demonstrate selecting alternative middle word for the given context words.

Code custom.el configuration
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  (defcustom google-ngrams-corpus &amp;#34;&amp;#34; &amp;#34;Google ngrams corpus&amp;#34; :type &amp;#39;string :group &amp;#39;system-custom :initialize #&amp;#39;custom-initialize-default :options (list &amp;#34;15 # english 2012&amp;#34; &amp;#34;16 # english fiction&amp;#34; &amp;#34;26 # english 2019&amp;#34;) :set (lambda (_sym value) (myrc-set (tr &amp;#34;-&amp;#34; &amp;#34;_&amp;#34; (sym2str _sym)) value) (set _sym (sor value))) ;; The default :initialize is custom-initialize-reset ;; And uses the :set function ;; :initialize (lambda :get (lambda (_sym) (let* ((yaml (yamlmod-read-file &amp;#34;/home/shane/notes/myrc.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I integrate the Google ngram viewer
functionality into emacs for suggesting words in context.</p>
<h2 id="demonstration">Demonstration</h2>
<p>I demonstrate selecting alternative middle
word for the given context words.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/w6DuW7w4gcbxVX8d8xEeIkljt" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/w6DuW7w4gcbxVX8d8xEeIkljt.svg" /></a></p>
<h2 id="code">Code</h2>
<p><span class="underline"><strong>custom.el configuration</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defcustom google-ngrams-corpus <span style="color:#e6db74">&#34;&#34;</span>
  <span style="color:#e6db74">&#34;Google ngrams corpus&#34;</span>
  :type <span style="color:#e6db74">&#39;string</span>
  :group <span style="color:#e6db74">&#39;system-custom</span>
  :initialize <span style="color:#a6e22e">#&#39;</span>custom-initialize-default
  :options (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#34;15 # english 2012&#34;</span>
                 <span style="color:#e6db74">&#34;16 # english fiction&#34;</span>
                 <span style="color:#e6db74">&#34;26 # english 2019&#34;</span>)
  :set (lambda (_sym value)
         (myrc-set (tr <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#e6db74">&#34;_&#34;</span> (sym2str _sym)) value)
         (<span style="color:#a6e22e">set</span> _sym (sor value)))
  <span style="color:#75715e">;; The default :initialize is custom-initialize-reset</span>
  <span style="color:#75715e">;; And uses the :set function</span>
  <span style="color:#75715e">;; :initialize (lambda</span>
  :get (lambda (_sym)
         (let* ((yaml (yamlmod-read-file <span style="color:#e6db74">&#34;/home/shane/notes/myrc.yaml&#34;</span>))
                (cfgval (sor (ht-get yaml (tr <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#e6db74">&#34;_&#34;</span> (sym2str _sym))))))

           (if cfgval
               (<span style="color:#a6e22e">set</span> _sym cfgval)
             <span style="color:#e6db74">&#34;26 # english 2019&#34;</span>))))</code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/ngram-custom.png"/> 
</figure>

<p><span class="underline"><strong>elisp</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun ngram-suggest (query)
  (str2lines (snc <span style="color:#e6db74">&#34;ngram-complete&#34;</span> query)))

(defun gen-google-ngram-queries (s i)
  (-filter-not-empty-string
   (str2list
    (snc
     (<span style="color:#a6e22e">concat</span>
      <span style="color:#e6db74">&#34;echo &#34;</span>
      (q s)
      <span style="color:#e6db74">&#34; | google-ngram-query-combinations &#34;</span>
      (str i)
      <span style="color:#e6db74">&#34; | perl -e &#39;print sort { length($b) &lt;=&gt; length($a) } &lt;&gt;&#39;&#34;</span>)))))

(defun ngram-query-replace-this ()
  (interactive)
  (if (not (selectionp))
      (let* ((line-str (chomp (current-line-string)))
             (col (<span style="color:#a6e22e">current-column</span>))
             (suggestions (ngram-suggest (fz (gen-google-ngram-queries line-str col)))))
        (if (-filter-not-empty-string suggestions)
            (let ((replacement (fz suggestions)))
              (if (sor replacement)
                  (nbfs replacement)))))))

(<span style="color:#a6e22e">define-key</span> my-mode-map (kbd <span style="color:#e6db74">&#34;H-Q&#34;</span>) <span style="color:#e6db74">&#39;ngram-query-replace-this</span>)

(defun ngram-query-replace ()
  (interactive)
  (if (selectionp)
      (let* ((query (if (selection-p)
                        (selection)))
             (reformulated-query (if (string-match-p <span style="color:#e6db74">&#34;\\*&#34;</span> query)
                                     query
                                   (let ((wildcard-word (fz (split-string query <span style="color:#e6db74">&#34; &#34;</span> <span style="color:#66d9ef">t</span>))))
                                     (if wildcard-word
                                         (s-replace-regexp (eatify wildcard-word) <span style="color:#e6db74">&#34;*&#34;</span> query)
                                       query))))
             (suggestions (ngram-suggest reformulated-query)))
        (if (-filter-not-empty-string suggestions)
            (let ((replacement (fz suggestions)))
              (if replacement
                  (progn
                    (cua-delete-region)
                    (<span style="color:#a6e22e">insert</span> replacement))))))))</code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>ngram-complete</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

postprocess<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    sed <span style="color:#e6db74">&#34;s/I &#39;m/I&#39;m/g&#34;</span>
<span style="color:#f92672">}</span>

<span style="color:#75715e"># corpus=15 # english 2012</span>
<span style="color:#75715e"># corpus=16 # english fiction</span>
<span style="color:#75715e"># corpus=26 # english 2019</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>corpus:=<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>myrc .google_ngrams_corpus | cut -d <span style="color:#e6db74">&#39; &#39;</span> -f 1<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>corpus:=<span style="color:#e6db74">&#34;26&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

start<span style="color:#f92672">=</span><span style="color:#ae81ff">1800</span>
end<span style="color:#f92672">=</span><span style="color:#ae81ff">2020</span>
<span style="color:#75715e"># end=1899</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -c<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        corpus<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    -y<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        start<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        end<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    -s<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        start<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    -e<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        end<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

awk1 | <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r line; <span style="color:#66d9ef">do</span>
    <span style="color:#f92672">{</span>
        phrase<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$line<span style="color:#e6db74">&#34;</span>
        oci curl -s <span style="color:#e6db74">&#34;https://books.google.com/ngrams/json?content=</span><span style="color:#66d9ef">$(</span>echo <span style="color:#e6db74">&#34;</span>$phrase<span style="color:#e6db74">&#34;</span> | urlencode | sed <span style="color:#e6db74">&#39;s/%2A/*/g&#39;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&amp;year_start=</span>$start<span style="color:#e6db74">&amp;year_end=</span>$end<span style="color:#e6db74">&amp;corpus=</span>$corpus<span style="color:#e6db74">&amp;smoothing=3&#34;</span> | jq -r .<span style="color:#f92672">[]</span>.ngram | htmldecode.sh | postprocess
    <span style="color:#f92672">}</span> 0&lt;/dev/null
<span style="color:#66d9ef">done</span> | sed -u 1d | pavs</code></pre></td></tr></table>
</div>
</div>
<p>The following python script generates ngram
queries for replacing the current word based
on the cursor index position.</p>
<p><span class="underline"><strong>google-ngram-query-combinations</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/env python3.6</span>
<span style="color:#75715e"># -*- coding: utf-8 -*-</span>

<span style="color:#f92672">import</span> sys
s <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>stdin<span style="color:#f92672">.</span>read()

len(sys<span style="color:#f92672">.</span>argv) <span style="color:#f92672">&gt;</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">or</span> exit(<span style="color:#ae81ff">1</span>)

i <span style="color:#f92672">=</span> int(sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>])

r <span style="color:#f92672">=</span> s[i:]
l <span style="color:#f92672">=</span> s[:i]
l <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34; &#34;</span><span style="color:#f92672">.</span>join(l<span style="color:#f92672">.</span>split())

<span style="color:#66d9ef">try</span>:
    <span style="color:#66d9ef">if</span> s[i <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>] <span style="color:#f92672">==</span> <span style="color:#e6db74">&#39; &#39;</span>:
        s <span style="color:#f92672">=</span> l <span style="color:#f92672">+</span> <span style="color:#e6db74">&#34; &#34;</span> <span style="color:#f92672">+</span> r
    <span style="color:#66d9ef">else</span>:
        s <span style="color:#f92672">=</span> l <span style="color:#f92672">+</span> r

    i<span style="color:#f92672">=</span>len(l)

    tks <span style="color:#f92672">=</span> s<span style="color:#f92672">.</span>split()
    s <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34; &#34;</span><span style="color:#f92672">.</span>join(tks)
    pos <span style="color:#f92672">=</span> s[:i]<span style="color:#f92672">.</span>count(<span style="color:#e6db74">&#34; &#34;</span>)

    tks[pos] <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;*&#34;</span>

    <span style="color:#66d9ef">for</span> n <span style="color:#f92672">in</span> range(<span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">6</span>):
        subtks <span style="color:#f92672">=</span> tks[max(pos <span style="color:#f92672">-</span> (n<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>), <span style="color:#ae81ff">0</span>):min(pos <span style="color:#f92672">+</span> n,len(tks))]

        <span style="color:#66d9ef">for</span> l <span style="color:#f92672">in</span> list(zip(<span style="color:#f92672">*</span>(subtks[i:] <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> range(n)))):
            <span style="color:#66d9ef">print</span>(<span style="color:#e6db74">&#34; &#34;</span><span style="color:#f92672">.</span>join(l))
<span style="color:#66d9ef">except</span>:
    <span style="color:#66d9ef">pass</span></code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">echo <span style="color:#e6db74">&#34;For the moment, let it accept 2 words to the left and 2 to the right&#34;</span> | google-ngram-query-combinations <span style="color:#ae81ff">20</span></code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">the moment, *
moment, * it
* it accept
For the moment, *
the moment, * it
moment, * it accept
* it accept <span style="color:#ae81ff">2</span>
For the moment, * it
the moment, * it accept
moment, * it accept <span style="color:#ae81ff">2</span>
* it accept <span style="color:#ae81ff">2</span> words
</code></pre></div><p><a title="asciinema recording" href="https://asciinema.org/a/nKcNFBl9VjLfU1kFeBkx9TIBH" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/nKcNFBl9VjLfU1kFeBkx9TIBH.svg" /></a></p>
]]></content>
        </item>
        
        <item>
            <title>spaCy in emacs</title>
            <link>http://semiosis.github.io/posts/spacy-in-emacs/</link>
            <pubDate>Tue, 09 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/spacy-in-emacs/</guid>
            <description>Summary I begin construction of an environment for developing with spaCy.
 Goals  spaCy pipeline builder/wizard Select and analyse text with spaCy linguistic features spaCy python playground text selection configuration of spaCy using emacs custom.el    deplacy demo  deplacy code https://github.com/KoichiYasuoka/deplacy  
Code generation and bindings 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  (defmacro etv-filter (cmd) (let* ((slug (slugify cmd)) (sym (str2sym (concat &amp;#34;etv-&amp;#34; slug)))) `(defun ,sym (&amp;amp;optional input) (interactive (list (my/selected-text))) (if (not input) (setq input (my/selected-text))) (etv (snc ,cmd input))))) (cl-loop for s in &amp;#39;(&amp;#34;partsofspeech&amp;#34; &amp;#34;entities&amp;#34; &amp;#34;displacy&amp;#34; &amp;#34;token-pos-dep&amp;#34; &amp;#34;sentiment&amp;#34; &amp;#34;segment-sentences&amp;#34;) do (eval (expand-macro `(etv-filter ,s)))) (define-key selected-keymap (kbd &amp;#34;Z n&amp;#34;) &amp;#39;ngram-query-replace) (define-key selected-keymap (kbd &amp;#34;Z S&amp;#34;) &amp;#39;sps-play-spacy) (define-key selected-keymap (kbd &amp;#34;Z P&amp;#34;) &amp;#39;etv-partsofspeech) (define-key selected-keymap (kbd &amp;#34;Z E&amp;#34;) &amp;#39;etv-entities) (define-key selected-keymap (kbd &amp;#34;Z D&amp;#34;) &amp;#39;etv-displacy) (define-key selected-keymap (kbd &amp;#34;Z T&amp;#34;) &amp;#39;etv-token-pos-dep) (define-key selected-keymap (kbd &amp;#34;Z N&amp;#34;) &amp;#39;etv-sentiment) (define-key selected-keymap (kbd &amp;#34;Z G&amp;#34;) &amp;#39;etv-segment-sentences)     Configuration yaml I store the configuration of spaCy inside a yaml file.</description>
            <content type="html"><![CDATA[<h2 id="summary">Summary</h2>
<p>I begin construction of an environment for developing with <code>spaCy</code>.</p>
<ul>
<li>Goals
<ul>
<li><code>spaCy</code> pipeline builder/wizard</li>
<li>Select and analyse text with <code>spaCy</code> linguistic features</li>
<li><code>spaCy</code> python playground text selection</li>
<li>configuration of <code>spaCy</code> using emacs <code>custom.el</code></li>
</ul>
</li>
</ul>
<h2 id="deplacy-demo"><code>deplacy</code> demo</h2>
<dl>
<dt><code>deplacy</code> code</dt>
<dd><a href="https://github.com/KoichiYasuoka/deplacy">https://github.com/KoichiYasuoka/deplacy</a></dd>
</dl>
<p><a title="asciinema recording" href="https://asciinema.org/a/OJcQVwHftFkLEypmaN8Qv8vLz" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/OJcQVwHftFkLEypmaN8Qv8vLz.svg" /></a></p>
<h2 id="code-generation-and-bindings">Code generation and bindings</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defmacro etv-filter (cmd)
  (let* ((slug (slugify cmd))
         (sym (str2sym (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;etv-&#34;</span> slug))))
    <span style="color:#f92672">`</span>(defun <span style="color:#f92672">,</span>sym (<span style="color:#66d9ef">&amp;optional</span> input)
       (interactive (<span style="color:#a6e22e">list</span> (my/selected-text)))
       (if (not input)
           (setq input (my/selected-text)))
       (etv (snc <span style="color:#f92672">,</span>cmd input)))))

(cl-loop for s in
         <span style="color:#f92672">&#39;</span>(<span style="color:#e6db74">&#34;partsofspeech&#34;</span>
           <span style="color:#e6db74">&#34;entities&#34;</span>
           <span style="color:#e6db74">&#34;displacy&#34;</span>
           <span style="color:#e6db74">&#34;token-pos-dep&#34;</span>
           <span style="color:#e6db74">&#34;sentiment&#34;</span>
           <span style="color:#e6db74">&#34;segment-sentences&#34;</span>)
         do
         (<span style="color:#a6e22e">eval</span>
          (expand-macro
           <span style="color:#f92672">`</span>(etv-filter <span style="color:#f92672">,</span>s))))

(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z n&#34;</span>) <span style="color:#e6db74">&#39;ngram-query-replace</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z S&#34;</span>) <span style="color:#e6db74">&#39;sps-play-spacy</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z P&#34;</span>) <span style="color:#e6db74">&#39;etv-partsofspeech</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z E&#34;</span>) <span style="color:#e6db74">&#39;etv-entities</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z D&#34;</span>) <span style="color:#e6db74">&#39;etv-displacy</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z T&#34;</span>) <span style="color:#e6db74">&#39;etv-token-pos-dep</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z N&#34;</span>) <span style="color:#e6db74">&#39;etv-sentiment</span>)
(<span style="color:#a6e22e">define-key</span> selected-keymap (kbd <span style="color:#e6db74">&#34;Z G&#34;</span>) <span style="color:#e6db74">&#39;etv-segment-sentences</span>)</code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/spacy-bindings.png"/> 
</figure>

<h2 id="configuration">Configuration</h2>
<h3 id="yaml"><code>yaml</code></h3>
<p>I store the configuration of <code>spaCy</code> inside a <code>yaml</code> file.</p>
<figure>
    <img src="/ox-hugo/spacyconf.png"/> 
</figure>

<h3 id="custom-dot-el"><code>custom.el</code></h3>
<p>I create a customization interface within
emacs for configuring <code>spaCy</code> system-wide.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defcustom spacy-model <span style="color:#e6db74">&#34;&#34;</span>
  <span style="color:#e6db74">&#34;spaCy model&#34;</span>
  :type <span style="color:#e6db74">&#39;string</span>
  :group <span style="color:#e6db74">&#39;system-custom</span>
  :initialize <span style="color:#a6e22e">#&#39;</span>custom-initialize-default
  :options (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#34;en&#34;</span>
                 <span style="color:#e6db74">&#34;en_core_web_trf&#34;</span>
                 <span style="color:#e6db74">&#34;en_core_web_sm&#34;</span>
                 <span style="color:#e6db74">&#34;en_pytt_bertbaseuncased_lg&#34;</span>
                 <span style="color:#e6db74">&#34;de_core_news_sm&#34;</span>
                 <span style="color:#e6db74">&#34;fr&#34;</span>)
  :set (lambda (_sym value)
         (myrc-set (tr <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#e6db74">&#34;_&#34;</span> (sym2str _sym)) value)
         (<span style="color:#a6e22e">set</span> _sym (sor value)))
  <span style="color:#75715e">;; The default :initialize is custom-initialize-reset</span>
  <span style="color:#75715e">;; And uses the :set function</span>
  <span style="color:#75715e">;; :initialize (lambda</span>
  :get (lambda (_sym)
         (let* ((yaml (yamlmod-read-file <span style="color:#e6db74">&#34;/home/shane/notes/myrc.yaml&#34;</span>))
                (cfgval (sor (ht-get yaml (tr <span style="color:#e6db74">&#34;-&#34;</span> <span style="color:#e6db74">&#34;_&#34;</span> (sym2str _sym))))))

           (if cfgval
               (<span style="color:#a6e22e">set</span> _sym cfgval)
             <span style="color:#e6db74">&#34;&#34;</span>))))</code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/spacyconf-custom.png"/> 
</figure>

<h2 id="external-scripts">external scripts</h2>
<p>This is an example of one of the exterynal
scripts that is used by and configured with
emacs via a <code>yaml</code> config.</p>
<p><span class="underline"><strong>displacy</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#75715e">#!/usr/bin/env python3</span>
<span style="color:#75715e"># -*- coding: utf-8 -*-</span>

<span style="color:#f92672">import</span> sys
data <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>stdin<span style="color:#f92672">.</span>read()

<span style="color:#f92672">import</span> sys
program_name <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">0</span>]
arguments <span style="color:#f92672">=</span> sys<span style="color:#f92672">.</span>argv[<span style="color:#ae81ff">1</span>:]
count <span style="color:#f92672">=</span> len(arguments)

<span style="color:#f92672">import</span> spacy

<span style="color:#f92672">import</span> shanepy
spacy_model <span style="color:#f92672">=</span> shanepy<span style="color:#f92672">.</span>myrc_get(<span style="color:#e6db74">&#34;spacy_model&#34;</span>) <span style="color:#f92672">or</span> <span style="color:#e6db74">&#34;en_core_web_md&#34;</span>
nlp <span style="color:#f92672">=</span> spacy<span style="color:#f92672">.</span>load(spacy_model)

doc <span style="color:#f92672">=</span> nlp(data)
spacy<span style="color:#f92672">.</span>displacy<span style="color:#f92672">.</span>serve(doc, style<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;dep&#39;</span>)</code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstration">Demonstration</h2>
<p>This demonstrates configuration, context
menus, bindings, code generation of scripts
all in emacs.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/G2RFrnbIiAgYv5uz5lbnYNqxr" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/G2RFrnbIiAgYv5uz5lbnYNqxr.svg" /></a></p>
]]></content>
        </item>
        
        <item>
            <title>An operating system based on GPT-3</title>
            <link>http://semiosis.github.io/posts/an-operating-system-based-on-gpt-3/</link>
            <pubDate>Mon, 08 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/an-operating-system-based-on-gpt-3/</guid>
            <description>Reference http://github.com/semiosis/examplary  Summary I assume that GPT-3 or some descendant of it will become the primary interface to the computer.
I create a configuration option to enable / disable GPT-3.
When disabled, the environment will resort to alternative means of performing tasks.
Configuration 1  vim +/&amp;#34;use_gpt3: on&amp;#34; &amp;#34;$NOTES/myrc.yaml&amp;#34;     1  vim +/&amp;#34;summarize) {&amp;#34; &amp;#34;$SCRIPTS/s&amp;#34;   If gpt3 is enabled, filter through OpenAI API abstractive summarizer Otherwise, use sumy.</description>
            <content type="html"><![CDATA[<dl>
<dt>Reference</dt>
<dd><a href="http://github.com/semiosis/examplary">http://github.com/semiosis/examplary</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I assume that <code>GPT-3</code> or some descendant of it
will become the primary interface to the
computer.</p>
<p>I create a configuration option to enable /
disable <code>GPT-3</code>.</p>
<p>When disabled, the environment will resort to
alternative means of performing tasks.</p>
<h2 id="configuration">Configuration</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vim +/<span style="color:#e6db74">&#34;use_gpt3: on&#34;</span> <span style="color:#e6db74">&#34;</span>$NOTES<span style="color:#e6db74">/myrc.yaml&#34;</span></code></pre></td></tr></table>
</div>
</div>
<figure>
    <img src="/ox-hugo/gpt3-config.png"/> 
</figure>

<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">vim +/<span style="color:#e6db74">&#34;summarize) {&#34;</span> <span style="color:#e6db74">&#34;</span>$SCRIPTS<span style="color:#e6db74">/s&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="if-gpt3-is-enabled-filter-through-openai-api-abstractive-summarizer">If <code>gpt3</code> is enabled, filter through OpenAI API abstractive summarizer</h3>
<p>Otherwise, use <code>sumy</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">summarize<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
    <span style="color:#66d9ef">if</span> myrc-test use_gpt3; <span style="color:#66d9ef">then</span>
        openai-complete $MYGIT/semiosis/prompts/prompts/summarize-for-2nd-grader.prompt
    <span style="color:#66d9ef">else</span>
        zsh -c <span style="color:#e6db74">&#34;sumy lex-rank --length=10 --file=&lt;(cat)&#34;</span>
    <span style="color:#66d9ef">fi</span>
<span style="color:#f92672">}</span>
;;</code></pre></td></tr></table>
</div>
</div>
<h2 id="a-demonstration-of-the-entire-workflow">A demonstration of the entire workflow</h2>
<p><a title="asciinema recording" href="https://asciinema.org/a/Fb17RAzSfSJAIksddxwqbsMhZ" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/Fb17RAzSfSJAIksddxwqbsMhZ.svg" /></a></p>
<h2 id="a-zettelkasten-of-natural-language-processing-tasks">A Zettelkasten of Natural Language Processing tasks</h2>
<figure>
    <img src="/ox-hugo/org-brain.png"/> 
</figure>

<p>I use <code>org-brain</code> because it enables me to
recall exactly where I am substituting <code>GPT-3</code>
within my scripts.</p>
<p><span class="underline"><strong><code>org-brain</code> demo</strong></span></p>
<p><a title="asciinema recording" href="https://asciinema.org/a/nrqqHWCfc5eG0lj3LPyzO2T2h" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/nrqqHWCfc5eG0lj3LPyzO2T2h.svg" /></a></p>
<h2 id="gpt-3-may-be-easily-toggled-via-point-and-click"><code>GPT-3</code> May be easily toggled via point and click</h2>
<figure>
    <img src="/ox-hugo/gpt-toggle.png"/> 
</figure>

]]></content>
        </item>
        
        <item>
            <title>A natural language database using a single GPT prompt</title>
            <link>http://semiosis.github.io/posts/a-natural-language-database-using-a-single-gpt-prompt/</link>
            <pubDate>Sun, 07 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/a-natural-language-database-using-a-single-gpt-prompt/</guid>
            <description>Original article https://www.gwern.net/GPT-3#the-database-prompt  Summary A single prompt describes transactions to and from a database.
GPT-3 is able to answer questions about the transactions that have taken place.
GPT-3 isn&amp;rsquo;t actually a database.
The LM simply understands language so well that describing the transactions that have taken place would naturally lead to the GPT-3 response.
The prompt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  title: &amp;#34;database example&amp;#34; doc: &amp;#34;GPT-3 as a NL interface for semantically querying logic in prose&amp;#34; prompt: |+The database begins knowing nothing.</description>
            <content type="html"><![CDATA[<dl>
<dt>Original article</dt>
<dd><a href="https://www.gwern.net/GPT-3#the-database-prompt">https://www.gwern.net/GPT-3#the-database-prompt</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>A single prompt describes transactions to and from a database.</p>
<p>GPT-3 is able to answer questions about the
transactions that have taken place.</p>
<p>GPT-3 isn&rsquo;t actually a database.</p>
<p>The LM simply understands language so well
that describing the transactions that have
taken place would naturally lead to the GPT-3
response.</p>
<h2 id="the-prompt">The prompt</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;database example&#34;</span>
<span style="color:#f92672">doc</span>: <span style="color:#e6db74">&#34;GPT-3 as a NL interface for semantically querying logic in prose&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    The database begins knowing nothing.
</span><span style="color:#e6db74">    The database knows everything that is added to it.
</span><span style="color:#e6db74">    The database does not know anything else.
</span><span style="color:#e6db74">    When asked a question, if the answer has been added to the database the database says the answer.
</span><span style="color:#e6db74">    When asked a question, if the answer has not been added the database says it does not know.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: Does the database know “What is 2+2?”
</span><span style="color:#e6db74">    A: The database does not know.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: Does the database know “What is the capital of France?”
</span><span style="color:#e6db74">    A: The database does not know.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    &#34;&#34;Tom is 20 years old&#34;&#34; is added to the database.
</span><span style="color:#e6db74">    Nothing else about Tom is added to the database.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: Does the database know where Tom lives?
</span><span style="color:#e6db74">    A: The database does not know.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: How does the database respond when Tom’s age?
</span><span style="color:#e6db74">    A: The database says “Tom is 20 years old.”
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: How does the database response when asked “What’s my age?”
</span><span style="color:#e6db74">    A: The database says “You are not in the database.”
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    &#34;&#34;Shane is a cool guy&#34;&#34; is added to the database.
</span><span style="color:#e6db74">    &#34;&#34;Shane is 33 years old&#34;&#34; is added to the database.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Q: &lt;1&gt;
</span><span style="color:#e6db74">    A:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;\n\n&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;query or input&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;How old is Shane?&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">conversation-mode</span>: <span style="color:#66d9ef">no</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstration">Demonstration</h2>
<p>As you can see, the prompt only functions
approximately as a database.</p>
<p>It could certainly be made more reliable
either through adjusting parameters or by
providing better counter-examples.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/VDkB11XyAMv8kvieuDuONwMUp" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/VDkB11XyAMv8kvieuDuONwMUp.svg" /></a></p>
<h2 id="utility">Utility</h2>
<p>This ability of GPT-3 could be used for the
NLP task of information extraction.</p>
]]></content>
        </item>
        
        <item>
            <title>Translating Haskell to Clojure with GPT-3</title>
            <link>http://semiosis.github.io/posts/translating-haskell-to-clojure-with-gpt-3/</link>
            <pubDate>Sun, 07 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/translating-haskell-to-clojure-with-gpt-3/</guid>
            <description>Relevant material https://hyperpolyglot.org/ml  Summary Who needs hyperpolyglot when you have GPT-3?
I translate Haskell into Clojure using the following prompt.
haskell-to-clojure.prompt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  title: &amp;#34;Translate Haskell to Clojure&amp;#34; prompt: |+Haskell: zip (map show [1,5,9]) [&amp;#34;a&amp;#34;,&amp;#34;b&amp;#34;,&amp;#34;c&amp;#34;] Clojure: (println (map vector &amp;#39;(1 2 3) &amp;#39;(4 5 6))) Haskell: map toUpper &amp;#34;MiXeD cAsE&amp;#34; Clojure: (clojure.</description>
            <content type="html"><![CDATA[<dl>
<dt>Relevant material</dt>
<dd><a href="https://hyperpolyglot.org/ml">https://hyperpolyglot.org/ml</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>Who needs <code>hyperpolyglot</code> when you have <code>GPT-3</code>?</p>
<p>I translate Haskell into Clojure using the following prompt.</p>
<h3 id="haskell-to-clojure-dot-prompt"><code>haskell-to-clojure.prompt</code></h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;Translate Haskell to Clojure&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    zip (map show [1,5,9]) [&#34;a&#34;,&#34;b&#34;,&#34;c&#34;]
</span><span style="color:#e6db74">    Clojure:
</span><span style="color:#e6db74">    (println (map vector &#39;(1 2 3) &#39;(4 5 6)))
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    map toUpper &#34;MiXeD cAsE&#34;
</span><span style="color:#e6db74">    Clojure:
</span><span style="color:#e6db74">    (clojure.string/upper-case &#34;MiXeD cAsE&#34;)
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    putStrLn &#34;Hello World&#34;
</span><span style="color:#e6db74">    Clojure:
</span><span style="color:#e6db74">    (println &#34;Hello World&#34;)
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    import Data.Time.Clock
</span><span style="color:#e6db74">    import Data.Time.Calendar
</span><span style="color:#e6db74">    date :: IO (Integer, Int, Int) -- :: (year, month, day)
</span><span style="color:#e6db74">    date = getCurrentTime &gt;&gt;= return . toGregorian . utctDay
</span><span style="color:#e6db74">    Clojure:
</span><span style="color:#e6db74">    (defn date [] (.toString (java.util.Date.)))
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">    Haskell:
</span><span style="color:#e6db74">    &lt;1&gt;
</span><span style="color:#e6db74">    Clojure:</span>    
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;\n\n&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;haskell code&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;min 1 2&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;&#34;</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstrations">Demonstrations</h2>
<p><a title="asciinema recording" href="https://asciinema.org/a/64hjDdeeqkhTEzZA9RvYjKyy9" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/64hjDdeeqkhTEzZA9RvYjKyy9.svg" /></a></p>
<p><a title="asciinema recording" href="https://asciinema.org/a/UknQeVwRejokdRKJEYa7KdNKk" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/UknQeVwRejokdRKJEYa7KdNKk.svg" /></a></p>
<h2 id="translate-haskell-into-clojure">Translate Haskell into Clojure</h2>
<p><span class="underline"><strong>Haskell</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#a6e22e">div</span> <span style="color:#ae81ff">7</span> <span style="color:#ae81ff">3</span></code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>Clojure</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(/ <span style="color:#ae81ff">7</span> <span style="color:#ae81ff">3</span>)</code></pre></td></tr></table>
</div>
</div>
<h2 id="it-s-not-perfect">It&rsquo;s not perfect</h2>
<p><span class="underline"><strong>Haskell</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#a6e22e">z</span> <span style="color:#f92672">=</span> x <span style="color:#f92672">*</span> y
  <span style="color:#66d9ef">where</span> x <span style="color:#f92672">=</span> <span style="color:#ae81ff">3.0</span>
        y <span style="color:#f92672">=</span> <span style="color:#ae81ff">2.0</span> <span style="color:#f92672">*</span> x</code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>Clojure</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">defn </span>z [x y] (* y x))</code></pre></td></tr></table>
</div>
</div>
<h2 id="but-it-s-pretty-good">But it&rsquo;s <strong>pretty good</strong></h2>
<p><span class="underline"><strong>Haskell</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-haskell" data-lang="haskell"><span style="color:#66d9ef">let</span> absn <span style="color:#f92672">=</span> <span style="color:#66d9ef">if</span> n <span style="color:#f92672">&lt;</span> <span style="color:#ae81ff">0</span> <span style="color:#66d9ef">then</span> <span style="color:#f92672">-</span>n <span style="color:#66d9ef">else</span> n</code></pre></td></tr></table>
</div>
</div>
<p><span class="underline"><strong>Clojure</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-clojure" data-lang="clojure">(<span style="color:#66d9ef">defn </span>absn [n] (<span style="color:#66d9ef">if </span>(<span style="color:#a6e22e">negative?</span> n) (- n) n))</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>crontab.guru in emacs and making a prompt with GPT-3 to copy it</title>
            <link>http://semiosis.github.io/posts/crontab-guru-in-emacs/</link>
            <pubDate>Sat, 06 Mar 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/crontab-guru-in-emacs/</guid>
            <description>Related https://crontab.guru/ Author http://github.com/mullikine  Summary I build some functionality into emacs to use crontab.guru behind the scenes to interpret tab lines displaying inside of emacs, without using the web browser.
I then build a GPT-3 prompt which does exactly the same thing without crontab.guru and provide the initial script I made to examplary (my GPT-3 DSL) as an example generator, to enhance the prompt if that is needed later.</description>
            <content type="html"><![CDATA[<dl>
<dt>Related</dt>
<dd><a href="https://crontab.guru/">https://crontab.guru/</a></dd>
<dt>Author</dt>
<dd><a href="http://github.com/mullikine">http://github.com/mullikine</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I build some functionality into emacs to use
<code>crontab.guru</code> behind the scenes to interpret
tab lines displaying inside of emacs, without
using the web browser.</p>
<p>I then build a GPT-3 prompt which does exactly
the same thing without <code>crontab.guru</code> and
provide the initial script I made to
<code>examplary</code> (my GPT-3 DSL) as an example
generator, to enhance the prompt if that is
needed later.</p>
<h2 id="initial-steps">Initial steps</h2>
<p>When lines in cron format appear in an emacs
buffer, the <code>crontab-guru</code> function is
suggested, allowing you to easily understand
crontabs.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun buffer-cron-lines ()
  (sor (snc <span style="color:#e6db74">&#34;scrape \&#34;((?:[0-9-/]+|\\\\*)\\\\s+){4}(?:[0-9]+|\\\\*)\&#34;&#34;</span> (<span style="color:#a6e22e">buffer-string</span>))))

(defun chrontab-guru (tab)
  (interactive (<span style="color:#a6e22e">list</span> (fz (buffer-cron-lines))))
  (let ((tab (sed <span style="color:#e6db74">&#34;s/\\s\\+/_/g&#34;</span> tab)))
    (chrome (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;https://crontab.guru/#&#34;</span> tab))))</code></pre></td></tr></table>
</div>
</div>
<h2 id="demonstration">Demonstration</h2>
<p><a title="asciinema recording" href="https://asciinema.org/a/dKU8QGolIthb93F8P29NESdn6" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/dKU8QGolIthb93F8P29NESdn6.svg" /></a></p>
<figure>
    <img src="/ox-hugo/crontabguru.png"/> 
</figure>

<h2 id="modify-to-display-the-explanation-inside-emacs">Modify to display the explanation inside emacs</h2>
<ul>
<li>Dump the Google Chrome DOM for the website (since it requires javascript)</li>
<li>Scrape the explanation from the website</li>
<li>Create a new buffer in emacs with the explanation</li>
</ul>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun crontab-guru (tab)
  (interactive (<span style="color:#a6e22e">list</span> (fz (buffer-cron-lines) (if (selectionp) (my/thing-at-point)))))
  (let ((tab (sed <span style="color:#e6db74">&#34;s/\\s\\+/_/g&#34;</span> tab)))
    <span style="color:#75715e">;; (chrome (concat &#34;https://crontab.guru/#&#34; tab))</span>
    (etv (scrape <span style="color:#e6db74">&#34;\&#34;[^\&#34;]*\&#34;&#34;</span> (snc (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;elinks-dump-chrome &#34;</span> (q (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;https://crontab.guru/#&#34;</span> tab))))))))</code></pre></td></tr></table>
</div>
</div>
<h2 id="prompt-gpt-3">Prompt GPT-3</h2>
<p>This script is a <code>string-&gt;string</code> filter
script that scrapes the chrome dom of
<code>crontab.guru</code> to get its result, given the tab as standard input.</p>
<p><span class="underline"><strong>interpret-crontab</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

scrape-crontab | awk1 | <span style="color:#66d9ef">while</span> IFS<span style="color:#f92672">=</span><span style="color:#e6db74">$&#39;\n&#39;</span> read -r tab; <span style="color:#66d9ef">do</span>
    <span style="color:#f92672">(</span>
        exec 0&lt;/dev/null
        <span style="color:#66d9ef">if</span> test -n <span style="color:#e6db74">&#34;</span>$tab<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">then</span>
            taburlbit<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$tab<span style="color:#e6db74">&#34;</span> | sed <span style="color:#e6db74">&#34;s/\\s\\+/_/g&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
            elinks-dump-chrome <span style="color:#e6db74">&#34;https://crontab.guru/#</span>$taburlbit<span style="color:#e6db74">&#34;</span> | scrape <span style="color:#e6db74">&#34;\&#34;[^\&#34;]*\&#34;&#34;</span>
        <span style="color:#66d9ef">fi</span>
    <span style="color:#f92672">)</span>
<span style="color:#66d9ef">done</span> | sed -e <span style="color:#e6db74">&#39;s/^&#34;//&#39;</span> -e <span style="color:#e6db74">&#39;s/&#34;$//&#39;</span></code></pre></td></tr></table>
</div>
</div>
<p>The following file is a GPT-3 prompt which
accepts the above <code>interpret-crontab</code> script
as an external function to generate and train
and ultimately replace the prompt.</p>
<p><span class="underline"><strong>crontab-translator.prompt</strong></span></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;crontab translator&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">  crontab
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  17 *	* * *
</span><span style="color:#e6db74">  At minute 17.
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  25 6	* * *
</span><span style="color:#e6db74">  At 06:25.
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  47 6	* * 7
</span><span style="color:#e6db74">  At 06:47 on Sunday.
</span><span style="color:#e6db74">  ###
</span><span style="color:#e6db74">  52 6	1 * *
</span><span style="color:#e6db74">  At 06:52 on day-of-month 1.
</span><span style="color:#e6db74">  &lt;1&gt;</span>  
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.3</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">60</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1.0</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.5</span>
<span style="color:#75715e"># If I make presence-penalty 0 then it will get very terse</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.0</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
- <span style="color:#e6db74">&#34;###&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
- <span style="color:#e6db74">&#34;tab&#34;</span>
<span style="color:#f92672">examples</span>:
- <span style="color:#e6db74">&#34;30 7    * * *&#34;</span>
<span style="color:#f92672">external</span>: <span style="color:#e6db74">&#34;interpret-crontab&#34;</span>
<span style="color:#f92672">filter</span>: <span style="color:#66d9ef">no</span>
<span style="color:#75715e"># Keep stitching together until reaching this limit</span>
<span style="color:#75715e"># This allows a full response for answers which may need n*max-tokens to reach the stop-sequence.</span>
<span style="color:#f92672">stitch-max</span>: <span style="color:#ae81ff">0</span></code></pre></td></tr></table>
</div>
</div>
<p>Example output from GPT-3:</p>
<dl>
<dt>Input tab</dt>
<dd><code>15 7    * * *</code></dd>
<dt>GPT-3 output</dt>
<dd><code>On day-of-week 7, at 15:00.</code></dd>
</dl>
<h2 id="moral-of-the-story">Moral of the story</h2>
<p>The moral of the story is that if a person
builds a website like crontab.guru, its
functionality actually becomes learned by the
next iteration of GPT and then its
functionality is able to be reproduced.</p>
]]></content>
        </item>
        
        <item>
            <title>Creating a playground for GPT-3 in emacs</title>
            <link>http://semiosis.github.io/posts/creating-a-playground-for-gpt-3-in-emacs/</link>
            <pubDate>Thu, 18 Feb 2021 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/creating-a-playground-for-gpt-3-in-emacs/</guid>
            <description>Code https://github.com/mullikine/pen.el Prompts https://github.com/mullikine/prompts meetup.com event https://www.meetup.com/Code-Craft-Dunedin/events/276407816/ Slides http://github.com/mullikine/presentation-prompt-engineering-in-emacs/blob/master/presentation.pdf  Demonstration 
Prompt-Engineering Part 1: Building an environment Summary of talk I received a key for the OpenAI API 2 weeks ago, just a couple of days before my birthday.
I had applied around 5 to 10 times in the last year and I had finally been given a key.
I decided since the hour is late I would work on productivity tools that anyone can use, to facilitate programming in the new paradigm.</description>
            <content type="html"><![CDATA[<dl>
<dt>Code</dt>
<dd><a href="https://github.com/mullikine/pen.el">https://github.com/mullikine/pen.el</a></dd>
<dt>Prompts</dt>
<dd><a href="https://github.com/mullikine/prompts">https://github.com/mullikine/prompts</a></dd>
<dt><code>meetup.com</code> event</dt>
<dd><a href="https://www.meetup.com/Code-Craft-Dunedin/events/276407816/">https://www.meetup.com/Code-Craft-Dunedin/events/276407816/</a></dd>
<dt>Slides</dt>
<dd><a href="http://github.com/mullikine/presentation-prompt-engineering-in-emacs/blob/master/presentation.pdf">http://github.com/mullikine/presentation-prompt-engineering-in-emacs/blob/master/presentation.pdf</a></dd>
</dl>
<h3 id="demonstration">Demonstration</h3>
<p><a title="asciinema recording" href="https://asciinema.org/a/t7ATnFpnfzBp0yicIlGCt6eXi" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/t7ATnFpnfzBp0yicIlGCt6eXi.svg" /></a></p>
<h2 id="prompt-engineering-part-1-building-an-environment"><strong>Prompt-Engineering Part 1:</strong> Building an environment</h2>
<h3 id="summary-of-talk">Summary of talk</h3>
<p>I received a key for the <code>OpenAI</code> API 2 weeks ago, just a couple
of days before my birthday.</p>
<p>I had applied around 5 to 10 times in the last
year and I had finally been given a key.</p>
<p>I decided since the hour is late I would work
on productivity tools that anyone can use, to
facilitate programming in the new paradigm.</p>
<h3 id="pen-dot-el-prompt-engineering-in-emacs"><code>pen.el</code> : Prompt engineering in emacs</h3>
<h4 id="prompt-engineer-mode"><code>prompt-engineer-mode</code></h4>
<p>Prompt-Engineer Mode is a global minor mode for emacs that facilitates the
creation, development, discovery and usage of prompts in your emacs.</p>
<ul>
<li>Create elisp functions based on GPT-3 prompts</li>
<li>Chain GPT-3 queries together using keyboard macros and functions</li>
<li>Interactively query, generate and transfrom both prose and code</li>
<li>Use GPT-3 as a search engine within emacs
<ul>
<li>Search the internet</li>
<li>Search documents
<ul>
<li><a href="https://beta.openai.com/docs/introduction/semantic-search">https://beta.openai.com/docs/introduction/semantic-search</a></li>
<li><a href="https://gpttools.com/semanticsearch">https://gpttools.com/semanticsearch</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="works-with">Works with</h3>
<ul>
<li>OpenAI API (GPT-3)
<ul>
<li><a href="https://beta.openai.com/">https://beta.openai.com/</a></li>
</ul>
</li>
</ul>
<h4 id="planned">Planned</h4>
<ul>
<li><code>openai-server</code> (GPT-2)
<ul>
<li><a href="https://github.com/shawwn/openai-server">https://github.com/shawwn/openai-server</a></li>
<li>Requires tensorflow 1</li>
</ul>
</li>
<li>DeepAI API
<ul>
<li><a href="https://deepai.org/">https://deepai.org/</a></li>
</ul>
</li>
<li>OpenAI API (GPT-4)
<ul>
<li><a href="https://beta.openai.com/">https://beta.openai.com/</a></li>
</ul>
</li>
</ul>
<h3 id="usage-workflow">Usage / Workflow</h3>
<ul>
<li>Enable <code>prompt-engineerer-mode</code> globally (on all buffers)</li>
<li>Have your <code>.prompt</code> file open in one window</li>
<li>Have the document open you want to apply prompt functions to
<ul>
<li>This could be source code, a chat window, or any kind of text document.</li>
</ul>
</li>
<li>Apply functions to do all sorts of things
<ul>
<li>Summarization</li>
<li>Generation of prose</li>
<li>Generation of code</li>
<li>Translation</li>
</ul>
</li>
</ul>
<h3 id="defining-a-yaml-format">Defining a <code>YAML</code> format</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-yaml" data-lang="yaml"><span style="color:#75715e"># lines are wrapped, but not in actual prompt</span>

<span style="color:#f92672">title</span>: <span style="color:#e6db74">&#34;complicated explanation of how to X&#34;</span>
<span style="color:#f92672">prompt</span>: |+<span style="color:#e6db74">
</span><span style="color:#e6db74">  The human asks the AI to make a simple
</span><span style="color:#e6db74">      description more complicated. The AI
</span><span style="color:#e6db74">      responds by writing a verbose response full
</span><span style="color:#e6db74">      of jargon to explain a simple concept.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  Human: explain how to use a drinking
</span><span style="color:#e6db74">      fountain.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  AI: To activate the mechanized dihydrogen
</span><span style="color:#e6db74">      monoxide dispensary service station, use the
</span><span style="color:#e6db74">      flanges to provide a downward force to the
</span><span style="color:#e6db74">      simple circular activation console and
</span><span style="color:#e6db74">      continue to apply force until the pneumatic
</span><span style="color:#e6db74">      system begins operating as intended, which
</span><span style="color:#e6db74">      can be surmised at a time when the
</span><span style="color:#e6db74">      dihydrogen monoxide travels in a parabolic
</span><span style="color:#e6db74">      arc which at is greatest exceeds three
</span><span style="color:#e6db74">      inches from the rounded excess liquid
</span><span style="color:#e6db74">      receptacle. Once hydration is completed,
</span><span style="color:#e6db74">      cease applying force to the console and
</span><span style="color:#e6db74">      regard whether or not the dispensary has
</span><span style="color:#e6db74">      ceased expelling contents as expected.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  Human: explain how to play with a dog
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  AI: Being a typical domesticated animal,
</span><span style="color:#e6db74">      having been genetically selected for
</span><span style="color:#e6db74">      controllability, trainability, and general
</span><span style="color:#e6db74">      anthropomorphic features and functions, the
</span><span style="color:#e6db74">      typical dog possesses highly specialized and
</span><span style="color:#e6db74">      developed feeding behavior. The typical
</span><span style="color:#e6db74">      feeding behavior involves routine sustenance
</span><span style="color:#e6db74">      intake which can be observed by monitoring
</span><span style="color:#e6db74">      changes in animal size. Routine sustenance
</span><span style="color:#e6db74">      intake involves active and passive feeding
</span><span style="color:#e6db74">      habits, and one can gauge animal health by
</span><span style="color:#e6db74">      observing the relative levels of hydration.
</span><span style="color:#e6db74">      During training, reward conditioned
</span><span style="color:#e6db74">      reinforcement is applied. This involves the
</span><span style="color:#e6db74">      practice of rewarding targeted behaviors
</span><span style="color:#e6db74">      through the application of reinforcers, with
</span><span style="color:#e6db74">      the provision that the targeted behavior is
</span><span style="color:#e6db74">      observed. Relevant to the discussion at hand
</span><span style="color:#e6db74">      is the typical active and passive behavior
</span><span style="color:#e6db74">      exhibited by a typical dog.
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  Human: explain how to &lt;1&gt;
</span><span style="color:#e6db74">
</span><span style="color:#e6db74">  AI:</span>  
<span style="color:#f92672">engine</span>: <span style="color:#e6db74">&#34;davinci&#34;</span>
<span style="color:#f92672">temperature</span>: <span style="color:#ae81ff">0.8</span>
<span style="color:#f92672">max-tokens</span>: <span style="color:#ae81ff">100</span>
<span style="color:#f92672">top-p</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">frequency-penalty</span>: <span style="color:#ae81ff">0.2</span>
<span style="color:#f92672">presence-penalty</span>: <span style="color:#ae81ff">0.4</span>
<span style="color:#f92672">best-of</span>: <span style="color:#ae81ff">1</span>
<span style="color:#f92672">stop-sequences</span>:
  - <span style="color:#e6db74">&#34;\n&#34;</span>
<span style="color:#f92672">inject-start-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">inject-restart-text</span>: <span style="color:#66d9ef">yes</span>
<span style="color:#f92672">show-probabilities</span>: <span style="color:#66d9ef">off</span>
<span style="color:#f92672">vars</span>:
  - <span style="color:#e6db74">&#34;passage&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="code-generation">Code generation</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(defun pen-generate-prompt-functions ()
  <span style="color:#e6db74">&#34;Generate prompt functions for the files in the prompts directory&#34;</span>
  (interactive)
  (let ((paths
         (glob (<span style="color:#a6e22e">concat</span> pen-prompt-directory <span style="color:#e6db74">&#34;/*.prompt&#34;</span>))))
    (cl-loop for path in paths do
             <span style="color:#75715e">;; results in a hash table</span>
             (let* ((yaml (yamlmod-read-file path))
                    (title (ht-get yaml <span style="color:#e6db74">&#34;title&#34;</span>))
                    (title-slug (slugify title))
                    (vars (vector2list (ht-get yaml <span style="color:#e6db74">&#34;vars&#34;</span>)))
                    (var-slugs (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;slugify</span> vars))
                    (var-syms (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;str2sym</span> var-slugs))
                    (func-name (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;pen-&#34;</span> title-slug))
                    (iargs (let ((iteration <span style="color:#ae81ff">0</span>))
                             (cl-loop for v in vars do
                                      (progn
                                        (setq iteration (<span style="color:#a6e22e">+</span> <span style="color:#ae81ff">1</span> iteration))
                                        (<span style="color:#a6e22e">message</span> (str iteration)))
                                      collect
                                      (if (<span style="color:#a6e22e">equal</span> <span style="color:#ae81ff">1</span> iteration)
                                          <span style="color:#75715e">;; The first argument may be captured through selection</span>
                                          <span style="color:#f92672">`</span>(if (selectionp)
                                               (my/selected-text)
                                             (read-string-hist <span style="color:#f92672">,</span>(<span style="color:#a6e22e">concat</span> v <span style="color:#e6db74">&#34;: &#34;</span>)))
                                        <span style="color:#f92672">`</span>(read-string-hist <span style="color:#f92672">,</span>(<span style="color:#a6e22e">concat</span> v <span style="color:#e6db74">&#34;: &#34;</span>)))))))
               <span style="color:#75715e">;; var names will have to be slugged, too</span>
               (<span style="color:#a6e22e">eval</span>
                <span style="color:#f92672">`</span>(defun <span style="color:#f92672">,</span>(str2sym func-name) <span style="color:#f92672">,</span>var-syms
                   (interactive <span style="color:#f92672">,</span>(<span style="color:#a6e22e">cons</span> <span style="color:#e6db74">&#39;list</span> iargs))
                   (etv (chomp (sn <span style="color:#f92672">,</span>(flatten-once
                                     (<span style="color:#a6e22e">list</span>
                                      (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#39;concat</span> <span style="color:#e6db74">&#34;openai-complete &#34;</span> (q path))
                                      (flatten-once (cl-loop for vs in var-slugs collect
                                                             (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#34; &#34;</span>
                                                                   (<span style="color:#a6e22e">list</span> <span style="color:#e6db74">&#39;q</span> (str2sym vs))))))))))))
               (<span style="color:#a6e22e">message</span> (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;pen-mode: Loaded prompt function &#34;</span> func-name))))))</code></pre></td></tr></table>
</div>
</div>
<h3 id="appendix">Appendix</h3>
<p><a href="https://www.google.com/search?q=prompt+engineering+gpt">Prompt Engineering</a></p>
<h3 id="examples">Examples</h3>
<h4 id="create-analogy">Create analogy</h4>
<!--list-separator-->
<ul>
<li>
<p>earth is like the universe</p>
<p>they are both governed by the laws of physics.</p>
</li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>vim is like emacs</p>
<p>both are computer text editors.</p>
</li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>Cars are like trains</p>
<p>both travel on tracks.</p>
</li>
</ul>
<!--list-separator-->
<ul>
<li>
<p>dolphins are like people</p>
<p>They are both members of the class Mammalia.</p>
</li>
</ul>
<h4 id="abstractive-summarization">abstractive summarization</h4>
<!--list-separator-->
<ul>
<li>
<p>computers</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">    Early computers were only conceived as
    calculating devices. Since ancient times,
    simple manual devices like the abacus aided
    people in doing calculations. Early in the
    Industrial Revolution, some mechanical devices
    were built to automate long tedious tasks,
    such as guiding patterns for looms. More
    sophisticated electrical machines did
    specialized analog calculations in the early
    20th century. The first digital electronic
    calculating machines were developed during
    World War II. The first semiconductor
    transistors in the late 1940s were followed by
    the silicon-based MOSFET (MOS transistor) and
    monolithic integrated circuit (IC) chip
    technologies in the late 1950s, leading to the
    microprocessor and the microcomputer
    revolution in the 1970s. The speed, power and
    versatility of computers have been increasing
    dramatically ever since then, with transistor
    counts increasing at a rapid pace (as
    predicted by Moore&#39;s law), leading to the
    Digital Revolution during the late 20th to
    early 21st centuries.
    </code></pre></td></tr></table>
</div>
</div>
 <!--list-separator-->
<ul>
<li>
<p>Simplification 1</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">        Computers were invented to do math. Before
        computers, people used a tool called a slide
        rule to do math. Slide rules were hard to use,
        so people invented a new tool called a
        calculator. Calculators were hard to use, so
        people invented a new tool called a computer.
        Computers were hard to use, so people invented
        a new tool called a computer with a screen.
        Computers with screens were hard to use, so
        people invented a new tool called a computer
        you can touch
        </code></pre></td></tr></table>
</div>
</div>
</li>
</ul>
 <!--list-separator-->
<ul>
<li>
<p>Simplification 2 &ndash; I like this one</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">        Computers were invented to help people do math.
        People have been using simple machines like the abacus to help them do math for a long time.
        More complicated machines helped people do math faster.
        Now people can do math faster with computers.
        </code></pre></td></tr></table>
</div>
</div>
</li>
</ul>
</li>
</ul>
<h3 id="back-end">Back-end</h3>
<h4 id="shell">shell</h4>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">81
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/bin/bash
</span><span style="color:#75715e"></span>export TTY

<span style="color:#f92672">(</span> hs <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>basename <span style="color:#e6db74">&#34;</span>$0<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;#&#34;</span> <span style="color:#e6db74">&#34;&lt;==&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ps -o comm<span style="color:#f92672">=</span> $PPID<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> 0&lt;/dev/null <span style="color:#f92672">)</span> &amp;&gt;/dev/null

first_arg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>

stdin_exists<span style="color:#f92672">()</span> <span style="color:#f92672">{</span>
    ! <span style="color:#f92672">[</span> -t <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span> <span style="color:#f92672">&amp;&amp;</span> ! test <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>readlink /proc/$$/fd/0<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> <span style="color:#f92672">=</span> /dev/null
<span style="color:#f92672">}</span>

<span style="color:#66d9ef">if</span> stdin_exists; <span style="color:#66d9ef">then</span>
    <span style="color:#75715e"># The stdin can be the first argument</span>
    set -- <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">fi</span>

test -f <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit
shift

prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.prompt // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
stop_sequence<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq <span style="color:#e6db74">&#34;.\&#34;stop-sequences\&#34;[0] // empty&#34;</span> | uq | qne<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
temperature<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;temperature\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;engine\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
max_tokens<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;max-tokens\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
top_p<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$first_arg<span style="color:#e6db74">&#34;</span> | yq -r <span style="color:#e6db74">&#34;.\&#34;top-p\&#34; // empty&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

test -n <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> <span style="color:#f92672">||</span> exit <span style="color:#ae81ff">0</span>

<span style="color:#66d9ef">while</span> <span style="color:#f92672">[</span> $# -gt <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">do</span> opt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$1<span style="color:#e6db74">&#34;</span>; <span style="color:#66d9ef">case</span> <span style="color:#e6db74">&#34;</span>$opt<span style="color:#e6db74">&#34;</span> in
    <span style="color:#e6db74">&#34;&#34;</span><span style="color:#f92672">)</span> <span style="color:#f92672">{</span> shift; <span style="color:#f92672">}</span>; ;;
    -e<span style="color:#f92672">)</span> <span style="color:#f92672">{</span>
        engine<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span>$2<span style="color:#e6db74">&#34;</span>
        shift
        shift
    <span style="color:#f92672">}</span>
    ;;

    *<span style="color:#f92672">)</span> break;
<span style="color:#66d9ef">esac</span>; <span style="color:#66d9ef">done</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>engine:=<span style="color:#e6db74">&#34;ada&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>temperature:=<span style="color:#e6db74">&#34;0.6&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>max_tokens:=<span style="color:#e6db74">&#34;64&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

: <span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>sub_completions:=<span style="color:#e6db74">&#34;1&#34;</span><span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>

i<span style="color:#f92672">=</span><span style="color:#ae81ff">1</span>
<span style="color:#66d9ef">for</span> var in <span style="color:#e6db74">&#34;</span>$@<span style="color:#e6db74">&#34;</span>
<span style="color:#66d9ef">do</span>
    var<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span> | uq | chomp<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | template -$i <span style="color:#e6db74">&#34;</span>$var<span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
    <span style="color:#f92672">((</span>i++<span style="color:#f92672">))</span>
<span style="color:#66d9ef">done</span>

prompt_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>printf -- <span style="color:#e6db74">&#34;%s&#34;</span> <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | chomp | tf<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

<span style="color:#75715e"># printf -- &#34;%s\n&#34; &#34;$prompt&#34; | tv</span>

prompt<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>p <span style="color:#e6db74">&#34;</span>$prompt<span style="color:#e6db74">&#34;</span> | qne<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

IFS<span style="color:#f92672">=</span> read -r -d <span style="color:#e6db74">&#39;&#39;</span> SHCODE <span style="color:#e6db74">&lt;&lt;HEREDOC
</span><span style="color:#e6db74">openai api \
</span><span style="color:#e6db74">    completions.create \
</span><span style="color:#e6db74">    -e &#34;$engine&#34; \
</span><span style="color:#e6db74">    -t &#34;$temperature&#34; \
</span><span style="color:#e6db74">    -M &#34;$max_tokens&#34; \
</span><span style="color:#e6db74">    -n &#34;$sub_completions&#34; \
</span><span style="color:#e6db74">    $(
</span><span style="color:#e6db74">        if test -n &#34;$stop_sequence&#34;; then
</span><span style="color:#e6db74">            printf -- &#34;%s&#34; &#34;--stop \&#34;$stop_sequence\&#34;&#34;
</span><span style="color:#e6db74">        fi
</span><span style="color:#e6db74">    ) \
</span><span style="color:#e6db74">    -p &#34;$prompt&#34;
</span><span style="color:#e6db74">HEREDOC</span>

response_fp<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>eval <span style="color:#e6db74">&#34;</span>$SHCODE<span style="color:#e6db74">&#34;</span> | uq | s chomp | tf txt<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

prompt_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$prompt_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
response_bytes<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>cat <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span> | wc -c<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>

tail -c +<span style="color:#66d9ef">$((</span>prompt_bytes <span style="color:#f92672">+</span> <span style="color:#ae81ff">2</span><span style="color:#66d9ef">))</span> <span style="color:#e6db74">&#34;</span>$response_fp<span style="color:#e6db74">&#34;</span></code></pre></td></tr></table>
</div>
</div>
<h3 id="additional-reading">Additional reading</h3>
<ul>
<li><a href="https://www.overfit.ai/classroom-items/gpt-3-text-to-emoji">https://www.overfit.ai/classroom-items/gpt-3-text-to-emoji</a></li>
<li><a href="https://www.gwern.net/GPT-3">https://www.gwern.net/GPT-3</a></li>
<li><a href="https://matthewmcateer.me/blog/messing-with-gpt-3/">https://matthewmcateer.me/blog/messing-with-gpt-3/</a></li>
<li><a href="https://youtu.be/fTvB5xMNfTY">#029 GPT-3, Prompt Engineering, Trading, AI Alignment, Intelligence - YouTube</a></li>
<li><a href="https://github.com/mullikine/examplary">https://github.com/mullikine/examplary</a></li>
<li><a href="https://github.com/mullikine/prompt-engineer-mode">https://github.com/mullikine/prompt-engineer-mode</a></li>
<li><a href="http://github.com/mullikine/fine-tuning-gpt-3/puns/">http://github.com/mullikine/fine-tuning-gpt-3/puns/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>OpenAI API for NLP</title>
            <link>http://semiosis.github.io/posts/openai-api-for-nlp/</link>
            <pubDate>Fri, 12 Jun 2020 00:00:00 +1200</pubDate>
            
            <guid>http://semiosis.github.io/posts/openai-api-for-nlp/</guid>
            <description>OpenAI API https://beta.openai.com/  Summary I&amp;rsquo;d like to add some OpenAI support to emacs. GPT-3 is easy to integrate because it is a very general-purpose transformer. In a later article, I&amp;rsquo;d like to integrate more specialised huggingface transformers.
Results Here are some of the things I had managed to do with emacs and GPT-3 so far.
 Imaginary programming with GPT-3 // Bodacious Blog  Here I assemble an imaginary programming environment in GPT-3.</description>
            <content type="html"><![CDATA[<dl>
<dt>OpenAI API</dt>
<dd><a href="https://beta.openai.com/">https://beta.openai.com/</a></dd>
</dl>
<h2 id="summary">Summary</h2>
<p>I&rsquo;d like to add some OpenAI support to emacs.
GPT-3 is easy to integrate because it is a very general-purpose transformer.
In a later article, I&rsquo;d like to integrate more specialised huggingface transformers.</p>
<h2 id="results">Results</h2>
<p>Here are some of the things I had managed to do with emacs and GPT-3 so far.</p>
<ul>
<li><a href="https://mullikine.github.io/posts/imaginary-programming-with-gpt-3/">Imaginary programming with GPT-3 // Bodacious Blog</a>
<ul>
<li>Here I assemble an imaginary programming environment in GPT-3.</li>
</ul>
</li>
<li><a href="https://mullikine.github.io/posts/translating-with-gpt-3-and-emacs/">Translating with GPT-3 and Emacs // Bodacious Blog</a>
<ul>
<li>I demonstrate using GPT-3 programmatically from emacs to do translation.</li>
</ul>
</li>
<li><a href="https://mullikine.github.io/posts/gpt-3-for-building-mind-maps-with-an-ai-tutor-for-any-topic/">GPT-3 mind maps with an AI tutor for any topic // Bodacious Blog</a>
<ul>
<li>I integrate <code>GPT-3</code> into <code>org-brain</code> to auto-scaffold a mind map and provide a tutor for anything.</li>
</ul>
</li>
<li><a href="https://mullikine.github.io/posts/generating-pickup-lines-with-gpt-3/">Generating pickup lines with GPT-3 // Bodacious Blog</a>
<ul>
<li>I integrate <code>GPT-3</code> into <code>counsel</code> for emacs.</li>
<li>This allows me to fuzzy search with an ever growing candidates list.</li>
</ul>
</li>
<li><a href="https://mullikine.github.io/posts/autocompleting-anything-with-gpt-3-in-emacs/">Autocompleting anything with GPT-3 in emacs // Bodacious Blog</a>
<ul>
<li>I integrate <code>GPT-3</code> into <code>company</code> for emacs. This allows me to autocomplete in emacs.</li>
<li>I also can make arbitrarily many completion engines based on <code>GPT-3</code>.</li>
</ul>
</li>
<li><a href="https://mullikine.github.io/posts/context-menus-based-on-gpt-3/">Context menus based on GPT-3 // Bodacious Blog</a>
<ul>
<li>I integrate <code>GPT-3</code> into <code>right-click-context-menu</code> for emacs.</li>
<li>I can use <code>GPT-3</code> to classify the editing context, allowing me to suggest relevant functions through a contextual menu.</li>
</ul>
</li>
<li><a href="https://mullikine.github.io/posts/an-operating-system-based-on-gpt-3/">An operating system based on GPT-3 // Bodacious Blog</a>
<ul>
<li>I try to demonstrate that an OS may be based on <code>GPT-3</code>.</li>
</ul>
</li>
<li><a href="https://mullikine.github.io/posts/crontab-guru-in-emacs/">crontab.guru in emacs and making a prompt with GPT-3 to copy it // Bodacious Blog</a>
<ul>
<li>I demonstrate that <code>GPT-3</code> can be used with emacs to replace such tools as <code>crontab.guru</code>.</li>
</ul>
</li>
<li><a href="https://mullikine.github.io/posts/creating-a-playground-for-gpt-3-in-emacs/">Creating a playground for GPT-3 in emacs // Bodacious Blog</a>
<ul>
<li>I build a <code>GPT-3</code> prompt-editing environment for emacs.</li>
</ul>
</li>
</ul>
<h2 id="capabilities-of-the-openai-api">Capabilities of the OpenAI API</h2>
<ul>
<li>Apply the API to any language task
<ul>
<li><code>semantic search</code>,</li>
<li><code>summarization</code>,</li>
<li><code>sentiment analysis</code>,</li>
<li><code>content generation</code>,</li>
<li><code>translation</code>,</li>
<li>and more&hellip;</li>
</ul>
</li>
</ul>
<p>Use only a few examples or by specifying your
task in English.</p>
<p>The following is the initial investigation I did into the API.</p>
<h2 id="using-the-api-for-semantic-search">Using the API for Semantic search</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Semantic Search
    [openai-api]

    Allows searching over documents based on
    the natural-language meaning of queries
    rather than keyword matching.</code></pre></td></tr></table>
</div>
</div>
<h3 id="examples">Examples</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">casetext
    [#semantic search]
    [#openai-api]

    Automates litigation tasks to help
    attorneys efficiently provide high-quality
    representation, offering a comprehensive
    legal research platform used by over 5,500
    law firms.

    The platform includes CARA A.I.,
    technology that automates critical legal
    research tasks, and Compose, a first-of-
    its-kind technology that automates
    substantive elements of litigation.

    With OpenAI’s technology, Casetext seeks
    to enhance their semantic search
    capabilities, which has the potential to
    save lawyers hundreds of hours in
    research.

Algolia
    [#semantic search]
    [#openai-api]

    Offers highly relevant, fast search to
    everyone with a website, mobile app, or
    voice app.

    Combining OpenAI’s API with Algolia’s
    advanced search technology allows
    Algolia’s customers to provide their
    customers with NL semantic search, so they
    can better understand questions and
    connect searchers with results that are
    both relevant and fast.

    OpenAI helps Algolia answer more complex
    queries than ever before, trimming down
    the prediction time to around 100ms.

    This keeps Algolia from having to do a lot
    of work to cache and serve answers to its
    customers.

    With OpenAI, Algolia was able to answer
    complex NL questions accurately 4x as
    often as it was using BERT.

Search Plugin
    [#semantic search]
    [#chrome]
    [#openai-api]

    The API identifies relevant content for NL
    queries without using keywords.

    Here the API has been integrated into a
    browser plugin that lets users find
    answers on web page by typing in a
    question.</code></pre></td></tr></table>
</div>
</div>
<h2 id="using-the-api-for-chat">Using the API for Chat</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Chat
    [openai-api]

    Enables fast, complex and consistent NL
    discussions.

    With a brief prompt, the API generates
    dialogues spanning a range of topics, from
    space travel to history.</code></pre></td></tr></table>
</div>
</div>
<h3 id="examples">Examples</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">AI Channels
    [#openai-api]
    [social network]

    For people and artificial intelligence
    agents.

    AI Channels lets you interact with AI
    agents that can help you generate ideas,
    recommend books and movies, tell
    interactive stories or participate in a
    round table discussion with your friends
    and the greatest minds in history where
    you can ask a virtual Albert Einstein to
    explain relativity or get writing tips
    from Jane Austen.</code></pre></td></tr></table>
</div>
</div>
<h2 id="using-the-api-for-customer-service">Using the API for Customer Service</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Customer Service
    [openai-api]

    Leveraging search and chat capabilities,
    the API generates natural dialogue to
    quickly give customers relevant
    information.

    Through semantic text comprehension, the
    API can offer a range of analytics and
    productivity tools to better serve
    customers.</code></pre></td></tr></table>
</div>
</div>
<h3 id="examples">Examples</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">MessageBird
    [#openai-api]
    [#customer service]
    [#nlp]
    [#marketing]

    Provides an omnichannel platform-as-a-
    service to better support customers
    through its Inbox product -- which
    integrates with the top communications
    platforms.

    With OpenAI’s technology, MessageBird is
    developing automated grammar and spelling
    tools as well as predictive text to
    augment Inbox’s already powerful AI
    capabilities.

Sapling Intelligence
    [#openai-api]
    [#customer service]
    [#nlp]
    [#marketing]

    An AI writing assistant for customer-
    facing teams.

    Sapling sits on top of CRMs and messaging
    platforms to help agents more efficiently
    compose personalized responses.

    Managers gain conversational insights to
    coach and prepare teams.

    Sapling was developed by former ML
    researchers at Berkeley, Stanford, and
    Google, and assists customer-facing teams
    serving startups as well as Fortune 500
    clients.

    Sapling works on most B2B helpdesk and
    sales engagement chat platforms through a
    browser integration.

    Using the OpenAI API&#39;s semantic search
    feature, we developed a KB search feature
    that assists agents by suggesting chat
    responses, improving the customer
    experience for sales and support teams.</code></pre></td></tr></table>
</div>
</div>
<h2 id="using-the-api-for-generation">Using the API for Generation</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Generation
    [openai-api]

    The API can generate complex and
    consistent NL, and enables use cases like
    creative writing.</code></pre></td></tr></table>
</div>
</div>
<h3 id="examples">Examples</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">AI Dungeon
    [#openai-api]
    [#nlg]
    [#nlp]

    An AI-powered text adventure where every
    response is determined by an AI LM.

    Typically, for these types of games, the
    developer must preprogram a decision tree
    and text options for the user to select
    from.

    AI Dungeon is the first of its kind in
    which any story option is possible, and
    the AI adapts the adventure to the users’
    input.

    The game sees 20-25,000 daily users.

    Initiallky built on GPT-2, after moving to
    OpenAI’s new technology accessible through
    the API, AI Dungeon has seen a significant
    increase in user engagement and
    subscriptions.

    Users have reported positively on the
    speed and quality of conversations, and
    subscriptions for the game have increased
    nearly 25%.

    AI Dungeon hopes to expand AI’s use in
    gaming to make for richer experiences
    during gameplay (particularly with non-
    playable characters (NPCs)).

AI Weirdness
    [#openai-api]
    [#nlg]
    [#nlp]

    A popular science blog by Janelle Shane,
    author of
        You Look Like a Thing and I Love You:
            How Artificial Intelligence Works
            and Why it&#39;s Making the World a
            Weirder Place.

    She writes about the successes and
    sometimes amusing failures of various ML
    algorithms.

    Using the OpenAI API, she iterated with
    creative ideas for her blog posts and
    tweets.

Replika
    [#openai-api]
    [#nlg]
    [#nlp]

    An AI companion, uses our API to AB test
    extensively and has seen their customers’
    happiness ratings improve by 20 or more
    percentage points.

    They saw ratings hover around 60% with
    their original, in-house tech — this
    improved by 7-8% with GPT-2 — and is now
    in the 80-90% range with the API.</code></pre></td></tr></table>
</div>
</div>
<h2 id="using-the-api-for-productivity-tools">Using the API for Productivity tools</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Productivity Tools
    [openai-api]

    The API allows for parsing text into
    spreadsheet tables, summarizing email
    discussions, expanding content from bullet
    points, and more.</code></pre></td></tr></table>
</div>
</div>
<h3 id="examples">Examples</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">108
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">109
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">110
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">111
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">112
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">113
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">114
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">115
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">116
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">117
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">118
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">119
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">120
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">121
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">122
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">123
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">124
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">125
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">126
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">127
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">128
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">129
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">130
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">131
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">132
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">133
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">134
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">135
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Quizlet
    [#openai-api]
    [#productivity]
    [#nlp]

    Quizlet is a global learning platform that
    provides engaging study tools to help
    people practice and master whatever they
    are learning.

    Every month, over 50 million people across
    130 countries use Quizlet to study any
    subject imaginable for school, work or as
    part of their personal interests.

    Combining cognitive science and ML,
    Quizlet guides students through adaptive
    study activities to confidently reach
    their learning goals, with over a billion
    questions answered each week.

    A popular use of Quizlet is to learn
    vocabulary faster.

    To enable a deeper understanding than rote
    memorization, Quizlet is building upon
    OpenAI’s powerful text generation
    capabilities to automatically generate
    examples of how each vocabulary word can
    be used in a sentence.

    By combining OpenAI’s technology with the
    in-depth work and research Quizlet is
    doing with ML, Quizlet will be able to
    develop example sentences for people
    studying vocabulary and languages, the way
    a tutor does, to help students integrate
    their knowledge in a fun way and test
    themselves more comprehensively.

    Using the latest in NLP technologies
    allows Quizlet to build toward the future
    of an AI-powered tutor in your pocket.

Art of Problem Solving
AoPS
    [#openai-api]
    [#education]
    [#nlp]

    Helping to effectively prepare the next
    generation of STEM professionals through
    engaging online instruction, at a time
    when the traditional nature of in-person
    education is being challenged.

    AoPS is breaking enrollment records across
    all their programs due to an onslaught of
    parents searching for at-home learning
    options for the first time.

    By delivering faster and more accurate
    student feedback, AoPS can help students
    improve their mathematical problem-solving
    skills and their delivery in explaining
    their answers.

    Among the students AoPS have trained are
    nearly all the members of the US
    International Math Olympiad team for the
    past 10 years and a number of the
    researchers / developers at OpenAI.

    By leveraging OpenAI’s technology, AoPS is
    empowering its human teachers as they
    evaluate students’ work and provide
    feedback on the accuracy, language and
    mastery of their solutions.

    AoPS continues to train OpenAI’s API on
    existing feedback from expert teachers,
    and are using it to quickly generate a
    first draft of feedback on a student’s
    work for the grader to refine and then
    send.

    The teacher’s final version is also shared
    back with the API to help improve it even
    further, and the teachers themselves are
    charged with evaluating the tool and
    deciding how widely it gets used.

    AoPS is currently testing the technology
    and seeing promising initial results.

    In the near term, AoPS believes that with
    OpenAI’s technology, students will be able
    to receive same-day feedback on their work
    while improving quality of feedback.

Natural Language Shell
    [#openai-api]
    [#productivity]
    [#nlp]
    [#semanticsearch]
    [#codegen]

    Here we show how the API can be used to
    translate natural language to unix
    commands, using a handful of
    representative examples.

Spreadsheets
    [#openai-api]
    [#data]
    [#nlp]

    In this example, we show how the API
    generates a table with suggested
    categories to make it easier to extract
    and organize information.

Code Completion
    [#openai-api]
    [#productivity]
    [#nlp]
    [#semanticsearch]
    [#codegen]

    With the API we can generate useful and
    context-aware code suggestions. After
    fine-tuning with code from thousands of
    Open Source GitHub repositories, the API
    completes code based on function names and
    comments.</code></pre></td></tr></table>
</div>
</div>
<h2 id="using-the-api-for-content-comprehension">Using the API for Content Comprehension</h2>
<p>The API can be used to build tools to help individuals consume content more efficiently.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Content Comprehension
    [openai-api]

    The API can be used to build tools to help
    individuals consume content more
    efficiently.</code></pre></td></tr></table>
</div>
</div>
<h3 id="examples">Examples</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">89
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Koko
    [#openai-api]
    [#nlp]
    [#nlu]

    An online mental health intervention that
    has reached nearly two million people,
    mostly adolescents.

    The platform started as a clinical trial
    at MIT and is based on the concept of
    crowdsourced cognitive therapy.

    Unlike traditional peer support platforms,
    all interactions on the service are
    supported and augmented by AI.

    Koko is using OpenAI’s technology to
    enhance its AI capabilities and improve
    its ability to keep users safe.

    Using the API, Koko can automatically
    identify users in acute states of crisis
    and route them to specialized services
    (such as the National Suicide Prevention
    Lifeline).

    This builds on Koko’s existing work in
    this area, in collaboration with Harvard
    University, and allows them to scale the
    service more broadly.

    This partnership is especially important
    now, given the staggering rise in reported
    mental health symptoms following the onset
    of Covid-19.

    With OpenAI, Koko’s text-based classifiers
    improved substantially, without
    preprocessing.

    The F1 score of its crisis classifier went
    up from .76 to .86, and the accuracy went
    up to 96%.

    In the future, this capability could help
    peer supporters work faster and more
    efficiently, in addition to many other
    therapeutic use cases.

Ross Intelligence
    [#openai-api]
    [#nlp]
    [#nlu]

    Founded in 2015, ROSS Intelligence
    (&#34;ROSS&#34;) is the industry-leading AI-driven
    legal research provider.

    ROSS&#39;s easy-to-use legal research platform
    leverages proprietary AI technology to
    help lawyers conduct more thorough
    research in a fraction of the time.

    ROSS is funded by tier-one investors,
    including Comcast Ventures and
    Y-Combinator, and was recognized by the
    American Bar Association as &#34;an example of
    how artificial intelligence can be used to
    improve the delivery of legal services.&#34;

    ROSS is using the API to better search
    through legal authority and synthesize law
    so that legal professionals can provide
    sound and timely advice to their clients.

Summarization
    [#openai-api]
    [#nlp]
    [#nlu]

    Through its pattern recognition and
    generative capabilities, the API can
    transform dense text into simplified
    summaries.

    Here, we show the API summarizing an NDA
    into content that&#39;s accessible at a 2nd-
    grade reading level.</code></pre></td></tr></table>
</div>
</div>
<h2 id="using-the-api-for-language-translation">Using the API for language translation</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Polyglot
    [openai-api]

    While the API today works best in English,
    it also works quite well in other
    languages.

    The API can be used for tasks such as
    translation or chat with users in their
    preferred language.</code></pre></td></tr></table>
</div>
</div>
<h2 id="glossary">Glossary</h2>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Neural machine translation
NMT
    One approach to machine translation.

    The use of NN models to
    - learn a statistical model for machine
      translation.

      i.e. predict the likelihood of a
      sequence of words, typically modeling
      entire sentences in a single integrated
      model.

    Key benefit:
        A single system can be trained
        directly on source and target text, no
        longer requiring the pipeline of
        specialized systems used in
        statistical machine learning.

    Unlike the traditional phrase-based
    translation system which consists of many
    small sub-components that are tuned
    separately, neural machine translation
    attempts to build and train a single,
    large neural network that reads a sentence
    and outputs a correct translation.

    Widely used to translate natural langugae
    text.

NMT with code2vec
    Learn from the previous code changes and
    suggest the future edits.

    For modeling code changes, NMT seem to be
    a natural fit as they can learn the
    translation (i.e. edits) from an original
    to the changed version of the code.

    Essentially, these models learn the
    probability distribution of changes and
    assign higher probabilities to plausible
    code edits and lower probabilities to less
    plausible ones.

    In fact, Tufano et al. shows the
    initial promise of using a
    sequence-to-sequence translation model
    (seq2seq) for fixing bugs in their new
    idea paper.

    In this work, we design an
    encoder-decoder-based machin.

Cross-lingual Language Model
XLM

XLM pretraining
    Allows the seq2seq model to generate
    high quality representations of input
    sequences.</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
        <item>
            <title>Setting up LSP with emacs (Go, Java, Python, Rust, C&#43;&#43;, Haskell, JS, TS, Ruby…)</title>
            <link>http://semiosis.github.io/posts/setting-up-lsp-with-emacs-attempt-2/</link>
            <pubDate>Thu, 05 Dec 2019 00:00:00 +1300</pubDate>
            
            <guid>http://semiosis.github.io/posts/setting-up-lsp-with-emacs-attempt-2/</guid>
            <description>Guides used https://www.mortens.dev/blog/emacs-and-the-language-server-protocol/ https://github.com/emacs-lsp/lsp-java   1 2 3 4 5  Debug Adaptor Protocol DAP The LSP of debugging. https://code.visualstudio.com/blogs/2018/08/07/debug-adapter-protocol-website    State of languages with LSP in my own environment  Also, I&amp;rsquo;m using GPT-3 for:  code generation comment generation       Language LSP Working Fallback working Current user experience TabNine enabled REPL / Playground DAP (debug) Working Static analysis Complaints Custom LSP improvements     Go ✓ ✓ Amazing ✓ ✓  ✓ Go toolchain changes too quickly    Python ✓ ✓ Amazing ✓ ✓ ✓ ✓     Racket ✓ ✓ racket-mode Amazing  ✓  ✓     Java ✓ ✓ eclim Good ✓ ✓ (default) ✓ ✓ A little slow.</description>
            <content type="html"><![CDATA[<dl>
<dt>Guides used</dt>
<dd><a href="https://www.mortens.dev/blog/emacs-and-the-language-server-protocol/">https://www.mortens.dev/blog/emacs-and-the-language-server-protocol/</a> <br />
<a href="https://github.com/emacs-lsp/lsp-java">https://github.com/emacs-lsp/lsp-java</a></dd>
</dl>
<!--listend-->
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-text" data-lang="text">Debug Adaptor Protocol
DAP
    The LSP of debugging.

    https://code.visualstudio.com/blogs/2018/08/07/debug-adapter-protocol-website</code></pre></td></tr></table>
</div>
</div>
<hr>
<h2 id="state-of-languages-with-lsp-in-my-own-environment">State of languages with LSP in my own environment</h2>
<ul>
<li>Also, I&rsquo;m using GPT-3 for:
<ul>
<li>code generation</li>
<li>comment generation</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>Language</th>
<th>LSP Working</th>
<th>Fallback working</th>
<th>Current user experience</th>
<th>TabNine enabled</th>
<th>REPL / Playground</th>
<th>DAP (debug) Working</th>
<th>Static analysis</th>
<th>Complaints</th>
<th>Custom LSP improvements</th>
</tr>
</thead>
<tbody>
<tr>
<td>Go</td>
<td>✓</td>
<td>✓</td>
<td>Amazing</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td>✓</td>
<td>Go toolchain changes too quickly</td>
<td></td>
</tr>
<tr>
<td>Python</td>
<td>✓</td>
<td>✓</td>
<td>Amazing</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Racket</td>
<td>✓</td>
<td>✓ racket-mode</td>
<td>Amazing</td>
<td></td>
<td>✓</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Java</td>
<td>✓</td>
<td>✓ eclim</td>
<td>Good</td>
<td>✓</td>
<td>✓ (default)</td>
<td>✓</td>
<td>✓</td>
<td>A little slow. Documentation doesn&rsquo;t fit</td>
<td>Capture documentation from eldoc. Full edit on doc buffer.</td>
</tr>
<tr>
<td>Rust</td>
<td>✓</td>
<td>✓</td>
<td>Good</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>C++</td>
<td>✓</td>
<td>✓ clang</td>
<td>Great</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Haskell</td>
<td>✓</td>
<td>✓ intero</td>
<td>Good</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>PureScript</td>
<td></td>
<td>✓ psc-ide (spago?)</td>
<td>Good</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>JavaScript</td>
<td>✓</td>
<td></td>
<td>Amazing</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>TypeScript</td>
<td>✓</td>
<td></td>
<td>Amazing</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ruby</td>
<td>✓</td>
<td>✓ pry / robe</td>
<td>Good</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>OCaml</td>
<td>✓</td>
<td></td>
<td>Good</td>
<td></td>
<td>✓</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Clojure</td>
<td>✓</td>
<td>✓ cider</td>
<td>Amazing</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Prolog</td>
<td>✓</td>
<td>✓ prolog-mode</td>
<td>Amazing</td>
<td>✓</td>
<td>✓</td>
<td></td>
<td>✓</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h3 id="prolog">Prolog</h3>
<p>Install prolog.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo apt-add-repository ppa:swi-prolog/stable
sudo apt-get update
sudo apt-get install swi-prolog</code></pre></td></tr></table>
</div>
</div>
<p>Install the <code>lsp_server</code> package.</p>
<ul>
<li>Start <code>swipl</code></li>
<li>Wait for the prompt (<code>?-</code>)</li>
<li>Enter <code>pack_install(lsp_server)</code></li>
<li>Press <code>Y</code></li>
<li>Wait for the prompt (<code>?-</code>)</li>
<li>Press <code>C-d</code></li>
</ul>
<p><code>prolog-pack-install</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bnf" data-lang="bnf">pkg=&#34;$1&#34;
test -n &#34;$pkg&#34; || exit 1

x -sh swipl -e &#34;?- &#34; -s &#34;pack_install($pkg).&#34; -c m -e &#34;Y/n&#34; -s Y -e &#34;Create directory&#34; -c m -e &#34;?- &#34; -c d -i</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">prolog-pack-install lsp_server</code></pre></td></tr></table>
</div>
</div>
<p>Command to start the prolog server:</p>
<p><code>prolog-lsp</code></p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">swipl -g use_module<span style="color:#f92672">(</span>library<span style="color:#f92672">(</span>lsp_server<span style="color:#f92672">))</span>. -g lsp_server:main -t halt -- stdio</code></pre></td></tr></table>
</div>
</div>
<h3 id="racket">Racket</h3>
<p>I made the emacs plugin myself!</p>
<p><a href="https://github.com/mullikine/lsp-racket-el">https://github.com/mullikine/lsp-racket-el</a></p>
<p><a title="asciinema recording" href="https://asciinema.org/a/y3PaPaOClZEBcUZA3XScNtXPL" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/y3PaPaOClZEBcUZA3XScNtXPL.svg" /></a></p>
<h3 id="python">Python</h3>
<p>The python editing experience in emacs is second to none.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/0dgW1uTEap2ROGDvEsjlXwi3J" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/0dgW1uTEap2ROGDvEsjlXwi3J.svg" /></a></p>
<h3 id="go">Go</h3>
<p><a title="asciinema recording" href="https://asciinema.org/a/LE7erREtVHLMaI0cCKNOj1h5c" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/LE7erREtVHLMaI0cCKNOj1h5c.svg" /></a></p>
<h3 id="java">Java</h3>
<p><a title="asciinema recording" href="https://asciinema.org/a/i89DxN0P786IvjFpWwLXjodpz" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/i89DxN0P786IvjFpWwLXjodpz.svg" /></a></p>
<h3 id="rust">Rust</h3>
<p>For <code>std:env</code> the eldoc looks identical to lsp
ui doc.</p>
<p>But this is not the case for everything.</p>
<p>Usually the docs are different.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">sp +/<span style="color:#e6db74">&#34;use std::env;&#34;</span> <span style="color:#e6db74">&#34;</span>$MYGIT<span style="color:#e6db74">/mosuka/bayard/src/util/log.rs&#34;</span></code></pre></td></tr></table>
</div>
</div>
<p><a title="asciinema recording" href="https://asciinema.org/a/0jXz47NyBa7TdmVVe9kb9oPIL" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/0jXz47NyBa7TdmVVe9kb9oPIL.svg" /></a></p>
<h3 id="c-plus-plus">C++</h3>
<p>LSP for C++ works quite well.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/ALx6GoyRapW0MrHZbvU9M8z95" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/ALx6GoyRapW0MrHZbvU9M8z95.svg" /></a></p>
<h4 id="i-need-to-figure-out-how-to-get-auto-completion-after">I need to figure out how to get auto-completion after <code>-&gt;</code></h4>
<p>This is not an LSP problem but a problem with <code>company-mode</code>.</p>
<p>It should be possible to accomplish.</p>
<h3 id="haskell">Haskell</h3>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-sh" data-lang="sh">cd <span style="color:#e6db74">&#34;</span>$MYGIT<span style="color:#e6db74">/haskell/haskell-ide-engine&#34;</span>; shx stack ./install.hs hie-8.6.4</code></pre></td></tr></table>
</div>
</div>
<p>Installation complete! LSP for emacs requires
<code>HIE</code> to be installed. The results are quite
nice.</p>
<p><a title="asciinema recording" href="https://asciinema.org/a/StPWXED28BqyYZo2f5plXEmQr" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/StPWXED28BqyYZo2f5plXEmQr.svg" /></a></p>
<h3 id="javascript">JavaScript</h3>
<p><a title="asciinema recording" href="https://asciinema.org/a/Kur7UOJ881rOioWCNRRCzlVY2" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/Kur7UOJ881rOioWCNRRCzlVY2.svg" /></a></p>
<h3 id="typescript">TypeScript</h3>
<p><a title="asciinema recording" href="https://asciinema.org/a/WKUsKTPwUjQvByaytrb3dox4M" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/WKUsKTPwUjQvByaytrb3dox4M.svg" /></a></p>
<h3 id="ruby">Ruby</h3>
<p><a title="asciinema recording" href="https://asciinema.org/a/WkFmVTqUu5gn2T07VT6Qo8w9m" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/WkFmVTqUu5gn2T07VT6Qo8w9m.svg" /></a></p>
<h3 id="c-plus-plus-and-clang"><code>c++</code> and <code>clang</code></h3>
<h4 id="do-not-use-cquery-dot-apparently-clangd-is-better">Do not use <code>cquery</code>. Apparently, <code>clangd</code> is better</h4>
<p><a href="https://github.com/cquery-project/cquery">https://github.com/cquery-project/cquery</a></p>
<h4 id="clangd"><code>clangd</code></h4>
<p><a href="http://releases.llvm.org/download.html">http://releases.llvm.org/download.html</a></p>
<p><span class="underline"><strong>Download and install the pre-built binary</strong></span></p>
<p><span class="underline"><strong>Write some elisp</strong></span></p>
<p>Without <code>-background-index</code>, it will only keep
an in-memory index of the files that are
active in Emacs buffers, but to be able to
find references and symbols in any project
file the background index is recommended. It
is placed at the project root as the “.clangd”
folder.</p>
<dl>
<dt><code>compile_commands.json</code></dt>
<dd>Clangd tries to locate the
“compile_commands.json” file in the root of
the project, so it’s useful to make a symlink in the
project root and to where it’s located in
a build folder.
<p>Most build tools can output
“compile_commands.json”.</p>
<p>In CMake you write:</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-cmake" data-lang="cmake">    set(<span style="color:#e6db74">CMAKE_EXPORT_COMPILE_COMMANDS</span> <span style="color:#e6db74">ON</span>)<span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span>    </code></pre></td></tr></table>
</div>
</div>
</dd>
</dl>
<h2 id="disable-lsp-mode-auto-formatting">Disable <code>lsp-mode</code> auto-formatting</h2>
<p><code>lsp-mode</code> autoformats when the buffer is changed.</p>
<p>It was breaking <code>C++</code>.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(add-hook <span style="color:#e6db74">&#39;lsp--managed-mode-hook</span> (lambda <span style="color:#66d9ef">nil</span> (interactive) (remove-hook <span style="color:#e6db74">&#39;post-self-insert-hook</span> <span style="color:#e6db74">&#39;lsp--on-self-insert</span> <span style="color:#66d9ef">t</span>)))</code></pre></td></tr></table>
</div>
</div>
<h2 id="lsp-ui-uses-return-rather-than-ret-when-setting-bindings"><code>lsp-ui</code> uses <code>&lt;return&gt;</code> rather than <code>RET</code> when setting bindings</h2>
<p>Set <code>RET</code> too. I want all <code>&lt;return&gt;</code> bindings
to be <code>RET</code> bindings everywhere in my
<code>emacs.d</code>.</p>
<p>On the surface level it might appear to work
fine but you might scratch your head when
things go wrong wondering why prefix keys are
not working or bindings are not being
overridden, etc.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(<span style="color:#a6e22e">define-key</span> lsp-ui-imenu-mode-map (kbd <span style="color:#e6db74">&#34;&lt;return&gt;&#34;</span>) <span style="color:#e6db74">&#39;lsp-ui-imenu--view</span>)
(<span style="color:#a6e22e">define-key</span> lsp-ui-imenu-mode-map (kbd <span style="color:#e6db74">&#34;RET&#34;</span>) <span style="color:#e6db74">&#39;lsp-ui-imenu--view</span>)

(<span style="color:#a6e22e">define-key</span> lsp-ui-flycheck-list-mode-map (kbd <span style="color:#e6db74">&#34;&lt;M-RET&gt;&#34;</span>) <span style="color:#e6db74">&#39;lsp-ui-flycheck-list--visit</span>)
(<span style="color:#a6e22e">define-key</span> lsp-ui-flycheck-list-mode-map (kbd <span style="color:#e6db74">&#34;RET&#34;</span>) <span style="color:#e6db74">&#39;lsp-ui-flycheck-list--view</span>)</code></pre></td></tr></table>
</div>
</div>
<h2 id="lsp-peek-would-close-when-i-hit-pgup-or-pgdown"><code>lsp-peek</code> would close when I hit <code>PgUp</code> or <code>PgDown</code></h2>
<p>Set these to make the keys do something useful.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map (kbd <span style="color:#e6db74">&#34;&lt;prior&gt;&#34;</span>) <span style="color:#a6e22e">#&#39;</span>lsp-ui-peek--select-prev-file)
(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map (kbd <span style="color:#e6db74">&#34;&lt;next&gt;&#34;</span>) <span style="color:#a6e22e">#&#39;</span>lsp-ui-peek--select-next-file)</code></pre></td></tr></table>
</div>
</div>
<h2 id="for-sanity-group-all-the-custom-config-together">For sanity, group all the <code>custom</code> config together</h2>
<p>They were being set in different <code>use-package</code> blocks.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(use-package lsp-mode
  :custom
  <span style="color:#75715e">;; ...</span>
  )</code></pre></td></tr></table>
</div>
</div>
<p>Some of these switches toggle various UI
features.</p>
<p>If it&rsquo;s tucked away inside
an automatically generated <code>custom-set- variables</code> somewhere, this could be confusing.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(custom-set-variables
 <span style="color:#75715e">;; debug</span>
 <span style="color:#f92672">&#39;</span>(lsp-print-io <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-trace <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-print-performance <span style="color:#66d9ef">t</span>)

 <span style="color:#75715e">;; general</span>
 <span style="color:#f92672">&#39;</span>(lsp-auto-guess-root <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-document-sync-method <span style="color:#e6db74">&#39;incremental</span>) <span style="color:#75715e">;; none, full, incremental, or nil</span>
 <span style="color:#f92672">&#39;</span>(lsp-response-timeout <span style="color:#ae81ff">10</span>)

 <span style="color:#75715e">;; (lsp-prefer-flymake t)</span>
 <span style="color:#f92672">&#39;</span>(lsp-prefer-flymake <span style="color:#66d9ef">nil</span>) <span style="color:#75715e">;; t(flymake), nil(lsp-ui), or :none</span>
 <span style="color:#75715e">;; flymake is shit. do not use it</span>

 <span style="color:#75715e">;; go-client</span>
 <span style="color:#f92672">&#39;</span>(lsp-clients-go-server-args <span style="color:#f92672">&#39;</span>(<span style="color:#e6db74">&#34;--cache-style=always&#34;</span> <span style="color:#e6db74">&#34;--diagnostics-style=onsave&#34;</span> <span style="color:#e6db74">&#34;--format-style=goimports&#34;</span>))

 <span style="color:#f92672">&#39;</span>(company-lsp-cache-candidates <span style="color:#66d9ef">t</span>) <span style="color:#75715e">;; auto, t(always using a cache), or nil</span>
 <span style="color:#f92672">&#39;</span>(company-lsp-async <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(company-lsp-enable-recompletion <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(company-lsp-enable-snippet <span style="color:#66d9ef">t</span>)

                                        <span style="color:#75715e">;top right docs</span>
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-enable <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-header <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-include-signature <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-max-height <span style="color:#ae81ff">30</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-max-width <span style="color:#ae81ff">120</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-position (quote at-point))
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-use-childframe <span style="color:#66d9ef">t</span>)

 <span style="color:#75715e">;; If this is true then you can&#39;t see the docs in terminal</span>
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-use-webkit <span style="color:#66d9ef">nil</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-flycheck-enable <span style="color:#66d9ef">t</span>)

 <span style="color:#f92672">&#39;</span>(lsp-ui-imenu-enable <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-imenu-kind-position (quote top))
 <span style="color:#f92672">&#39;</span>(lsp-ui-peek-enable <span style="color:#66d9ef">t</span>)

 <span style="color:#f92672">&#39;</span>(lsp-ui-peek-fontify <span style="color:#e6db74">&#39;on-demand</span>) <span style="color:#75715e">;; never, on-demand, or always</span>
 <span style="color:#f92672">&#39;</span>(lsp-ui-peek-list-width <span style="color:#ae81ff">50</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-peek-peek-height <span style="color:#ae81ff">20</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-code-actions-prefix <span style="color:#e6db74">&#34;&#34;</span> <span style="color:#66d9ef">t</span>)

                                        <span style="color:#75715e">;inline right flush docs</span>
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-enable <span style="color:#66d9ef">t</span>)

 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-ignore-duplicate <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-show-code-actions <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-show-diagnostics <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-show-hover <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-show-symbol <span style="color:#66d9ef">t</span>))</code></pre></td></tr></table>
</div>
</div>
<h2 id="handle-dot-el"><code>handle.el</code></h2>
<p>If you want to use <code>handle.el</code> then do something like this.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-=&#34;</span>) <span style="color:#e6db74">&#39;handle-repls</span>)
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-)&#34;</span>) <span style="color:#e6db74">&#39;handle-assignments</span>)
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-*&#34;</span>) <span style="color:#e6db74">&#39;handle-references</span>)
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-^&#34;</span>) <span style="color:#e6db74">&#39;handle-errors</span>)
<span style="color:#75715e">;; This is reserved</span>
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-+&#34;</span>) <span style="color:#66d9ef">nil</span>)
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-_&#34;</span>) <span style="color:#66d9ef">nil</span>)
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-9&#34;</span>) <span style="color:#e6db74">&#39;handle-docs</span>)
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-.&#34;</span>) <span style="color:#e6db74">&#39;handle-godef</span>)

(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-p&#34;</span>) <span style="color:#e6db74">&#39;handle-prevdef</span>)
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-n&#34;</span>) <span style="color:#e6db74">&#39;handle-nextdef</span>)

(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-P&#34;</span>) <span style="color:#e6db74">&#39;handle-preverr</span>)
(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-N&#34;</span>) <span style="color:#e6db74">&#39;handle-nexterr</span>)

(<span style="color:#a6e22e">define-key</span> prog-mode-map (kbd <span style="color:#e6db74">&#34;M-l M-j M-w&#34;</span>) <span style="color:#e6db74">&#39;handle-spellcorrect</span>)</code></pre></td></tr></table>
</div>
</div>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp">(handle <span style="color:#f92672">&#39;</span>(prog-mode)
        :complete <span style="color:#f92672">&#39;</span>(indent-for-tab-command)
        :repls <span style="color:#f92672">&#39;</span>()
        :formatters <span style="color:#f92672">&#39;</span>(lsp-format-buffer)
        :docs <span style="color:#f92672">&#39;</span>(
                <span style="color:#75715e">;; lsp-ui-doc-show</span>
                my/doc-thing-at-point)
        :docsearch <span style="color:#f92672">&#39;</span>(my/doc-ask)
        :godec <span style="color:#f92672">&#39;</span>(lsp-find-declaration)
        :godef <span style="color:#f92672">&#39;</span>(lsp-find-definition
                 xref-find-definitions
                 helm-gtags-dwim)
        :nextdef <span style="color:#f92672">&#39;</span>(my-prog-next-def)
        :prevdef <span style="color:#f92672">&#39;</span>(my-prog-prev-def)
        :nexterr <span style="color:#f92672">&#39;</span>(flycheck-next-error)
        :preverr <span style="color:#f92672">&#39;</span>(flycheck-previous-error)
        <span style="color:#75715e">;; select from multiple</span>
        :errors <span style="color:#f92672">&#39;</span>(lsp-ui-flycheck-list)
        :assignments <span style="color:#f92672">&#39;</span>()
        :references <span style="color:#f92672">&#39;</span>(lsp-ui-peek-find-references)
        :definitions <span style="color:#f92672">&#39;</span>(lsp-ui-peek-find-definitions)
        :implementations <span style="color:#f92672">&#39;</span>(lsp-ui-peek-find-implementation))</code></pre></td></tr></table>
</div>
</div>
<h2 id="common-lisp">Common lisp</h2>
<p>LSP is insufficient to support SLIME-like
levels of interaction.</p>
<h2 id="latest-config--2021">Latest config (<code>2021</code>)</h2>
<p>Pick out what you want.</p>
<div class="highlight"><div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
<table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;"><tr><td style="vertical-align:top;padding:0;margin:0;border:0;">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   1
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   2
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   3
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   4
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   5
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   6
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   7
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   8
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">   9
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  10
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  11
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  12
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  13
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  14
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  15
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  16
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  17
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  18
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  19
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  20
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  21
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  22
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  23
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  24
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  25
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  26
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  27
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  28
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  29
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  30
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  31
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  32
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  33
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  34
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  35
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  36
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  37
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  38
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  39
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  40
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  41
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  42
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  43
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  44
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  45
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  46
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  47
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  48
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  49
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  50
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  51
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  52
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  53
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  54
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  55
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  56
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  57
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  58
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  59
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  60
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  61
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  62
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  63
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  64
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  65
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  66
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  67
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  68
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  69
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  70
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  71
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  72
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  73
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  74
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  75
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  76
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  77
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  78
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  79
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  80
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  81
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  82
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  83
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  84
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  85
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  86
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  87
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  88
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  89
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  90
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  91
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  92
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  93
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  94
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  95
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  96
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  97
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  98
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">  99
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 100
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 101
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 102
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 103
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 104
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 105
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 106
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 107
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 108
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 109
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 110
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 111
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 112
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 113
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 114
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 115
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 116
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 117
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 118
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 119
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 120
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 121
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 122
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 123
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 124
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 125
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 126
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 127
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 128
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 129
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 130
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 131
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 132
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 133
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 134
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 135
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 136
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 137
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 138
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 139
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 140
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 141
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 142
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 143
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 144
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 145
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 146
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 147
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 148
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 149
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 150
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 151
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 152
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 153
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 154
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 155
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 156
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 157
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 158
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 159
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 160
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 161
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 162
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 163
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 164
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 165
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 166
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 167
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 168
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 169
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 170
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 171
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 172
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 173
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 174
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 175
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 176
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 177
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 178
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 179
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 180
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 181
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 182
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 183
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 184
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 185
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 186
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 187
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 188
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 189
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 190
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 191
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 192
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 193
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 194
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 195
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 196
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 197
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 198
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 199
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 200
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 201
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 202
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 203
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 204
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 205
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 206
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 207
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 208
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 209
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 210
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 211
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 212
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 213
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 214
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 215
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 216
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 217
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 218
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 219
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 220
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 221
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 222
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 223
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 224
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 225
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 226
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 227
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 228
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 229
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 230
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 231
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 232
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 233
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 234
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 235
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 236
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 237
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 238
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 239
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 240
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 241
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 242
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 243
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 244
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 245
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 246
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 247
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 248
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 249
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 250
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 251
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 252
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 253
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 254
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 255
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 256
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 257
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 258
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 259
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 260
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 261
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 262
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 263
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 264
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 265
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 266
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 267
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 268
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 269
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 270
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 271
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 272
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 273
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 274
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 275
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 276
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 277
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 278
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 279
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 280
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 281
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 282
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 283
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 284
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 285
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 286
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 287
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 288
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 289
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 290
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 291
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 292
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 293
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 294
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 295
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 296
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 297
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 298
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 299
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 300
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 301
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 302
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 303
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 304
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 305
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 306
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 307
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 308
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 309
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 310
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 311
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 312
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 313
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 314
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 315
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 316
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 317
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 318
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 319
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 320
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 321
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 322
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 323
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 324
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 325
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 326
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 327
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 328
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 329
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 330
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 331
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 332
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 333
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 334
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 335
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 336
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 337
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 338
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 339
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 340
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 341
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 342
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 343
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 344
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 345
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 346
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 347
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 348
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 349
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 350
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 351
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 352
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 353
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 354
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 355
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 356
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 357
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 358
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 359
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 360
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 361
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 362
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 363
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 364
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 365
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 366
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 367
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 368
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 369
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 370
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 371
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 372
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 373
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 374
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 375
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 376
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 377
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 378
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 379
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 380
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 381
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 382
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 383
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 384
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 385
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 386
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 387
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 388
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 389
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 390
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 391
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 392
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 393
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 394
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 395
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 396
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 397
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 398
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 399
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 400
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 401
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 402
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 403
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 404
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 405
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 406
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 407
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 408
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 409
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 410
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 411
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 412
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 413
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 414
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 415
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 416
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 417
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 418
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 419
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 420
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 421
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 422
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 423
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 424
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 425
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 426
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 427
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 428
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 429
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 430
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 431
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 432
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 433
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 434
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 435
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 436
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 437
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 438
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 439
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 440
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 441
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 442
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 443
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 444
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 445
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 446
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 447
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 448
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 449
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 450
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 451
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 452
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 453
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 454
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 455
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 456
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 457
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 458
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 459
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 460
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 461
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 462
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 463
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 464
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 465
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 466
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 467
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 468
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 469
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 470
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 471
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 472
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 473
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 474
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 475
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 476
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 477
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 478
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 479
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 480
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 481
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 482
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 483
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 484
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 485
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 486
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 487
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 488
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 489
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 490
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 491
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 492
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 493
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 494
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 495
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 496
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 497
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 498
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 499
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 500
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 501
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 502
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 503
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 504
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 505
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 506
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 507
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 508
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 509
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 510
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 511
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 512
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 513
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 514
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 515
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 516
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 517
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 518
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 519
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 520
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 521
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 522
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 523
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 524
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 525
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 526
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 527
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 528
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 529
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 530
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 531
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 532
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 533
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 534
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 535
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 536
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 537
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 538
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 539
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 540
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 541
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 542
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 543
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 544
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 545
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 546
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 547
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 548
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 549
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 550
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 551
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 552
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 553
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 554
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 555
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 556
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 557
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 558
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 559
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 560
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 561
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 562
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 563
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 564
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 565
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 566
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 567
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 568
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 569
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 570
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 571
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 572
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 573
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 574
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 575
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 576
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 577
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 578
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 579
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 580
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 581
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 582
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 583
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 584
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 585
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 586
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 587
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 588
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 589
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 590
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 591
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 592
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 593
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 594
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 595
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 596
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 597
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 598
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 599
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 600
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 601
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 602
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 603
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 604
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 605
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 606
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 607
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 608
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 609
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 610
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 611
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 612
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 613
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 614
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 615
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 616
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 617
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 618
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 619
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 620
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 621
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 622
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 623
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 624
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 625
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 626
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 627
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 628
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 629
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 630
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 631
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 632
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 633
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 634
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 635
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 636
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 637
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 638
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 639
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 640
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 641
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 642
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 643
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 644
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 645
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 646
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 647
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 648
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 649
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 650
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 651
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 652
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 653
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 654
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 655
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 656
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 657
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 658
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 659
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 660
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 661
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 662
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 663
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 664
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 665
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 666
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 667
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 668
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 669
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 670
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 671
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 672
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 673
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 674
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 675
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 676
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 677
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 678
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 679
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 680
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 681
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 682
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 683
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 684
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 685
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 686
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 687
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 688
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 689
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 690
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 691
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 692
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 693
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 694
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 695
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 696
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 697
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 698
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 699
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 700
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 701
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 702
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 703
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 704
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 705
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 706
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 707
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 708
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 709
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 710
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 711
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 712
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 713
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 714
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 715
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 716
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 717
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 718
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 719
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 720
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 721
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 722
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 723
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 724
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 725
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 726
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 727
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 728
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 729
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 730
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 731
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 732
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 733
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 734
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 735
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 736
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 737
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 738
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 739
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 740
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 741
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 742
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 743
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 744
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 745
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 746
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 747
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 748
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 749
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 750
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 751
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 752
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 753
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 754
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 755
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 756
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 757
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 758
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 759
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 760
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 761
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 762
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 763
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 764
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 765
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 766
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 767
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 768
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 769
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 770
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 771
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 772
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 773
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 774
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 775
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 776
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 777
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 778
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 779
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 780
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 781
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 782
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 783
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 784
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 785
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 786
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 787
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 788
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 789
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 790
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 791
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 792
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 793
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 794
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 795
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 796
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 797
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 798
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 799
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 800
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 801
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 802
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 803
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 804
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 805
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 806
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 807
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 808
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 809
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 810
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 811
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 812
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 813
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 814
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 815
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 816
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 817
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 818
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 819
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 820
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 821
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 822
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 823
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 824
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 825
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 826
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 827
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 828
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 829
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 830
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 831
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 832
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 833
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 834
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 835
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 836
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 837
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 838
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 839
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 840
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 841
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 842
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 843
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 844
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 845
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 846
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 847
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 848
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 849
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 850
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 851
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 852
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 853
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 854
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 855
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 856
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 857
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 858
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 859
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 860
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 861
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 862
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 863
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 864
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 865
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 866
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 867
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 868
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 869
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 870
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 871
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 872
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 873
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 874
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 875
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 876
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 877
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 878
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 879
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 880
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 881
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 882
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 883
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 884
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 885
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 886
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 887
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 888
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 889
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 890
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 891
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 892
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 893
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 894
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 895
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 896
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 897
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 898
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 899
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 900
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 901
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 902
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 903
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 904
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 905
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 906
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 907
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 908
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 909
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 910
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 911
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 912
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 913
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 914
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 915
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 916
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 917
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 918
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 919
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 920
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 921
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 922
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 923
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 924
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 925
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 926
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 927
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 928
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 929
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 930
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 931
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 932
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 933
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 934
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 935
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 936
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 937
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 938
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 939
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 940
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 941
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 942
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 943
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 944
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 945
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 946
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 947
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 948
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 949
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 950
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 951
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 952
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 953
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 954
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 955
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 956
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 957
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 958
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 959
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 960
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 961
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 962
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 963
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 964
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 965
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 966
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 967
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 968
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 969
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 970
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 971
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 972
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 973
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 974
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 975
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 976
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 977
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 978
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 979
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 980
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 981
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 982
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 983
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 984
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 985
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 986
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 987
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 988
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 989
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 990
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 991
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 992
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 993
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 994
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 995
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 996
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 997
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 998
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 999
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1000
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1001
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1002
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1003
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1004
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1005
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1006
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1007
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1008
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1009
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1010
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1011
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1012
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1013
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1014
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1015
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1016
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1017
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1018
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1019
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1020
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1021
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1022
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1023
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1024
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1025
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1026
</span><span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1027
</span></code></pre></td>
<td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
<pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="color:#75715e">; https://vxlabs.com/2018/06/08/python-language-server-with-emacs-and-lsp-mode/</span>

<span style="color:#75715e">;; ;; This really helps with lsp-mode</span>
<span style="color:#75715e">;; ;; But I have enabled it only for certain modes</span>
<span style="color:#75715e">;; (electric-pair-mode 1)</span>

<span style="color:#75715e">;; gopls is the official go language server</span>

<span style="color:#75715e">;; (defvar my-disable-lsp nil)</span>

(custom-set-variables
 <span style="color:#75715e">;; debug</span>
 <span style="color:#f92672">&#39;</span>(lsp-print-io <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-trace <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-print-performance <span style="color:#66d9ef">t</span>)

 <span style="color:#75715e">;; general</span>
 <span style="color:#f92672">&#39;</span>(lsp-auto-guess-root <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-document-sync-method <span style="color:#e6db74">&#39;incremental</span>) <span style="color:#75715e">;; none, full, incremental, or nil</span>
 <span style="color:#f92672">&#39;</span>(lsp-response-timeout <span style="color:#ae81ff">10</span>)

 <span style="color:#75715e">;; (lsp-prefer-flymake t)</span>
 <span style="color:#f92672">&#39;</span>(lsp-prefer-flymake <span style="color:#66d9ef">nil</span>) <span style="color:#75715e">;; t(flymake), nil(lsp-ui), or :none</span>
 <span style="color:#75715e">;; flymake is shit. do not use it</span>

 <span style="color:#75715e">;; go-client</span>
 <span style="color:#75715e">;; &#39;(lsp-clients-go-server-args &#39;(&#34;--cache-style=always&#34; &#34;--diagnostics-style=onsave&#34; &#34;--format-style=goimports&#34;))</span>

 <span style="color:#f92672">&#39;</span>(company-lsp-cache-candidates <span style="color:#66d9ef">t</span>) <span style="color:#75715e">;; auto, t(always using a cache), or nil</span>
 <span style="color:#f92672">&#39;</span>(company-lsp-async <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(company-lsp-enable-recompletion <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(company-lsp-enable-snippet <span style="color:#66d9ef">t</span>)
 <span style="color:#75715e">;; &#39;(lsp-clients-go-server-args &#39;(&#34;--cache-style=always&#34; &#34;--diagnostics-style=onsave&#34; &#34;--format-style=goimports&#34;))</span>
 <span style="color:#f92672">&#39;</span>(lsp-document-sync-method (quote incremental))

                                        <span style="color:#75715e">;top right docs</span>
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-enable <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-header <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-include-signature <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-max-height <span style="color:#ae81ff">30</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-max-width <span style="color:#ae81ff">120</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-position (quote at-point))
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-use-childframe <span style="color:#66d9ef">t</span>)

 <span style="color:#75715e">;; If this is true then you can&#39;t see the docs in terminal</span>
 <span style="color:#f92672">&#39;</span>(lsp-ui-doc-use-webkit <span style="color:#66d9ef">nil</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-flycheck-enable <span style="color:#66d9ef">t</span>)

 <span style="color:#f92672">&#39;</span>(lsp-ui-imenu-enable <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-imenu-kind-position (quote top))
 <span style="color:#f92672">&#39;</span>(lsp-ui-peek-enable <span style="color:#66d9ef">t</span>)

 <span style="color:#f92672">&#39;</span>(lsp-ui-peek-fontify <span style="color:#e6db74">&#39;on-demand</span>) <span style="color:#75715e">;; never, on-demand, or always</span>
 <span style="color:#f92672">&#39;</span>(lsp-ui-peek-list-width <span style="color:#ae81ff">50</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-peek-peek-height <span style="color:#ae81ff">20</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-code-actions-prefix <span style="color:#e6db74">&#34;&#34;</span> <span style="color:#66d9ef">t</span>)

                                        <span style="color:#75715e">;inline right flush docs</span>
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-enable <span style="color:#66d9ef">t</span>)

 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-ignore-duplicate <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-show-code-actions <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-show-diagnostics <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-show-hover <span style="color:#66d9ef">t</span>)
 <span style="color:#f92672">&#39;</span>(lsp-ui-sideline-show-symbol <span style="color:#66d9ef">t</span>))



(require <span style="color:#e6db74">&#39;lsp-mode</span>)
(require <span style="color:#e6db74">&#39;my-lsp-clients</span>)



(require <span style="color:#e6db74">&#39;el-patch</span>)
(el-patch-feature lsp-mode)
(el-patch-defun lsp (<span style="color:#66d9ef">&amp;optional</span> arg)
  <span style="color:#e6db74">&#34;Entry point for the server startup.
</span><span style="color:#e6db74">When ARG is t the lsp mode will start new language server even if
</span><span style="color:#e6db74">there is language server which can handle current language. When
</span><span style="color:#e6db74">ARG is nil current file will be opened in multi folder language
</span><span style="color:#e6db74">server if there is such. When </span><span style="color:#e6db74">`lsp&#39;</span><span style="color:#e6db74"> is called with prefix
</span><span style="color:#e6db74">argument ask the user to select which language server to start.&#34;</span>
  (interactive <span style="color:#e6db74">&#34;P&#34;</span>)

  (lsp--require-packages)

  (when (<span style="color:#a6e22e">buffer-file-name</span>)
    (let (clients
          (matching-clients (lsp--filter-clients
                             (-andfn <span style="color:#a6e22e">#&#39;</span>lsp--matching-clients?
                                     <span style="color:#a6e22e">#&#39;</span>lsp--server-binary-present?))))
      (cond
       (matching-clients
        (when (setq lsp--buffer-workspaces
                    (or (and
                         <span style="color:#75715e">;; Don&#39;t open as library file if file is part of a project.</span>
                         (not (lsp-find-session-folder (lsp-session) (<span style="color:#a6e22e">buffer-file-name</span>)))
                         (lsp--try-open-in-library-workspace))
                        (lsp--try-project-root-workspaces (<span style="color:#a6e22e">equal</span> arg <span style="color:#f92672">&#39;</span>(<span style="color:#ae81ff">4</span>))
                                                          (and arg (not (<span style="color:#a6e22e">equal</span> arg <span style="color:#ae81ff">1</span>))))))
          (lsp-mode <span style="color:#ae81ff">1</span>)
          (when lsp-auto-configure (lsp--auto-configure))
          (setq lsp-buffer-uri (lsp--buffer-uri))
          (lsp--info <span style="color:#e6db74">&#34;Connected to %s.&#34;</span>
                     (<span style="color:#a6e22e">apply</span> <span style="color:#e6db74">&#39;concat</span> (--map (<span style="color:#a6e22e">format</span> <span style="color:#e6db74">&#34;[%s]&#34;</span> (lsp--workspace-print it))
                                           lsp--buffer-workspaces)))))
       <span style="color:#75715e">;; look for servers which are currently being downloaded.</span>
       ((setq clients (lsp--filter-clients (-andfn <span style="color:#a6e22e">#&#39;</span>lsp--matching-clients?
                                                   <span style="color:#a6e22e">#&#39;</span>lsp--client-download-in-progress?)))
        (lsp--info <span style="color:#e6db74">&#34;There are language server(%s) installation in progress.
</span><span style="color:#e6db74">The server(s) will be started in the buffer when it has finished.&#34;</span>
                   (-map <span style="color:#a6e22e">#&#39;</span>lsp--client-server-id clients))
        (seq-do (lambda (client)
                  (cl-pushnew (<span style="color:#a6e22e">current-buffer</span>) (lsp--client-buffers client)))
                clients))
       <span style="color:#75715e">;; look for servers to install</span>
       ((setq clients (lsp--filter-clients (-andfn <span style="color:#a6e22e">#&#39;</span>lsp--matching-clients?
                                                   <span style="color:#a6e22e">#&#39;</span>lsp--client-download-server-fn
                                                   (-not <span style="color:#a6e22e">#&#39;</span>lsp--client-download-in-progress?))))
        (let ((client (lsp--completing-read
                       (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;Unable to find installed server supporting this file. &#34;</span>
                               <span style="color:#e6db74">&#34;The following servers could be installed automatically: &#34;</span>)
                       clients
                       (-compose <span style="color:#a6e22e">#&#39;symbol-name</span> <span style="color:#a6e22e">#&#39;</span>lsp--client-server-id)
                       <span style="color:#66d9ef">nil</span>
                       <span style="color:#66d9ef">t</span>)))
          (cl-pushnew (<span style="color:#a6e22e">current-buffer</span>) (lsp--client-buffers client))
          (lsp--install-server-internal client)))
       <span style="color:#75715e">;; no clients present</span>
       ((setq clients (unless matching-clients
                        (lsp--filter-clients (-andfn <span style="color:#a6e22e">#&#39;</span>lsp--matching-clients?
                                                     (-not <span style="color:#a6e22e">#&#39;</span>lsp--server-binary-present?)))))
        (lsp--warn <span style="color:#e6db74">&#34;The following servers support current file but do not have automatic installation configuration: %s
</span><span style="color:#e6db74">You may find the installation instructions at https://emacs-lsp.github.io/lsp-mode/page/languages.
</span><span style="color:#e6db74">(If you have already installed the server check *lsp-log*).&#34;</span>
                   (<span style="color:#a6e22e">mapconcat</span> (lambda (client)
                                (<span style="color:#a6e22e">symbol-name</span> (lsp--client-server-id client)))
                              clients
                              <span style="color:#e6db74">&#34; &#34;</span>)))
       <span style="color:#75715e">;; no matches</span>
       ((-&gt; <span style="color:#a6e22e">#&#39;</span>lsp--matching-clients? lsp--filter-clients not)
        (lsp--error
         (el-patch-swap
           <span style="color:#e6db74">&#34;There are no language servers supporting current mode </span><span style="color:#e6db74">`%s&#39;</span><span style="color:#e6db74"> registered with </span><span style="color:#e6db74">`lsp-mode&#39;</span><span style="color:#e6db74">.
</span><span style="color:#e6db74">This issue might be caused by:
</span><span style="color:#e6db74">1. The language you are trying to use does not have built-in support in </span><span style="color:#e6db74">`lsp-mode&#39;</span><span style="color:#e6db74">. You must install the required support manually. Examples of this are </span><span style="color:#e6db74">`lsp-java&#39;</span><span style="color:#e6db74"> or </span><span style="color:#e6db74">`lsp-metals&#39;</span><span style="color:#e6db74">.
</span><span style="color:#e6db74">2. The language server that you expect to run is not configured to run for major mode </span><span style="color:#e6db74">`%s&#39;</span><span style="color:#e6db74">. You may check that by checking the `:major-modes&#39; that are passed to </span><span style="color:#e6db74">`lsp-register-client&#39;</span><span style="color:#e6db74">.
</span><span style="color:#e6db74">3. </span><span style="color:#e6db74">`lsp-mode&#39;</span><span style="color:#e6db74"> doesn&#39;t have any integration for the language behind </span><span style="color:#e6db74">`%s&#39;</span><span style="color:#e6db74">. Refer to https://emacs-lsp.github.io/lsp-mode/page/languages and https://langserver.org/ .&#34;</span>
           <span style="color:#e6db74">&#34;No LSP server for current mode&#34;</span>)
         major-mode major-mode major-mode))))))



(defun maybe-lsp ()
  (interactive)
  (cond
   ((and org-src-mode (major-mode-p <span style="color:#e6db74">&#39;haskell-mode</span>))
    (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Disabled lsp because i want haskell babel blocks to be fast&#34;</span>))
   <span style="color:#75715e">;; ((and org-src-mode (major-mode-p &#39;c-mode))</span>
   <span style="color:#75715e">;;  (message &#34;Disabled lsp because I need to set up ccls again&#34;))</span>
   ((<span style="color:#a6e22e">string-match</span> <span style="color:#e6db74">&#34;/emacs-mirror/.*\\.c$&#34;</span> (or (get-path-nocreate) <span style="color:#e6db74">&#34;&#34;</span>))
    (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;Disabled lsp because i haven&#39;t got it going for emacs source C code yet&#34;</span>))
   (<span style="color:#66d9ef">t</span> (<span style="color:#a6e22e">call-interactively</span> <span style="color:#e6db74">&#39;lsp</span>))))

(use-package lsp-mode
  :ensure <span style="color:#66d9ef">t</span>
  :commands lsp-register-client
  :init (setq lsp-gopls-server-args <span style="color:#f92672">&#39;</span>(<span style="color:#e6db74">&#34;--debug=localhost:6060&#34;</span>))
  :config
  (setq lsp-prefer-flymake :none)
  (lsp-register-custom-settings
   <span style="color:#f92672">&#39;</span>((<span style="color:#e6db74">&#34;gopls.completeUnimported&#34;</span> <span style="color:#66d9ef">t</span> <span style="color:#66d9ef">t</span>))))

                                        <span style="color:#75715e">;(use-package lsp-mode</span>
                                        <span style="color:#75715e">; has to not fail when emacs 24</span>
(my/with <span style="color:#e6db74">&#39;lsp-mode</span>
         <span style="color:#75715e">;; Definitely do not want this -- it&#39;s very outdated</span>
         <span style="color:#75715e">;; I blacklisted it</span>
         <span style="color:#75715e">;; /home/shane/var/smulliga/source/git/config/emacs/config/my-package-blacklist.el</span>
         <span style="color:#75715e">;; lsp-mode now provides lsp-go so I can&#39;t blacklist it like this</span>
         <span style="color:#75715e">;; anymore.</span>
         <span style="color:#75715e">;; (require &#39;lsp-go)</span>

         (setq lsp-gopls-staticcheck <span style="color:#66d9ef">t</span>)
         (setq lsp-eldoc-render-all <span style="color:#66d9ef">t</span>)
         (setq lsp-gopls-complete-unimported <span style="color:#66d9ef">t</span>)

         <span style="color:#75715e">;; (setq lsp-gopls-staticcheck t)</span>

         <span style="color:#75715e">;; Make this nil so I don&#39;t get duplication on the ui-doc</span>
         <span style="color:#75715e">;; This was a problem especially in python</span>
         <span style="color:#75715e">;; (setq lsp-eldoc-render-all nil)</span>

         <span style="color:#75715e">;; (setq lsp-gopls-complete-unimported t)</span>

         (use-package lsp-ui
           :ensure <span style="color:#66d9ef">t</span>
           <span style="color:#75715e">;; :demand t</span>
           :config
           (setq lsp-ui-sideline-ignore-duplicate <span style="color:#66d9ef">t</span>)
           (add-hook <span style="color:#e6db74">&#39;lsp-mode-hook</span> <span style="color:#e6db74">&#39;lsp-ui-mode</span>)
           (require <span style="color:#e6db74">&#39;lsp-ui-imenu</span>))

         (add-hook <span style="color:#e6db74">&#39;lsp-after-open-hook</span> <span style="color:#e6db74">&#39;lsp-enable-imenu</span>)
         <span style="color:#75715e">;; get lsp-python-enable defined</span>
         <span style="color:#75715e">;; NB: use either projectile-project-root or ffip-get-project-root-directory</span>
         <span style="color:#75715e">;;     or any other function that can be used to find the root directory of a project</span>

         <span style="color:#75715e">;; deprecated</span>
         <span style="color:#75715e">;; (lsp-define-stdio-client lsp-python &#34;python&#34;</span>
         <span style="color:#75715e">;;                          #&#39;projectile-project-root</span>
         <span style="color:#75715e">;;                          &#39;(&#34;pyls&#34;))</span>
         <span style="color:#75715e">;; this is the new way. but it&#39;s automatic now</span>
         <span style="color:#75715e">;;(lsp-register-client</span>
         <span style="color:#75715e">;; (make-lsp-client :new-connection (lsp-stdio-connection &#34;pyls&#34;)</span>
         <span style="color:#75715e">;;                  :major-modes &#39;(python-mode)</span>
         <span style="color:#75715e">;;                  :server-id &#39;pyls))</span>

         <span style="color:#75715e">;; make sure this is activated when python-mode is activated</span>
         <span style="color:#75715e">;; lsp-python-enable is created by macro above</span>

         <span style="color:#75715e">;; ;; Is it built-in now?</span>
         <span style="color:#75715e">;; (add-hook &#39;python-mode-hook</span>
         <span style="color:#75715e">;;           (lambda ()</span>
         <span style="color:#75715e">;;             (lsp-python-enable)))</span>

         (use-package lsp-mode
           :ensure <span style="color:#66d9ef">t</span>
           :commands (lsp lsp-deferred)
           :hook (go-mode <span style="color:#f92672">.</span> lsp-deferred))


         (remove-hook <span style="color:#e6db74">&#39;before-save-hook</span> <span style="color:#e6db74">&#39;gofmt-before-save</span>)
         (defun lsp-go-install-save-hooks ()
           (add-hook <span style="color:#e6db74">&#39;before-save-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp-format-buffer <span style="color:#66d9ef">t</span> <span style="color:#66d9ef">t</span>)
           (add-hook <span style="color:#e6db74">&#39;before-save-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp-organize-imports <span style="color:#66d9ef">t</span> <span style="color:#66d9ef">t</span>))
         (add-hook <span style="color:#e6db74">&#39;go-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp-go-install-save-hooks)

         (require <span style="color:#e6db74">&#39;lsp-haskell</span>)


                                        <span style="color:#75715e">; (setq lsp-haskell-process-path-hie &#34;hie-wrapper&#34;)</span>

         (use-package lsp-haskell
           :ensure <span style="color:#66d9ef">t</span>
           :config
           (setq lsp-haskell-process-path-hie <span style="color:#e6db74">&#34;haskell-language-server-wrapper&#34;</span>)
           <span style="color:#75715e">;; Comment/uncomment this line to see interactions between lsp client/server.</span>
           <span style="color:#75715e">;;(setq lsp-log-io t)</span>
           )


         (progn
           (require <span style="color:#e6db74">&#39;julia-mode</span>)
           <span style="color:#75715e">;; (push &#34;/path/to/lsp-julia&#34; load-path)</span>
           (require <span style="color:#e6db74">&#39;lsp-julia</span>)
           (require <span style="color:#e6db74">&#39;lsp-mode</span>)
           <span style="color:#75715e">;; Configure lsp + julia</span>
           (add-hook <span style="color:#e6db74">&#39;julia-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp-mode)
           (add-hook <span style="color:#e6db74">&#39;julia-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp))



         (require <span style="color:#e6db74">&#39;lsp-racket</span>)
         <span style="color:#75715e">;; (add-hook &#39;racket-mode-hook #&#39;lsp-racket-enable)</span>


         (use-package lsp-mode
           <span style="color:#75715e">;; :demand t</span>
           :config
           (add-hook <span style="color:#e6db74">&#39;c++-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           <span style="color:#75715e">;; I can&#39;t keep it on because when projects dont work, its super annoying</span>
           <span style="color:#75715e">;; (remove-hook &#39;c++-mode-hook #&#39;lsp)</span>

           <span style="color:#75715e">;; ccls is uninstallable on ubuntu16</span>
           <span style="color:#75715e">;; https://repology.org/project/ccls/versions</span>
           <span style="color:#75715e">;; I have tried. I need ubuntu20</span>
           <span style="color:#75715e">;; (remove-hook &#39;c-mode-hook #&#39;lsp)</span>
           <span style="color:#75715e">;; I did it</span>
           <span style="color:#75715e">;; (add-hook &#39;c-mode-hook #&#39;lsp)</span>
           (add-hook <span style="color:#e6db74">&#39;c-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>maybe-lsp)
           (add-hook <span style="color:#e6db74">&#39;python-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           <span style="color:#75715e">;; Just install this manually and then it will work</span>
           <span style="color:#75715e">;; https://github.com/richterger/Perl-LanguageServer</span>
           (add-hook <span style="color:#e6db74">&#39;perl-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;dockerfile-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;java-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;kotlin-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;yaml-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;sql-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;php-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;clojure-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           <span style="color:#75715e">;; (remove-hook &#39;clojure-mode-hook #&#39;lsp)</span>
           (add-hook <span style="color:#e6db74">&#39;julia-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;ess-julia-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;go-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;cmake-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;ruby-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;gitlab-ci-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)

           <span style="color:#75715e">;; this seems to be broken</span>
           <span style="color:#75715e">;; (add-hook &#39;dockerfile-mode-hook #&#39;lsp)</span>

           (add-hook <span style="color:#e6db74">&#39;sh-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;rust-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;vimrc-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;racket-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           <span style="color:#75715e">;; (remove-hook &#39;racket-mode-hook #&#39;lsp)</span>
           (add-hook <span style="color:#e6db74">&#39;rustic-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;nix-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
<span style="color:#75715e">;;;  prolog-pack-install lsp_server</span>
           <span style="color:#75715e">;; build-swi-ls</span>
           (add-hook <span style="color:#e6db74">&#39;prolog-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;js-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           (add-hook <span style="color:#e6db74">&#39;typescript-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           <span style="color:#75715e">;; (add-hook &#39;haskell-mode-hook #&#39;lsp)</span>
           (add-hook <span style="color:#e6db74">&#39;haskell-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>maybe-lsp)
           <span style="color:#75715e">;; (remove-hook &#39;haskell-mode-hook #&#39;lsp)</span>
           (add-hook <span style="color:#e6db74">&#39;purescript-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp)
           <span style="color:#75715e">;; (remove-hook &#39;haskell-mode-hook #&#39;lsp)</span>
           )

         <span style="color:#75715e">;; (use-package lsp-mode</span>
         <span style="color:#75715e">;;   :ensure t</span>
         <span style="color:#75715e">;;   :hook ((clojure-mode . lsp)</span>
         <span style="color:#75715e">;;          (clojurec-mode . lsp)</span>
         <span style="color:#75715e">;;          (clojurescript-mode . lsp))</span>
         <span style="color:#75715e">;;   :config</span>
         <span style="color:#75715e">;;   ;; add paths to your local installation of project mgmt tools, like lein</span>
         <span style="color:#75715e">;;   (setenv &#34;PATH&#34; (concat</span>
         <span style="color:#75715e">;;                   &#34;/usr/local/bin&#34; path-separator</span>
         <span style="color:#75715e">;;                   (getenv &#34;PATH&#34;)))</span>
         <span style="color:#75715e">;;   (dolist (m &#39;(clojure-mode</span>
         <span style="color:#75715e">;;                clojurec-mode</span>
         <span style="color:#75715e">;;                clojurescript-mode</span>
         <span style="color:#75715e">;;                clojurex-mode))</span>
         <span style="color:#75715e">;;     (add-to-list &#39;lsp-language-id-configuration `(,m . &#34;clojure&#34;)))</span>
         <span style="color:#75715e">;;   (setq lsp-enable-indentation nil</span>
         <span style="color:#75715e">;;         lsp-clojure-server-command &#39;(&#34;bash&#34; &#34;-c&#34; &#34;clojure-lsp&#34;)))</span>


         <span style="color:#75715e">;; These modes are &#34;clojure&#34;</span>
         (dolist (m <span style="color:#f92672">&#39;</span>(clojure-mode
                      clojurec-mode
                      clojurescript-mode
                      clojurex-mode))
           (add-to-list <span style="color:#e6db74">&#39;lsp-language-id-configuration</span> <span style="color:#f92672">`</span>(<span style="color:#f92672">,</span>m <span style="color:#f92672">.</span> <span style="color:#e6db74">&#34;clojure&#34;</span>)))

         (require <span style="color:#e6db74">&#39;lsp-clojure</span>)
         (setq lsp-enable-indentation <span style="color:#66d9ef">nil</span>
               lsp-clojure-server-command <span style="color:#f92672">&#39;</span>(<span style="color:#e6db74">&#34;bash&#34;</span> <span style="color:#e6db74">&#34;-c&#34;</span> <span style="color:#e6db74">&#34;clojure-lsp&#34;</span>))

         (require <span style="color:#e6db74">&#39;ccls</span>)
         <span style="color:#75715e">;; (setq ccls-executable &#34;/usr/local/bin/ccls&#34;)</span>
         (setq ccls-executable <span style="color:#e6db74">&#34;/home/shane/scripts/ccls&#34;</span>)



         <span style="color:#75715e">;; This might be outdated now</span>
         <span style="color:#75715e">;; (use-package company-lsp</span>
         <span style="color:#75715e">;;   :config</span>
         <span style="color:#75715e">;;   (push &#39;company-lsp company-backends))</span>


         (use-package lsp-ui-peek
           :config)

         <span style="color:#75715e">;; NB: only required if you prefer flake8 instead of the default</span>
         <span style="color:#75715e">;; send pyls config via lsp-after-initialize-hook -- harmless for</span>
         <span style="color:#75715e">;; other servers due to pyls key, but would prefer only sending this</span>
         <span style="color:#75715e">;; when pyls gets initialised (:initialize function in</span>
         <span style="color:#75715e">;; lsp-define-stdio-client is invoked too early (before server</span>
         <span style="color:#75715e">;; start)) -- cpbotha</span>
         (defun lsp-set-cfg ()
           (let ((lsp-cfg <span style="color:#f92672">`</span>(:pyls (:configurationSources (<span style="color:#e6db74">&#34;flake8&#34;</span>)))))
             <span style="color:#75715e">;; TODO: check lsp--cur-workspace here to decide per server / project</span>
             (lsp--set-configuration lsp-cfg)))

         <span style="color:#75715e">;; (add-hook &#39;lsp-after-initialize-hook &#39;lsp-set-cfg)</span>
         <span style="color:#75715e">;; (remove-hook &#39;lsp-after-initialize-hook &#39;lsp-set-cfg)</span>


         <span style="color:#75715e">;; https://www.mortens.dev/blog/emacs-and-the-language-server-protocol/</span>
         (use-package lsp-mode
           :config
           <span style="color:#75715e">;; `-background-index&#39; requires clangd v8+!</span>
           (setq lsp-clients-clangd-args <span style="color:#f92672">&#39;</span>(<span style="color:#e6db74">&#34;-j=4&#34;</span> <span style="color:#e6db74">&#34;-background-index&#34;</span> <span style="color:#e6db74">&#34;-log=error&#34;</span>))

           <span style="color:#75715e">;; ..</span>
           )

         <span style="color:#75715e">;; (defun lsp-ui-doc--callback (hover bounds buffer)</span>
         <span style="color:#75715e">;;            &#34;Process the received documentation.</span>
         <span style="color:#75715e">;; HOVER is the doc returned by the LS.</span>
         <span style="color:#75715e">;; BOUNDS are points of the symbol that have been requested.</span>
         <span style="color:#75715e">;; BUFFER is the buffer where the request has been made.&#34;)</span>
         )

<span style="color:#75715e">;; rust</span>
<span style="color:#75715e">;; This solved all rust lsp problems</span>
(progn

  (require <span style="color:#e6db74">&#39;lsp-mode</span>) <span style="color:#75715e">;; language server protocol</span>
  (with-eval-after-load <span style="color:#e6db74">&#39;lsp-mode</span>
    (add-hook <span style="color:#e6db74">&#39;rust-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>lsp))
  <span style="color:#75715e">;; (add-hook &#39;rust-mode-hook #&#39;flycheck-mode))</span>

  <span style="color:#75715e">;; excessive UI feedback for light reading between coding</span>
  (require <span style="color:#e6db74">&#39;lsp-ui</span>)
  (with-eval-after-load <span style="color:#e6db74">&#39;lsp-ui</span>
    (add-hook <span style="color:#e6db74">&#39;lsp-mode-hook</span> <span style="color:#e6db74">&#39;lsp-ui-mode</span>))

  <span style="color:#75715e">;; autocompletions for lsp (available with melpa enabled)</span>
  <span style="color:#75715e">;; (require &#39;company-lsp)</span>
  <span style="color:#75715e">;; (push &#39;company-lsp company-backends)</span>

  <span style="color:#75715e">;; tell company to complete on tabs instead of sitting there like a moron</span>
  (require <span style="color:#e6db74">&#39;rust-mode</span>)
  (<span style="color:#a6e22e">define-key</span> rust-mode-map (kbd <span style="color:#e6db74">&#34;TAB&#34;</span>) <span style="color:#a6e22e">#&#39;</span>company-indent-or-complete-common))

  (use-package lsp-mode
    :hook
    ((go-mode c-mode c++-mode) <span style="color:#f92672">.</span> lsp)
    :bind
    (:map lsp-mode-map
          (<span style="color:#e6db74">&#34;C-c r&#34;</span> <span style="color:#f92672">.</span> lsp-rename))
    :config

    <span style="color:#75715e">;; (require &#39;lsp-clients)</span>

    <span style="color:#75715e">;; LSP UI tools</span>
    (use-package lsp-ui
      :preface
      (defun ladicle/toggle-lsp-ui-doc ()
        (interactive)
        (if lsp-ui-doc-mode
            (progn
              (lsp-ui-doc-mode <span style="color:#ae81ff">-1</span>)
              (lsp-ui-doc--hide-frame))
          (lsp-ui-doc-mode <span style="color:#ae81ff">1</span>)))
      :bind
      (:map lsp-mode-map
            (<span style="color:#e6db74">&#34;C-c C-r&#34;</span> <span style="color:#f92672">.</span> lsp-ui-peek-find-references)
            (<span style="color:#e6db74">&#34;C-c C-j&#34;</span> <span style="color:#f92672">.</span> lsp-ui-peek-find-definitions)
            (<span style="color:#e6db74">&#34;C-c i&#34;</span> <span style="color:#f92672">.</span> lsp-ui-peek-find-implementation)
            (<span style="color:#e6db74">&#34;C-c m&#34;</span> <span style="color:#f92672">.</span> lsp-ui-imenu)
            (<span style="color:#e6db74">&#34;C-c s&#34;</span> <span style="color:#f92672">.</span> lsp-ui-sideline-mode)
            (<span style="color:#e6db74">&#34;C-c d&#34;</span> <span style="color:#f92672">.</span> ladicle/toggle-lsp-ui-doc))
      :hook
      (lsp-mode <span style="color:#f92672">.</span> lsp-ui-mode))

    <span style="color:#75715e">;; (lsp-register-client</span>
    <span style="color:#75715e">;;  (make-lsp-client :new-connection (lsp-stdio-connection</span>
    <span style="color:#75715e">;;                                    (lambda () (cons &#34;bingo&#34;</span>
    <span style="color:#75715e">;;                                                     lsp-clients-go-server-args)))</span>
    <span style="color:#75715e">;;                   :major-modes &#39;(go-mode)</span>
    <span style="color:#75715e">;;                   :priority 2</span>
    <span style="color:#75715e">;;                   :initialization-options &#39;lsp-clients-go--make-init-options</span>
    <span style="color:#75715e">;;                   :server-id &#39;go-bingo</span>
    <span style="color:#75715e">;;                   :library-folders-fn (lambda (_workspace)</span>
    <span style="color:#75715e">;;                                         lsp-clients-go-library-directories)))</span>

    <span style="color:#75715e">;; DAP</span>
    (use-package dap-mode
      :custom
      (dap-go-debug-program <span style="color:#f92672">`</span>(<span style="color:#e6db74">&#34;node&#34;</span> <span style="color:#e6db74">&#34;~/.extensions/go/out/src/debugAdapter/goDebug.js&#34;</span>))
      :config
      (dap-mode <span style="color:#ae81ff">1</span>)
      (require <span style="color:#e6db74">&#39;dap-hydra</span>)
      (require <span style="color:#e6db74">&#39;dap-gdb-lldb</span>) <span style="color:#75715e">; download and expand lldb-vscode to the =~/.extensions/webfreak.debug=</span>
      (require <span style="color:#e6db74">&#39;dap-go</span>) <span style="color:#75715e">; download and expand vscode-go-extenstion to the =~/.extensions/go=</span>
      (use-package dap-ui
        :ensure <span style="color:#66d9ef">nil</span>
        :config
        (dap-ui-mode <span style="color:#ae81ff">1</span>)))

    <span style="color:#75715e">;; Lsp completion</span>
    <span style="color:#75715e">;; (use-package company-lsp)</span>
    )

  <span style="color:#75715e">;; FAQ -- [[https://github.com/emacs-lsp/lsp-java][GitHub - emacs-lsp/lsp-java]]</span>
  <span style="color:#75715e">;; LSP Java is showing to many debug messages, how to stop that? Add the</span>
  <span style="color:#75715e">;; following configuration.</span>
  (setq lsp-inhibit-message <span style="color:#66d9ef">t</span>)


  <span style="color:#75715e">;; (lsp--on-self-insert t)</span>

(defun my-lsp--managed-mode-hook-body ()
  (interactive)
  (remove-hook <span style="color:#e6db74">&#39;post-self-insert-hook</span> <span style="color:#e6db74">&#39;lsp--on-self-insert</span> <span style="color:#66d9ef">t</span>)
  (setq-local indent-region-function (function handle-formatters)))


<span style="color:#75715e">;; But how do I remove it for all lsp buffers?</span>
<span style="color:#75715e">;; (remove-hook &#39;post-self-insert-hook &#39;lsp--on-self-insert)</span>
<span style="color:#75715e">;; (remove-hook &#39;post-self-insert-hook &#39;lsp--on-self-insert t)</span>
(add-hook <span style="color:#e6db74">&#39;lsp--managed-mode-hook</span> <span style="color:#a6e22e">#&#39;</span>my-lsp--managed-mode-hook-body)

  <span style="color:#75715e">;; (remove-hook &#39;lsp--managed-mode-hook (lm (remove-hook &#39;post-self-insert-hook &#39;lsp--on-self-insert t)))</span>


(defun lsp-ui-flycheck-list ()
  <span style="color:#e6db74">&#34;List all the diagnostics in the whole workspace.&#34;</span>
  (interactive)
  (let ((buffer (<span style="color:#a6e22e">get-buffer-create</span> <span style="color:#e6db74">&#34;*lsp-diagnostics*&#34;</span>))
        (workspace lsp--cur-workspace)
        (window (<span style="color:#a6e22e">selected-window</span>)))
    (with-current-buffer buffer
      (lsp-ui-flycheck-list--update window workspace))
    (add-hook <span style="color:#e6db74">&#39;lsp-after-diagnostics-hook</span> <span style="color:#e6db74">&#39;lsp-ui-flycheck-list--refresh</span> <span style="color:#66d9ef">nil</span> <span style="color:#66d9ef">t</span>)
    (setq lsp-ui-flycheck-list--buffer buffer)
    (display-buffer
     buffer)))



(<span style="color:#a6e22e">define-key</span> lsp-ui-imenu-mode-map (kbd <span style="color:#e6db74">&#34;&lt;return&gt;&#34;</span>) <span style="color:#e6db74">&#39;lsp-ui-imenu--view</span>)
(<span style="color:#a6e22e">define-key</span> lsp-ui-imenu-mode-map (kbd <span style="color:#e6db74">&#34;RET&#34;</span>) <span style="color:#e6db74">&#39;lsp-ui-imenu--view</span>)


(<span style="color:#a6e22e">define-key</span> lsp-ui-flycheck-list-mode-map (kbd <span style="color:#e6db74">&#34;&lt;M-RET&gt;&#34;</span>) <span style="color:#e6db74">&#39;lsp-ui-flycheck-list--visit</span>)
(<span style="color:#a6e22e">define-key</span> lsp-ui-flycheck-list-mode-map (kbd <span style="color:#e6db74">&#34;RET&#34;</span>) <span style="color:#e6db74">&#39;lsp-ui-flycheck-list--view</span>)


(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map (kbd <span style="color:#e6db74">&#34;&lt;prior&gt;&#34;</span>) <span style="color:#a6e22e">#&#39;</span>lsp-ui-peek--select-prev-file)
(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map (kbd <span style="color:#e6db74">&#34;&lt;next&gt;&#34;</span>) <span style="color:#a6e22e">#&#39;</span>lsp-ui-peek--select-next-file)

(require <span style="color:#e6db74">&#39;helm-lsp</span>)


<span style="color:#75715e">;; This is extremely slow.</span>
<span style="color:#75715e">;; It may be quite nice, but it&#39;s not nice enough. I can&#39;t do any programming with it</span>
<span style="color:#75715e">;; I have broken python-language-server (pyls) now, so I have to use this</span>
<span style="color:#75715e">;; pyls wasnt even broken. lsp-mode is broken, i think</span>

<span style="color:#75715e">;; the microsoft server a) doesn&#39;t free resources</span>
<span style="color:#75715e">;; b)  breaks after reopening a file&#39;</span>
<span style="color:#75715e">;; (use-package lsp-python-ms</span>
<span style="color:#75715e">;;   :ensure t</span>
<span style="color:#75715e">;;   :init (progn (setq lsp-python-ms-auto-install-server t)</span>
<span style="color:#75715e">;;                (setq lsp-python-ms-executable</span>
<span style="color:#75715e">;;                      &#34;/home/shane/scripts/ms-pyls&#34;))</span>
<span style="color:#75715e">;;   :hook (python-mode . (lambda ()</span>
<span style="color:#75715e">;;                          (require &#39;lsp-python-ms)</span>
<span style="color:#75715e">;;                          (lsp))))</span>
                                        <span style="color:#75715e">; or lsp-deferred</span>





<span style="color:#75715e">;; For some reason this variable doesnt change when I set it</span>
<span style="color:#75715e">;; It only updates when i redefine =dap-python-debug-and-hydra=</span>
(setq dap-python-executable <span style="color:#e6db74">&#34;python-for-lsp&#34;</span>)


<span style="color:#75715e">;; This must be out of date</span>
(defun dap-python-debug-and-hydra (<span style="color:#66d9ef">&amp;optional</span> cmd pyver)
  (interactive)
  (if cmd
      (progn
        (if pyver
            (sh-notty (<span style="color:#a6e22e">concat</span> <span style="color:#e6db74">&#34;cd /home/shane/scripts; ln -sf `which &#34;</span> pyver <span style="color:#e6db74">&#34;` python-for-lsp-sym&#34;</span>)))

        (let* ((cmdwords (s-split <span style="color:#e6db74">&#34; &#34;</span> cmd))
               (scriptname (<span style="color:#a6e22e">car</span> cmdwords))
               (args (umn (s-join <span style="color:#e6db74">&#34; &#34;</span> (<span style="color:#a6e22e">cdr</span> cmdwords)))))
          (with-current-buffer (find-file (umn scriptname))
            (save-excursion
              (dap-debug <span style="color:#f92672">`</span>(:type <span style="color:#e6db74">&#34;python&#34;</span> :args <span style="color:#f92672">,</span>args :cwd OBnil :target-module <span style="color:#66d9ef">nil</span> :request <span style="color:#e6db74">&#34;launch&#34;</span> :name <span style="color:#e6db74">&#34;Python :: Run Configuration&#34;</span>)))
            (find-file (umn scriptname)))))
    (progn
      (let ((cbuf (<span style="color:#a6e22e">current-buffer</span>)))
        <span style="color:#75715e">;; (message &#34;hi&#34;)</span>
        (dap-debug <span style="color:#f92672">`</span>(:type <span style="color:#e6db74">&#34;python&#34;</span> :args <span style="color:#e6db74">&#34;&#34;</span> :cwd <span style="color:#66d9ef">nil</span> :target-module <span style="color:#66d9ef">nil</span> :request <span style="color:#e6db74">&#34;launch&#34;</span> :name <span style="color:#e6db74">&#34;Python :: Run Configuration&#34;</span>))
        (switch-to-buffer cbuf)))))


(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map <span style="color:#e6db74">&#34;j&#34;</span> (kbd <span style="color:#e6db74">&#34;&lt;down&gt;&#34;</span>))
(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map <span style="color:#e6db74">&#34;k&#34;</span> (kbd <span style="color:#e6db74">&#34;&lt;up&gt;&#34;</span>))

(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map <span style="color:#e6db74">&#34;h&#34;</span> (kbd <span style="color:#e6db74">&#34;&lt;left&gt;&#34;</span>))
(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map <span style="color:#e6db74">&#34;l&#34;</span> (kbd <span style="color:#e6db74">&#34;&lt;right&gt;&#34;</span>))

<span style="color:#75715e">;; my-mode-map overrides this</span>
(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map (kbd <span style="color:#e6db74">&#34;M-p&#34;</span>) (kbd <span style="color:#e6db74">&#34;&lt;left&gt;&#34;</span>))
(<span style="color:#a6e22e">define-key</span> lsp-ui-peek-mode-map (kbd <span style="color:#e6db74">&#34;M-n&#34;</span>) (kbd <span style="color:#e6db74">&#34;&lt;right&gt;&#34;</span>))

<span style="color:#75715e">;; (defun lsp:marked-string-value</span>
<span style="color:#75715e">;;       (object)</span>
<span style="color:#75715e">;;     (when</span>
<span style="color:#75715e">;;         (ht\? object)</span>
<span style="color:#75715e">;;       (gethash &#34;value&#34; object)))</span>
<span style="color:#75715e">;; (defun lsp:set-marked-string-value</span>
<span style="color:#75715e">;;     (object value)</span>
<span style="color:#75715e">;;   (puthash &#34;value&#34; value object)</span>
<span style="color:#75715e">;;   object)</span>



<span style="color:#75715e">;; This minimises the doc string</span>
(defun lsp-ui-doc--extract-marked-string (marked-string <span style="color:#66d9ef">&amp;optional</span> language)
  <span style="color:#e6db74">&#34;Render the MARKED-STRING with LANGUAGE.&#34;</span>
  (string-trim-right
   (let* ((<span style="color:#a6e22e">string</span> (if (<span style="color:#a6e22e">stringp</span> marked-string)
                      (mnm marked-string)
                    (lsp:markup-content-value marked-string)))
          (with-lang (lsp-marked-string? marked-string))
          (language (or (and with-lang
                             (or (lsp:marked-string-language marked-string)
                                 (lsp:markup-content-kind marked-string)))
                        language))
          (markdown-hr-display-char <span style="color:#66d9ef">nil</span>))
     (cond
      (lsp-ui-doc-use-webkit
       (if (and language (not (string= <span style="color:#e6db74">&#34;text&#34;</span> language)))
           (<span style="color:#a6e22e">format</span> <span style="color:#e6db74">&#34;```%s\n%s\n```&#34;</span> language <span style="color:#a6e22e">string</span>)
         <span style="color:#a6e22e">string</span>))
      (<span style="color:#66d9ef">t</span> (lsp--render-element (lsp-ui-doc--inline-formatted-string <span style="color:#a6e22e">string</span>)))))))


<span style="color:#75715e">;; This minimises the sideline strings</span>
(defun lsp-ui-sideline--extract-info (contents)
  <span style="color:#e6db74">&#34;Extract the line to print from CONTENTS.
</span><span style="color:#e6db74">CONTENTS can be differents type of values:
</span><span style="color:#e6db74">MarkedString | MarkedString[] | MarkupContent (as defined in the LSP).
</span><span style="color:#e6db74">We prioritize string with a language (which is probably a type or a
</span><span style="color:#e6db74">function signature).&#34;</span>
  (when contents
    (cond
     ((lsp-marked-string? contents)
      (lsp:set-marked-string-value contents (mnm (lsp:marked-string-value contents)))
      contents)
     ((<span style="color:#a6e22e">vectorp</span> contents)
      (seq-find (lambda (it) (and (lsp-marked-string? it)
                                  (lsp-get-renderer (lsp:marked-string-language it))))
                contents))
     ((lsp-markup-content? contents)
      <span style="color:#75715e">;; This successfully minimises haskell sideline strings</span>
      (lsp:set-markup-content-value contents (mnm (lsp:markup-content-value contents)))
      contents))))


<span style="color:#75715e">;; nadvice - proc is the original function, passed in. do not modify</span>
<span style="color:#75715e">;; (defun lsp-ui-peek-find-references-around-advice (proc &amp;rest args)</span>
<span style="color:#75715e">;;   (let ((res (apply proc args)</span>
<span style="color:#75715e">;;              (tvipe &#34;hi&#34;)))</span>
<span style="color:#75715e">;;     res)</span>

<span style="color:#75715e">;;   ;; (cl-letf (((symbol-function &#39;sexp-at-point) #&#39;my/thing-at-point))</span>
<span style="color:#75715e">;;   ;;   (let ((res (apply proc args)))</span>
<span style="color:#75715e">;;   ;;     res))</span>
<span style="color:#75715e">;;   )</span>
<span style="color:#75715e">;; (advice-add &#39;lsp-ui-peek-find-references :around #&#39;lsp-ui-peek-find-references-around-advice)</span>
<span style="color:#75715e">;; (advice-remove &#39;lsp-ui-peek-find-references #&#39;lsp-ui-peek-find-references-around-advice)</span>

(advice-remove-all-from <span style="color:#e6db74">&#39;lsp-ui-peek-find-references</span>)


(defun lsp-ui-peek--find-xrefs (input method param)
  <span style="color:#e6db74">&#34;Find INPUT references.
</span><span style="color:#e6db74">METHOD is ‘references’, ‘definitions’, `implementation` or a custom kind.
</span><span style="color:#e6db74">PARAM is the request params.&#34;</span>
  (setq lsp-ui-peek--method method)
  (let ((xrefs (lsp-ui-peek--get-references method param)))
    (unless xrefs
      (<span style="color:#a6e22e">user-error</span> <span style="color:#e6db74">&#34;Not found for: %s&#34;</span>  input))
    (xref-push-marker-stack)
    (when (featurep <span style="color:#e6db74">&#39;evil-jumps</span>)
      (lsp-ui-peek--with-evil-jumps (evil-set-jump)))
    (if (and (not lsp-ui-peek-always-show)
             (not (<span style="color:#a6e22e">cdr</span> xrefs))
             (<span style="color:#a6e22e">=</span> (<span style="color:#a6e22e">length</span> (<span style="color:#a6e22e">plist-get</span> (<span style="color:#a6e22e">car</span> xrefs) :xrefs)) <span style="color:#ae81ff">1</span>))
        (<span style="color:#a6e22e">error</span> <span style="color:#e6db74">&#34;Here is the only instance.&#34;</span>)
        <span style="color:#75715e">;; (let ((x (car (plist-get (car xrefs) :xrefs))))</span>
        <span style="color:#75715e">;;   (-if-let (uri (lsp:location-uri x))</span>
        <span style="color:#75715e">;;       (-let (((&amp;Range :start (&amp;Position :line :character)) (lsp:location-range x)))</span>
        <span style="color:#75715e">;;         (lsp-ui-peek--goto-xref `(:file ,(lsp--uri-to-path uri) :line ,line :column ,character)))</span>
        <span style="color:#75715e">;;     (-let (((&amp;Range :start (&amp;Position :line :character)) (or (lsp:location-link-target-selection-range x)</span>
        <span style="color:#75715e">;;                                                              (lsp:location-link-target-range x))))</span>
        <span style="color:#75715e">;;       (lsp-ui-peek--goto-xref `(:file ,(lsp--uri-to-path (lsp:location-link-target-uri x)) :line ,line :column ,character)))))</span>
        (lsp-ui-peek-mode)
        (lsp-ui-peek--show xrefs))))


<span style="color:#75715e">;; The threshold didn&#39;t work, so I&#39;ve disabled them</span>
(setq lsp-enable-file-watchers <span style="color:#66d9ef">nil</span>)
(setq lsp-file-watch-threshold <span style="color:#ae81ff">10</span>)


(lsp-defun lsp-ui-doc--callback ((hover &amp;as &amp;Hover? :contents) bounds buffer)
  <span style="color:#e6db74">&#34;Process the received documentation.
</span><span style="color:#e6db74">HOVER is the doc returned by the LS.
</span><span style="color:#e6db74">BOUNDS are points of the symbol that have been requested.
</span><span style="color:#e6db74">BUFFER is the buffer where the request has been made.&#34;</span>
  (if
      (not (and
            hover
            (<span style="color:#a6e22e">&gt;=</span> (<span style="color:#a6e22e">point</span>) (<span style="color:#a6e22e">car</span> bounds)) (<span style="color:#a6e22e">&lt;=</span> (<span style="color:#a6e22e">point</span>) (<span style="color:#a6e22e">cdr</span> bounds))
            (<span style="color:#a6e22e">eq</span> buffer (<span style="color:#a6e22e">current-buffer</span>))))
      (setq contents <span style="color:#e6db74">&#34;-&#34;</span>)
    (setq contents (or (-some-&gt;&gt;
                        <span style="color:#75715e">;; &#34;shane&#34;</span>
                        contents
                        lsp-ui-doc--extract
                        (replace-regexp-in-string <span style="color:#e6db74">&#34;\r&#34;</span> <span style="color:#e6db74">&#34;&#34;</span>))
                       <span style="color:#75715e">;; (replace-regexp-in-string &#34;\r&#34; &#34;&#34; (lsp-ui-doc--extract contents))</span>
                       <span style="color:#e6db74">&#34;Cant extract or docs are empty&#34;</span>)))

  (progn
    (setq lsp-ui-doc--bounds bounds)
    (lsp-ui-doc--display
     (thing-at-point <span style="color:#e6db74">&#39;symbol</span> <span style="color:#66d9ef">t</span>)
     contents))
  <span style="color:#75715e">;; (lsp-ui-doc--hide-frame)</span>
  )


(defun lsp-ui-doc--extract (contents)
  <span style="color:#e6db74">&#34;Extract the documentation from CONTENTS.
</span><span style="color:#e6db74">CONTENTS can be differents type of values:
</span><span style="color:#e6db74">MarkedString | MarkedString[] | MarkupContent (as defined in the LSP).
</span><span style="color:#e6db74">We don&#39;t extract the string that </span><span style="color:#e6db74">`lps-line&#39;</span><span style="color:#e6db74"> is already displaying.&#34;</span>
  <span style="color:#75715e">;; (tvipe contents)</span>
  (cond
   ((<span style="color:#a6e22e">vectorp</span> contents) <span style="color:#75715e">;; MarkedString[]</span>
    (<span style="color:#a6e22e">mapconcat</span> <span style="color:#e6db74">&#39;lsp-ui-doc--extract-marked-string</span>
               (lsp-ui-doc--filter-marked-string (seq-filter <span style="color:#a6e22e">#&#39;identity</span> contents))
               <span style="color:#e6db74">&#34;\n\n&#34;</span>
               <span style="color:#75715e">;; (propertize &#34;\n\n&#34; &#39;face &#39;(:height 0.4))</span>
               ))
   <span style="color:#75715e">;; when we get markdown contents, render using emacs gfm-view-mode / markdown-mode</span>
   ((and (lsp-marked-string? contents)
         (lsp:marked-string-language contents))
    (lsp-ui-doc--extract-marked-string (lsp:marked-string-value contents)
                                       (lsp:marked-string-language contents)))
   ((lsp-marked-string? contents) (lsp-ui-doc--extract-marked-string contents))
   ((and (lsp-markup-content? contents)
         (string= (lsp:markup-content-kind contents) lsp/markup-kind-markdown))
    (lsp-ui-doc--extract-marked-string (lsp:markup-content-value contents) lsp/markup-kind-markdown))
   ((and (lsp-markup-content? contents)
         (string= (lsp:markup-content-kind contents) lsp/markup-kind-plain-text))
    (lsp:markup-content-value contents))
   (<span style="color:#66d9ef">t</span>
    <span style="color:#75715e">;; This makes python work</span>
    contents)))


<span style="color:#75715e">;; lsp-ui-doc--extract</span>
<span style="color:#75715e">;; TODO Keep markdown</span>
(defun my-lsp-get-hover-docs ()
  (interactive)
  (let* ((ht (lsp-request <span style="color:#e6db74">&#34;textDocument/hover&#34;</span> (lsp--text-document-position-params)))
         (docs
          (if (<span style="color:#a6e22e">hash-table-p</span> ht)
              (lsp-ui-doc--extract (<span style="color:#a6e22e">gethash</span> <span style="color:#e6db74">&#34;contents&#34;</span> ht))
            <span style="color:#e6db74">&#34;&#34;</span>)))
    (if (and docs (not (string-empty-p docs))) (if (called-interactively-p <span style="color:#e6db74">&#39;interactive</span>)
                                                   <span style="color:#75715e">;; (tvd docs)</span>
                                                   (new-buffer-from-string docs)
                                                 docs)
      (<span style="color:#a6e22e">error</span> <span style="color:#e6db74">&#34;No docs&#34;</span>))))

(<span style="color:#a6e22e">define-key</span> lsp-mode-map (kbd <span style="color:#e6db74">&#34;s-l 9&#34;</span>) <span style="color:#e6db74">&#39;my-lsp-get-hover-docs</span>)
(<span style="color:#a6e22e">define-key</span> lsp-mode-map (kbd <span style="color:#e6db74">&#34;s-9&#34;</span>) <span style="color:#e6db74">&#39;my-lsp-get-hover-docs</span>)
(<span style="color:#a6e22e">define-key</span> global-map (kbd <span style="color:#e6db74">&#34;s-i&#34;</span>) <span style="color:#e6db74">&#39;lsp-install-server</span>)


(setq lsp-enable-on-type-formatting <span style="color:#66d9ef">nil</span>)


<span style="color:#75715e">;; (define-key lsp-ui-imenu-mode-map (kbd &#34;M-n&#34;) (kbd &#34;&lt;down&gt;&#34;))</span>

(advice-add <span style="color:#e6db74">&#39;lsp--document-highlight</span> :around <span style="color:#a6e22e">#&#39;</span>ignore-errors-around-advice)

<span style="color:#75715e">;; (advice-add &#39;lsp--build-workspace-configuration-response :around #&#39;ignore-errors-around-advice)</span>
<span style="color:#75715e">;; (advice-remove &#39;lsp--build-workspace-configuration-response #&#39;ignore-errors-around-advice)</span>


(defun lsp-list-all-servers ()
  (<span style="color:#a6e22e">mapcar</span> <span style="color:#e6db74">&#39;car</span> (--map (<span style="color:#a6e22e">cons</span> (<span style="color:#a6e22e">funcall</span>
                             (-compose <span style="color:#a6e22e">#&#39;symbol-name</span> <span style="color:#a6e22e">#&#39;</span>lsp--client-server-id) it) it)
                      (or (-&gt;&gt; lsp-clients
                               (ht-values)
                               (-filter (-andfn
                                         (-orfn (-not <span style="color:#a6e22e">#&#39;</span>lsp--server-binary-present?)
                                                (-const <span style="color:#66d9ef">t</span>))
                                         (-not <span style="color:#a6e22e">#&#39;</span>lsp--client-download-in-progress?)
                                         <span style="color:#a6e22e">#&#39;</span>lsp--client-download-server-fn)))
                          (<span style="color:#a6e22e">user-error</span> <span style="color:#e6db74">&#34;There are no servers with automatic installation&#34;</span>)))))


(defun lsp-get-server-for-install (name)
  (interactive (<span style="color:#a6e22e">list</span> (fz (lsp-list-all-servers))))
  (<span style="color:#a6e22e">cdr</span> (<span style="color:#a6e22e">car</span> (-filter (lambda (sv) (<span style="color:#a6e22e">string-equal</span> (<span style="color:#a6e22e">car</span> sv) name))
                     (--map (<span style="color:#a6e22e">cons</span> (<span style="color:#a6e22e">funcall</span>
                                   (-compose <span style="color:#a6e22e">#&#39;symbol-name</span> <span style="color:#a6e22e">#&#39;</span>lsp--client-server-id) it) it)
                            (or (-&gt;&gt; lsp-clients
                                     (ht-values)
                                     (-filter (-andfn
                                               (-orfn (-not <span style="color:#a6e22e">#&#39;</span>lsp--server-binary-present?)
                                                      (-const <span style="color:#66d9ef">t</span>))
                                               (-not <span style="color:#a6e22e">#&#39;</span>lsp--client-download-in-progress?)
                                               <span style="color:#a6e22e">#&#39;</span>lsp--client-download-server-fn)))
                                (<span style="color:#a6e22e">user-error</span> <span style="color:#e6db74">&#34;There are no servers with automatic installation&#34;</span>)))))))

(defun lsp-install-server-by-name (name)
  (interactive (<span style="color:#a6e22e">list</span> (fz (lsp-list-all-servers))))
  (lsp--install-server-internal (lsp-get-server-for-install name)))


(defun lsp--sort-completions (completions)
  (lsp-completion--sort-completions completions))

(defun lsp--annotate (item)
  (lsp-completion--annotate item))

(defun lsp--resolve-completion (item)
  (lsp-completion--resolve item))

(defun lsp-install-server-update-advice (proc update)
  (cond
   (update (setq update <span style="color:#66d9ef">nil</span>))
   ((not update) (setq update <span style="color:#66d9ef">t</span>)))
  (let ((res (<span style="color:#a6e22e">apply</span> proc (<span style="color:#a6e22e">list</span> update))))
    res))
(advice-add <span style="color:#e6db74">&#39;lsp-install-server</span> :around <span style="color:#a6e22e">#&#39;</span>lsp-install-server-update-advice)
<span style="color:#75715e">;; (advice-remove &#39;lsp-install-server #&#39;lsp-install-server-update-advice)</span>

<span style="color:#75715e">;; (advice-add &#39;lsp-install-server :around #&#39;invert-prefix-advice)</span>
<span style="color:#75715e">;; (advice-remove &#39;lsp-install-server #&#39;invert-prefix-advice)</span>


<span style="color:#75715e">;; These commands should only be run when lsp is running</span>
<span style="color:#75715e">;; But I may want them here just to look them up</span>
(<span style="color:#a6e22e">define-key</span> global-map (kbd lsp-keymap-prefix) lsp-command-map)




<span style="color:#75715e">;; one of these breaks</span>
(setq lsp-completion-no-cache <span style="color:#66d9ef">t</span>)
(setq lsp-display-inline-image <span style="color:#66d9ef">nil</span>)
<span style="color:#75715e">;; (setq lsp-document-sync-method &#39;incremental)</span>
(setq lsp-document-sync-method <span style="color:#66d9ef">nil</span>)
<span style="color:#75715e">;; (setq lsp-document-sync-method &#39;full)</span>
<span style="color:#75715e">;; This makes bash look bad with an entire</span>
(setq lsp-eldoc-render-all <span style="color:#66d9ef">nil</span>)
<span style="color:#75715e">;; (setq lsp-eldoc-render-all nil)</span>
(setq lsp-enable-dap-auto-configure <span style="color:#66d9ef">t</span>)
<span style="color:#75715e">;; (setq lsp-enable-file-watchers t)</span>
(setq lsp-enable-file-watchers <span style="color:#66d9ef">nil</span>)
(setq lsp-enable-folding <span style="color:#66d9ef">t</span>)
(setq lsp-enable-imenu <span style="color:#66d9ef">t</span>)
<span style="color:#75715e">;; (setq lsp-enable-indentation nil)</span>
(setq lsp-enable-indentation <span style="color:#66d9ef">t</span>)
(setq lsp-enable-links <span style="color:#66d9ef">t</span>)
<span style="color:#75715e">;; (setq lsp-enable-on-type-formatting nil)</span>
(setq lsp-enable-on-type-formatting <span style="color:#66d9ef">t</span>)
<span style="color:#75715e">;; (setq lsp-enable-semantic-highlighting nil)</span>
(setq lsp-enable-semantic-highlighting <span style="color:#66d9ef">t</span>)
(setq lsp-enable-snippet <span style="color:#66d9ef">t</span>)
(setq lsp-enable-symbol-highlighting <span style="color:#66d9ef">t</span>)
(setq lsp-enable-text-document-color <span style="color:#66d9ef">t</span>)
(setq lsp-enable-xref <span style="color:#66d9ef">t</span>)
(setq lsp-folding-line-folding-only <span style="color:#66d9ef">t</span>)
<span style="color:#75715e">;; nil no limit</span>
(setq lsp-lens-debounce-interval <span style="color:#ae81ff">0.2</span>)
(setq lsp-folding-range-limit <span style="color:#66d9ef">nil</span>)
<span style="color:#75715e">;; (setq lsp-lens-enable nil)</span>
(setq lsp-lens-enable <span style="color:#66d9ef">t</span>)
<span style="color:#75715e">;; (setq lsp-log-io t)</span>
(setq lsp-log-io <span style="color:#66d9ef">nil</span>)
<span style="color:#75715e">;; (setq lsp-server-trace t)</span>
(setq lsp-server-trace <span style="color:#66d9ef">nil</span>)
<span style="color:#75715e">;; (setq lsp-print-performance t)</span>
(setq lsp-print-performance <span style="color:#66d9ef">nil</span>)

(setq lsp-modeline-code-actions-enable <span style="color:#66d9ef">t</span>)

(setq lsp-modeline-code-actions-segments <span style="color:#f92672">&#39;</span>(count name))
(setq lsp-headerline-breadcrumb-enable <span style="color:#66d9ef">t</span>)
(setq lsp-headerline-breadcrumb-segments <span style="color:#f92672">&#39;</span>(path-up-to-project file))


(defun lsp-on-change-around-advice (proc <span style="color:#66d9ef">&amp;rest</span> args)
  (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;lsp-on-change called with args %S&#34;</span> args)
  (let ((res (<span style="color:#a6e22e">apply</span> proc args)))
    (<span style="color:#a6e22e">message</span> <span style="color:#e6db74">&#34;lsp-on-change returned %S&#34;</span> res)
    res))
<span style="color:#75715e">;; (advice-add &#39;lsp-on-change :around #&#39;lsp-on-change-around-advice)</span>
(advice-remove <span style="color:#e6db74">&#39;lsp-on-change</span> <span style="color:#a6e22e">#&#39;</span>lsp-on-change-around-advice)


(require <span style="color:#e6db74">&#39;lsp-headerline</span>)
(defun lsp-headerline--arrow-icon ()
  <span style="color:#e6db74">&#34;Build the arrow icon for headerline breadcrumb.&#34;</span>
  <span style="color:#75715e">;; (if (require &#39;all-the-icons nil t)</span>
  <span style="color:#75715e">;;     (all-the-icons-material &#34;chevron_right&#34;</span>
  <span style="color:#75715e">;;                             :face &#39;lsp-headerline-breadcrumb-separator-face)</span>
  <span style="color:#75715e">;;   (propertize &#34;›&#34; &#39;face &#39;lsp-headerline-breadcrumb-separator-face))</span>
  (<span style="color:#a6e22e">propertize</span> <span style="color:#e6db74">&#34;›&#34;</span> <span style="color:#e6db74">&#39;face</span> <span style="color:#e6db74">&#39;lsp-headerline-breadcrumb-separator-face</span>))

<span style="color:#75715e">;; I&#39;m not sure why, but it wont overload normally, so do this</span>
<span style="color:#75715e">;; (defun ... (defun does actually work</span>
<span style="color:#75715e">;; (add-hook &#39;lsp-mode-hook &#39;define-my-lsp-overridden)</span>


(defun dired-lsp-binaries ()
  (interactive)
  (dired lsp-server-install-dir))


(defun lsp-ui-peek-find-references (<span style="color:#66d9ef">&amp;optional</span> include-declaration extra)
  <span style="color:#e6db74">&#34;Find references to the IDENTIFIER at point.&#34;</span>
  (interactive)

  <span style="color:#75715e">;; (try-deselected-and-maybe-reselect</span>
  <span style="color:#75715e">;;  (let ((thing (str2sym (my/thing-at-point))</span>
  <span style="color:#75715e">;;               ;; (symbol-at-point)</span>
  <span style="color:#75715e">;;               ))</span>
  <span style="color:#75715e">;;    (lsp-ui-peek--find-xrefs thing</span>
  <span style="color:#75715e">;;                             &#34;textDocument/references&#34;</span>
  <span style="color:#75715e">;;                             (append extra (lsp--make-reference-params nil include-declaration)))))</span>

  (let ((thing (str2sym (my/thing-at-point)))
        (p (<span style="color:#a6e22e">point</span>))
        (m (mark))
        (s (selected-p)))
    (deselect)
    (<span style="color:#a6e22e">eval</span>
     <span style="color:#f92672">`</span>(try
       <span style="color:#75715e">;; Try this, otherwise, reselect</span>
       (lsp-ui-peek--find-xrefs <span style="color:#e6db74">&#39;,thing</span>
                                <span style="color:#e6db74">&#34;textDocument/references&#34;</span>
                                (<span style="color:#a6e22e">append</span> <span style="color:#f92672">,</span>extra (lsp--make-reference-params <span style="color:#66d9ef">nil</span> <span style="color:#f92672">,</span>include-declaration)))
       (progn
         (set-mark <span style="color:#f92672">,</span>m)
         (<span style="color:#a6e22e">goto-char</span> <span style="color:#f92672">,</span>p)
         <span style="color:#f92672">,</span>(if s
              <span style="color:#f92672">&#39;</span>(progn
                 (activate-mark))
            <span style="color:#f92672">&#39;</span>(progn
               (deactivate-mark)))
         (<span style="color:#a6e22e">error</span> <span style="color:#e6db74">&#34;lsp-ui-peek-find-references failed&#34;</span>))))))



<span style="color:#75715e">;; (defcustom lsp-racket-langserver-command &#39;(&#34;racket&#34; &#34;--lib&#34; &#34;racket-langserver&#34;)</span>
<span style="color:#75715e">;;   &#34;Command to start the server.&#34;</span>
<span style="color:#75715e">;;   :type &#39;string</span>
<span style="color:#75715e">;;   :package-version &#39;(lsp-mode . &#34;7.1&#34;))</span>
(defcustom lsp-racket-langserver-command <span style="color:#f92672">&#39;</span>(<span style="color:#e6db74">&#34;racket-langserver&#34;</span>)
  <span style="color:#e6db74">&#34;Command to start the server.&#34;</span>
  :type <span style="color:#e6db74">&#39;string</span>
  :package-version <span style="color:#f92672">&#39;</span>(lsp-mode <span style="color:#f92672">.</span> <span style="color:#e6db74">&#34;7.1&#34;</span>))
(setq lsp-racket-langserver-command <span style="color:#e6db74">&#34;racket-langserver&#34;</span>)



<span style="color:#75715e">;; This didn&#39;t work</span>
<span style="color:#75715e">;; These modes are yaml</span>
<span style="color:#75715e">;; (dolist (m &#39;(yaml-mode</span>
<span style="color:#75715e">;;              gitlab-ci-mode))</span>
<span style="color:#75715e">;;   (add-to-list &#39;lsp-language-id-configuration `(,m . &#34;yaml&#34;)))</span>


<span style="color:#75715e">;; I needed this</span>
<span style="color:#75715e">;; Yaml</span>
<span style="color:#75715e">;; vim +/&#34;(lsp-register-client&#34; &#34;$EMACSD/packages26/lsp-mode-20200925.18/lsp-yaml.el&#34;</span>
<span style="color:#75715e">;; Added gitlab-ci-mode</span>
(lsp-register-client
 (make-lsp-client :new-connection (lsp-stdio-connection
                                   (lambda ()
                                     <span style="color:#f92672">`</span>(<span style="color:#f92672">,</span>(or (executable-find (cl-first lsp-yaml-server-command))
                                            (lsp-package-path <span style="color:#e6db74">&#39;yaml-language-server</span>))
                                       <span style="color:#f92672">,@</span>(cl-rest lsp-yaml-server-command))))
                  :major-modes <span style="color:#f92672">&#39;</span>(yaml-mode
                                 gitlab-ci-mode)
                  :priority <span style="color:#ae81ff">0</span>
                  :server-id <span style="color:#e6db74">&#39;yamlls</span>
                  :initialized-fn (lambda (workspace)
                                    (with-lsp-workspace workspace
                                      (lsp--set-configuration
                                       (lsp-configuration-section <span style="color:#e6db74">&#34;yaml&#34;</span>))))
                  :download-server-fn (lambda (_client callback error-callback _update?)
                                        (lsp-package-ensure <span style="color:#e6db74">&#39;yaml-language-server</span>
                                                            callback error-callback))))



(defun lsp--create-default-error-handler-around-advice (proc <span style="color:#66d9ef">&amp;rest</span> args)
  (lambda (e) <span style="color:#66d9ef">nil</span>)
  <span style="color:#75715e">;; (let ((res (apply proc args)))</span>
  <span style="color:#75715e">;;   res)</span>
  )
(advice-add <span style="color:#e6db74">&#39;lsp--create-default-error-handler</span> :around <span style="color:#a6e22e">#&#39;</span>lsp--create-default-error-handler-around-advice)


(defun lsp--error-string-around-advice (proc <span style="color:#66d9ef">&amp;rest</span> args)
  <span style="color:#66d9ef">nil</span>
  <span style="color:#75715e">;; (let ((res (apply proc args)))</span>
  <span style="color:#75715e">;;   (if res</span>
  <span style="color:#75715e">;;       (progn</span>
  <span style="color:#75715e">;;         ;; (message res)</span>
  <span style="color:#75715e">;;         &#34;error&#34;))</span>
  <span style="color:#75715e">;;   ;; res</span>
  <span style="color:#75715e">;;   )</span>
  )
(advice-add <span style="color:#e6db74">&#39;lsp--error-string</span> :around <span style="color:#a6e22e">#&#39;</span>lsp--error-string-around-advice)


(defun lsp-around-advice (proc <span style="color:#66d9ef">&amp;rest</span> args)
  (if (myrc-test <span style="color:#e6db74">&#34;lsp&#34;</span> <span style="color:#75715e">;; my-disable-lsp</span>
                 )
      (let ((res (<span style="color:#a6e22e">apply</span> proc args)))
        res)))
(advice-add <span style="color:#e6db74">&#39;lsp</span> :around <span style="color:#a6e22e">#&#39;</span>lsp-around-advice)

(defun lsp-lens-refresh-around-advice (proc <span style="color:#66d9ef">&amp;rest</span> args)
  (if (myrc-test <span style="color:#e6db74">&#34;lsp_lens&#34;</span>)
      (let ((res (<span style="color:#a6e22e">apply</span> proc args)))
        res)))
(advice-add <span style="color:#e6db74">&#39;lsp-lens-refresh</span> :around <span style="color:#a6e22e">#&#39;</span>lsp-lens-refresh-around-advice)

(provide <span style="color:#e6db74">&#39;my-lsp</span>)</code></pre></td></tr></table>
</div>
</div>
]]></content>
        </item>
        
    </channel>
</rss>
